import React from 'react';
import createReactClass from 'create-react-class';
import PropTypes from 'prop-types';
import * as UU5 from "uu5g04";
import "uu5g04-bricks";

import './loading.less';

export const Loading = createReactClass({

  //@@viewOn:mixins
  mixins: [
    UU5.Common.BaseMixin,
    UU5.Common.ElementaryMixin,
    UU5.Common.ContentMixin,
    UU5.Common.ColorSchemaMixin
  ],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: 'Plus4U5.Bricks.Loading',
    classNames: {
      main: 'plus4u5-bricks-loading',
      inline: 'plus4u5-bricks-loading-inline'
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    inline: PropTypes.bool
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps() {
    return {
      inline: false
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render() {
    const mainPropsToPass = this.getMainPropsToPass(['UU5_Common_BaseMixin', 'UU5_Common_ElementaryMixin']);
    if (this.props.inline) {
      mainPropsToPass.className += ' ' + this.getClassName('inline');
    }
    const content = this.props.content || this.props.children;

    return (
      <UU5.Bricks.Div {...mainPropsToPass}>
        <UU5.Bricks.Loading inline colorSchema={this.props.colorSchema} />
        {content && <UU5.Bricks.Div content={content} />}
      </UU5.Bricks.Div>
    );
  }
  //@@viewOff:render
});

export default Loading;
