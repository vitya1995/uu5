import React from 'react';
import createReactClass from 'create-react-class';
import PropTypes from 'prop-types';
import * as UU5 from "uu5g04";
import "uu5g04-bricks";
import * as Plus4U5 from 'uu_plus4u5g01';

export const Error = createReactClass({

  //@@viewOn:mixins
  mixins: [
    UU5.Common.BaseMixin,
    UU5.Common.ElementaryMixin,
    UU5.Common.ContentMixin
  ],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: 'Plus4U5.Bricks.Error',
    classNames: {
      main: 'plus4u5-bricks-error',
    },
    lsi: () => (Plus4U5.Environment.Lsi.Bricks.error)
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    errorData: PropTypes.object,
    error: PropTypes.shape({
      stack: PropTypes.string,
      name: PropTypes.string,
      message: PropTypes.string
    }),
    silent: PropTypes.bool,
    inline: PropTypes.bool,
    errorDataSpace: PropTypes.number // TODO: set deprecated

  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps() {
    return {
      errorData: null,
      error: null,
      silent: false,
      inline: false,
      errorDataSpace: null
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers

  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render: function () {
    let props = this.getMainPropsToPass();
    let children;

    if (!this.props.children && !this.getContent()) {
      props.content = this.getLsiComponent('message');
      if(this.props.inline) {
        props.content = [<span key="message" style={{marginRight: "4px"}}>{this.getLsiComponent('messageFull')}</span>, <Plus4U5.Bricks.LinkHelpdesk key="LinkHelpDesk"/>];
      }
    } else if (this.props.children) {
      children = React.Children.toArray(this.props.children);
    }

    return (
      <UU5.Bricks.Error
        {...props}
        silent={this.props.silent}
        errorData={this.props.errorData}
        inline={this.props.inline}
        error={this.props.error}
        moreInfo
        errorInfo={
          <div>
            {this.getLsiComponent('content')} <Plus4U5.Bricks.LinkHelpdesk />
          </div>
        }
      >
        {children}
      </UU5.Bricks.Error>
    );
  }
  //@@viewOff:render
});

export default Error;
