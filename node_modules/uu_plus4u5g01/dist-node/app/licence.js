import React from "react";
import createReactClass from 'create-react-class';
import PropTypes from "prop-types";
import * as UU5 from "uu5g04";
import "uu5g04-bricks";

import './licence.less';

export const Licence = createReactClass({
  //@@viewOn:mixins
  mixins: [
    UU5.Common.BaseMixin,
    UU5.Common.ElementaryMixin,
    UU5.Common.SectionMixin
  ],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: 'Plus4U5.App.Licence',
    classNames: {
      main: 'plus4u5-app-licence',
      header: 'plus4u5-app-licence-header',
      row: 'plus4u5-app-licence-row',
      rowTitle: 'plus4u5-app-licence-row-title',
      rowContent: 'plus4u5-app-licence-row-content',
    },
    lsi: {
      header: {
        cs: 'Vlastník licence',
        en: 'License'
      },
      organisation: {
        cs: 'Organizace',
        en: 'Organisation'
      },
      authorities: {
        cs: 'Kompetentní osoby',
        en: 'Authorities'
      },
    },
    opt: {
      dummyLevel: true
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    organisation: PropTypes.shape({
      name: PropTypes.string,
      uri: PropTypes.string
    }),
    authorities: PropTypes.arrayOf(
      PropTypes.shape({
        name: PropTypes.string,
        uri: PropTypes.string
      })
    ),
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps() {
    return {
      organisation: null,
      authorities: []
    }
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _getLinks(links) {
    if (!links) return;

    if (Array.isArray(links)) {
      const retArr = [];
      links.forEach((link, i) => {
        retArr.push(<UU5.Bricks.Link key={i} href={link.uri} content={link.name} target="_blank" />);
        if (i < links.length - 1) retArr.push(<span>,&nbsp;</span>);
      });
      return retArr
    } else {
      return <UU5.Bricks.Link href={links.uri} content={links.name} target="_blank" />
    }
  },

  _getRow(title, content) {
    return (
      <UU5.Bricks.Div className={this.getClassName().row}>
        <UU5.Bricks.Span className={this.getClassName().rowTitle} content={title} />
        <UU5.Bricks.Span className={this.getClassName().rowContent} content={this._getLinks(content)} />
      </UU5.Bricks.Div>
    )
  },
  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render() {
    const header = this.props.header || this.getLsiComponent('header');

    return (
      <UU5.Bricks.Section {...this.getMainPropsToPass()} content={null} header={header} level={this.props.level || 4}>
        {this._getRow(this.getLsiComponent('organisation'), this.props.organisation)}
        {this._getRow(this.getLsiComponent('authorities'), this.props.authorities)}
      </UU5.Bricks.Section>
    );
  }
  //@@viewOff:render
});

export default Licence;

