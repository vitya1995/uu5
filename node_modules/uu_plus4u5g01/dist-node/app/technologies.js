import React from "react";
import createReactClass from 'create-react-class';
import PropTypes from "prop-types";
import * as UU5 from "uu5g04";
import "uu5g04-bricks";

import './technologies.less';

export const Technologies = createReactClass({
  //@@viewOn:mixins
  mixins: [
    UU5.Common.BaseMixin,
    UU5.Common.ElementaryMixin,
    UU5.Common.SectionMixin
  ],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: 'Plus4U5.App.Technologies',
    classNames: {
      main: 'plus4u5-app-technologies',
      mainTechnologies: 'plus4u5-app-technologies-main-technologies',
      row: 'plus4u5-app-technologies-row',
    },
    lsi: {
      header: {
        cs: 'Použité technologie',
        en: 'Used Technologies'
      },
      technologies: {
        cs: '<uu5string/>V aplikaci byly použity následující technologie společnosti <UU5.Bricks.Link href="http://www.unicorn.com/" content="Unicorn" target="_blank" />:',
        en: '<uu5string/>In the application were used following <UU5.Bricks.Link href="http://www.unicorn.com/" content="Unicorn" target="_blank" /> technologies:'
      },
    },
    opt: {
      dummyLevel: true
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    technologies: PropTypes.array,
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps() {
    return {
      technologies: []
    }
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _getTechnologies() {
    const technologies = this.props.technologies;
    if (technologies.length > 1) technologies.splice(technologies.length - 1, 0, ' a ');
    const retArr = [];
    technologies.forEach((item, i) => {
      retArr.push(item);
      if (i < technologies.length - 3) retArr.push(', ');
      else retArr.push(' ');
    });
    return retArr;
  },

  _getRows() {
    if (!this.props.content) return;

    if (Array.isArray(this.props.content)) {
      return this.props.content.map((row, i) => <UU5.Bricks.P className={this.getClassName().row}
                                                                 key={i}
                                                                 content={row}
        />
      )
    } else {
      return <UU5.Bricks.P className={this.getClassName().row} content={this.props.content} />
    }
  },
  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render() {
    const header = this.props.header ? this.props.header : this.getLsiComponent('header');

    return (
      <UU5.Bricks.Section {...this.getMainPropsToPass()} header={header} content={null} level={this.props.level || 4}>
        <UU5.Bricks.Div className={this.getClassName().mainTechnologies}>
          <UU5.Bricks.Span>
            {this.getLsiComponent('technologies')}
          </UU5.Bricks.Span>
          <UU5.Bricks.Span content={this._getTechnologies()} />
        </UU5.Bricks.Div>
        {this._getRows()}
      </UU5.Bricks.Section>
    );
  }
  //@@viewOff:render
});

export default Technologies;

