import React from "react";
import createReactClass from 'create-react-class';
import * as UU5 from "uu5g04";
import "uu5g04-bricks";
import NotificationBadgeLoader from './notification-badge-loader_.js';

import './notification-badge.less';

export const NotificationBadge = createReactClass({

  //@@viewOn:mixins
  mixins: [
    UU5.Common.BaseMixin,
    UU5.Common.ElementaryMixin,
    UU5.Common.PureRenderMixin,
    UU5.Common.NestingLevelMixin,
    UU5.Common.IdentityMixin,
    UU5.Common.CcrWriterMixin
  ],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: 'Plus4U5.App.NotificationBadge',
    nestingLevel: 'smallBox',
    classNames: {
      main: 'plus4u5-app-notification-badge'
    },
    opt: {
      nestingLevelWrapper: true,
      ccrKey: 'Plus4U5.App.NotificationBadge'
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  reload() {
    this._loader.reload();
    return this;
  },
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  onLoadSuccess_(dtoOut) {
    // TODO: why? it should be some event when reload is called
    UU5.Environment.uu5DataMap['Plus4U5.App.NotificationBadge'] = {
      timeStamp: Date.now(),
      data: dtoOut
    };
    this.onLoadSuccess(dtoOut);
  },
  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render() {
    let child = null;

    if (this.getNestingLevel() && this.isAuthenticated()) {
      child = (
        <NotificationBadgeLoader
          {...this.getMainPropsToPass()}
          uuIdentity={this.getIdentity().uuIdentity}
          ref_={loader => this._loader = loader}
        />
      );
    }

    return child;
  },
  //@@viewOff:render

});

export default NotificationBadge;
