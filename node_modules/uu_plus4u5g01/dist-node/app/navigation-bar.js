import React from "react";
import createReactClass from 'create-react-class';
import PropTypes from "prop-types";
import * as UU5 from "uu5g04";
import "uu5g04-bricks";
import NavigationBarLoader from './navigation-bar-loader.js';

import './navigation-bar.less';

export const NavigationBar = createReactClass({

  //@@viewOn:mixins
  mixins: [
    UU5.Common.BaseMixin,
    UU5.Common.ElementaryMixin,
    UU5.Common.NestingLevelMixin,
    UU5.Common.PureRenderMixin,
    UU5.Common.IdentityMixin
  ],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: 'Plus4U5.App.NavigationBar',
    nestingLevelList: UU5.Environment.getNestingLevelList('bigBoxCollection', 'box'),
    classNames: {
      main: 'plus4u5-app-navigation-bar'
    },
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    mainEntityUri: PropTypes.string.isRequired,
    navigationBarUri: PropTypes.string,
    target: PropTypes.oneOf(["auto", "_blank", "blank", "_top", "top", "_self", "self", "_parent", "parent"])
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps() {
    return {
      navigationBarUri: null,
      target: "_blank"
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  reload() {
    this._loader.reload();
    return this;
  },
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _fixUesUri(uri) {
    if (!uri) return uri;
    return uri.substring(0,4) === 'ues:' ? uri : 'ues:' + uri
  },
  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render() {
    let child = null;

    if (this.getNestingLevel() && this.isAuthenticated()) {
      child = (
        <NavigationBarLoader
          {...this.getMainPropsToPass()}
          mainEntityUri={this._fixUesUri(this.props.mainEntityUri)}
          navigationBarUri={this._fixUesUri(this.props.navigationBarUri)}
          target={this.props.target}
          uuIdentityName={this.getIdentity().name}
          ref_={loader => this._loader = loader}
        />
      );
    }

    return child;
  },
  //@@viewOff:render

});

export default NavigationBar;
