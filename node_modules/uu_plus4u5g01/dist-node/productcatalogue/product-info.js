import React from 'react';
import createReactClass from 'create-react-class';
import PropTypes from "prop-types";
import * as UU5 from "uu5g04";
import "uu5g04-bricks";
import Calls from './calls.js';

import './product-info.less';

export const ProductInfo = createReactClass({

  //@@viewOn:mixins
  mixins: [
    UU5.Common.BaseMixin,
    UU5.Common.ElementaryMixin,
    UU5.Common.PureRenderMixin,
    UU5.Common.LoadMixin,
    UU5.Common.IdentityMixin,
    UU5.Common.ScreenSizeMixin
  ],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: 'Plus4U5.ProductCatalogue.ProductInfo',
    classNames: {
      main: 'plus4u5-product-catalogue-product-info',
      detail: 'plus4u5-product-catalogue-product-info-detail',
      detailXs: 'plus4u5-product-catalogue-product-info-detail-xs',
      logo: 'plus4u5-product-catalogue-product-info-logo',
      logoSimple: 'plus4u5-product-catalogue-product-info-logo-simple',
      name: 'plus4u5-product-catalogue-product-info-name',
      text: 'plus4u5-product-catalogue-product-info-text',
      overlay: 'plus4u5-product-catalogue-product-info-overlay',
      description: 'plus4u5-product-catalogue-product-info-description',
      btnOpen: 'plus4u5-product-catalogue-product-info-btn-open',
      btnMore: 'plus4u5-product-catalogue-product-info-btn-more',
      topWrapper: 'plus4u5-product-catalogue-product-info-top-wrapper',
      leftWrapper: 'plus4u5-product-catalogue-product-info-left-wrapper',
      rightWrapper: 'plus4u5-product-catalogue-product-info-right-wrapper',
      modalContent: 'plus4u5-product-catalogue-product-info-modal-content',
      simpleLink: 'plus4u5-product-catalogue-product-info-simple-link'
    },
    calls: {
      onLoad: 'getBookBasicInfo'
    },
    defaults: {
      logoType: '2',
      baseUri: 'https://uuos9.plus4u.net'
    },
    lsi: {
      open: {
        cs: 'Otevřít',
        en: 'Open'
      },
      more: {
        cs: 'Další informace',
        en: 'Show more'
      }
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    type: PropTypes.oneOf(["simple", "detail"]),
    logo: PropTypes.string,
    name: PropTypes.string,
    description: PropTypes.string,
    appCode: PropTypes.string,
    tidAwid: PropTypes.string
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps: function () {
    return {
      type: "detail",
      logo: null,
      description: null,
      appCode: null,
      tidAwid: null
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  componentWillMount() {
    this.setCalls(Calls);
  },
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  getOnLoadData_() {
    return {
      tidAwid: this.props.tidAwid,
      baseUri: this.getDefault("baseUri"),
      appCode: this.props.appCode
    }
  },
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _getChild() {
    let child;
    let data = this.getDtoOut();

    let logoSrc = this.props.logo || `${this.getDefault("baseUri")}/${this.props.appCode}/${this.props.tidAwid}/getBookLogo?type=${this.getDefault("logoType")}`;
    if (!this.props.logo && data && data.logo) {
      logoSrc += `&logo=${data.logo}`;
    }

    let logo = (
      <UU5.Bricks.Div className={this.getClassName("logo")}>
        <Plus4U5.Bricks.Image
          name="Logo"
          responsive
          src={logoSrc}
        />
      </UU5.Bricks.Div>
    );

    switch (this.getLoadFeedback()) {
      case "loading":
        child = <UU5.Bricks.Loading />;
        break;
      case "ready": {
        if (this.isXs()) {
          child = [
            <UU5.Bricks.Div className={this.getClassName("topWrapper")} key={this.getId() + "top"}>
              <UU5.Bricks.Div className={this.getClassName("leftWrapper")} key={this.getId() + "left"}>
                {logo}
              </UU5.Bricks.Div>
              <UU5.Bricks.Div className={this.getClassName("rightWrapper")} key={this.getId() + "right"}>
                <UU5.Bricks.Div
                  content={this.props.name || data.name}
                  className={this.getClassName("name")}
                />
                <UU5.Bricks.Button
                  bgStyle="inverted"
                  content={this.getLsiValue('open')}
                  className={this.getClassName("btnOpen")}
                  onClick={() => window.open(`${this.getDefault("baseUri")}/${this.props.appCode}/${this.props.tidAwid}/`)}
                />
              </UU5.Bricks.Div>
            </UU5.Bricks.Div>,
            <UU5.Bricks.Div key={this.getId() + "bottom"}>
              <UU5.Bricks.Div
                content={this.props.description || data.description}
                className={this.getClassName("description")}
              />
              <UU5.Bricks.Div className={this.getClassName("overlay")}>
                <UU5.Bricks.Button
                  bgStyle="transparent"
                  content={this.getLsiValue('more')}
                  className={this.getClassName("btnMore")}
                  onClick={() => this._modal.open()}
                />
              </UU5.Bricks.Div>
            </UU5.Bricks.Div>
          ];
        } else {
          child = [
            <UU5.Bricks.Div className={this.getClassName("leftWrapper")} key={this.getId() + "left"}>
              {logo}
              <UU5.Bricks.Button
                bgStyle="inverted"
                content={this.getLsiValue('open')}
                className={this.getClassName("btnOpen")}
                onClick={() => window.open(`${this.getDefault("baseUri")}/${this.props.appCode}/${this.props.tidAwid}/`)}
              />
            </UU5.Bricks.Div>,

            <UU5.Bricks.Div className={this.getClassName("rightWrapper")} key={this.getId() + "right"}>
              <UU5.Bricks.Div className={this.getClassName("text")}>
                <UU5.Bricks.Div
                  content={this.props.name || data.name}
                  className={this.getClassName("name")}
                />
                <UU5.Bricks.Div
                  content={this.props.description || data.description}
                  className={this.getClassName("description")}
                />
              </UU5.Bricks.Div>
              <UU5.Bricks.Div className={this.getClassName("overlay")}>
                <UU5.Bricks.Button
                  bgStyle="transparent"
                  content={this.getLsiValue('more')}
                  className={this.getClassName("btnMore")}
                  onClick={() => this._modal.open()}
                />
              </UU5.Bricks.Div>
            </UU5.Bricks.Div>
          ];
        }

        break;
      }
    }
    return (child)
  },

  _getSimpleChild() {
    let child;
    let data = this.getDtoOut();

    let logoSrc = this.props.logo || `${this.getDefault("baseUri")}/${this.props.appCode}/${this.props.tidAwid}/getBookLogo?type=${this.getDefault("logoType")}`;
    if (!this.props.logo && data && data.logo) {
      logoSrc += `&logo=${data.logo}`;
    }

    let logo = (
      <UU5.Bricks.Div className={this.getClassName("logoSimple")}>
        <Plus4U5.Bricks.Image
          name="Logo"
          responsive
          src={logoSrc}
        />
      </UU5.Bricks.Div>
    );

    switch (this.getLoadFeedback()) {
      case "loading":
        child = <UU5.Bricks.Loading />;
        break;
      case "ready": {
        child = (
          <UU5.Bricks.Link
            className={this.getClassName("simpleLink")}
            onClick={() => window.open(`${this.getDefault("baseUri")}/${this.props.appCode}/${this.props.tidAwid}/`)}
          >
            {logo}
            <UU5.Bricks.Div
              content={this.props.name || data.name}
              className={this.getClassName("name")}
            />
          </UU5.Bricks.Link>
        );

        break;
      }
    }
    return (child)
  },

  _getMainPropsToPass() {
    let props = this.getMainPropsToPass();

    if (this.props.type === "detail") {
      if (this.isXs()) {
        props.className += " " + this.getClassName("detailXs");
      } else {
        props.className += " " + this.getClassName("detail");
      }
    }

    return props;
  },
  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render: function () {
    return (
      <UU5.Bricks.Div {...this._getMainPropsToPass()} >
        {this.props.type === "detail" ? this._getChild() : this._getSimpleChild()}
        {this.props.type === "detail" && <UU5.Bricks.Modal
          header=" "
          size="m"
          ref_={(modal) => this._modal = modal}
          content={
            <UU5.Bricks.Div className={this.getClassName("modalContent")}>
              {this._getChild()}
            </UU5.Bricks.Div>
          }
        />}
      </UU5.Bricks.Div>
    );
  }
  //@@viewOff:render
});

export default ProductInfo;
