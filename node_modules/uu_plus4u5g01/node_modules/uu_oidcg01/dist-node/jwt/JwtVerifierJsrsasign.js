"use strict";

var _module = require("module");

var _module2 = _interopRequireDefault(_module);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scriptUri = ((_module2.default ? _module2.default.uri : (document.currentScript || Array.prototype.slice.call(document.getElementsByTagName("script"), -1)[0] || {}).src) || "").toString();
var jsrsasign = undefined;
var Verifier = {
  verify: function verify(key, alg, verifyOpts, header, tokenParts, token) {
    var _this = this;

    return Promise.resolve().then(function () {
      // load jsrsasign library on 1st verification
      if (jsrsasign === undefined) {
        var continueFn = Verifier.verify.bind(_this, key, alg, verifyOpts, header, tokenParts, token);
        var isMin = scriptUri.indexOf(".min.") != -1;
        var baseUrl = scriptUri.replace(/^(.*\/).*/, "$1");
        var url = baseUrl + "jsrsasign" + (isMin ? ".min" : "") + ".js";
        var loadPromise;
        if (typeof System != "undefined") loadPromise = System.import(url);else loadPromise = new Promise(function (resolve, reject) {
          var script = document.createElement("script");
          script.onload = function () {
            resolve(window["Jsrsasign"]);
          };
          script.onerror = function (e) {
            reject(e);
          };
          script.src = url;
          document.head.appendChild(script);
        });
        return loadPromise.then(function (obj) {
          jsrsasign = obj || null;
          return continueFn();
        }, function (e) {
          // NOTE Don't set jsrsasign to null (if network was down, next attempt of the user might work)
          console.error(e);
          return continueFn();
        });
      }
      if (!jsrsasign) throw new Error("Unable to verify token because jsrsasign library failed to load.");

      // var exampleKey = {"kty":"RSA","e":"AQAB","n":"yXxJt2xevNsgGGGFfX5e22Jvy0_Eopgkumz7mJ7ScWlPfsMsAi8BZsF7nbDjA3T3v2vy2_-DaLDg-z-BjRwQIPL1LRzQGeDDSVmPcZtbexqkpjouxZ6-abpefSAFX5cA8NJ5h4JknFJWAsxxKEw4Ogy6XFd_BEaDmyXlLcV65Bs","alg":"RS256","kid":"rJZx5vzX1FOt_Nt8sB8jUA","use":"sig"};
      // var pem = KEYUTIL.getPEM(jsrsasign.KEYUTIL.getKey(exampleKey));
      //   =>
      // -----BEGIN PUBLIC KEY-----
      // MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDJfEm3bF682yAYYYV9fl7bYm/L
      // T8SimCS6bPuYntJxaU9+wywCLwFmwXudsOMDdPe/a/Lb/4NosOD7P4GNHBAg8vUt
      // HNAZ4MNJWY9xm1t7GqSmOi7Fnr5pul59IAVflwDw0nmHgmScUlYCzHEoTDg6DLpc
      // V38ERoObJeUtxXrkGwIDAQAB
      // -----END PUBLIC KEY-----

      // do the verification
      var keyInst = jsrsasign.KEYUTIL.getKey(key);
      var result = jsrsasign.jws.JWS.verifyJWT(token, keyInst, verifyOpts); // see lib/jsrsasign-.../jws-3.3.js
      return result || Promise.reject(new Error("Token is not valid. Token: " + token));
    });
  }
};

module.exports = Verifier;