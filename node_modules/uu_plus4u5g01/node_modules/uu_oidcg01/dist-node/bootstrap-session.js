"use strict";

var _Session = require("./Session.js");

var _Session2 = _interopRequireDefault(_Session);

var _Dom = require("./util/Dom.js");

var _Dom2 = _interopRequireDefault(_Dom);

var _ImplicitFlow = require("./flow/ImplicitFlow.js");

var _ImplicitFlow2 = _interopRequireDefault(_ImplicitFlow);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function tryAutoLogin() {
  if (_Session2.default.currentSession.isAuthenticated() || _Session2.default.currentSession._loginInProgress > 0) return;

  // if there's access_token parameter in current URL, consider it as the id_token of the user
  var id_token;
  location.search.replace(/[?&]access_token=([^&#]*)/, function (m, g) {
    id_token = decodeURIComponent(g.replace(/\+/g, " "));
  });
  if (id_token) {
    return _Session2.default.currentSession._login({
      access_token: id_token,
      nonce: null
    });
  }

  // try to login with no user interaction
  return _Session2.default.currentSession._login({
    prompt: "none", // no user interaction
    acr_values: "1" // non-anonymous user
  }).catch(function (e) {
    if (_ImplicitFlow2.default.isLoggedOutError(e)) return; // everything is fine, we just aren't logged in
    throw e; // some other error happenned
  });
}

// try to login without prompting user (only for browser environment)
var isBrowser = new Function("try {return this===window;}catch(e){ return false;}")();
if (isBrowser) {
  // wait until DOM is ready because we need BODY element to be present due to how implicit flow works
  _Dom2.default.domReady.then(function () {
    return Promise.resolve(tryAutoLogin()); // ASAP login, possibly from URL parameter
  }).then(_Session2.default.initPromise._finalizeInit.bind(null, true), _Session2.default.initPromise._finalizeInit.bind(null, false));
} else {
  _Session2.default.initPromise._finalizeInit(true);
}