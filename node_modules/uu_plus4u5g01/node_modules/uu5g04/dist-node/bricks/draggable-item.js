'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DraggableItem = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _createReactClass = require('create-react-class');

var _createReactClass2 = _interopRequireDefault(_createReactClass);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _uu5g = require('uu5g04');

var UU5 = _interopRequireWildcard(_uu5g);

var _bricksNs = require('./bricks-ns.js');

var _bricksNs2 = _interopRequireDefault(_bricksNs);

var _draggableMixin = require('./draggable-mixin.js');

var _draggableMixin2 = _interopRequireDefault(_draggableMixin);

require('./draggable-item.less');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DraggableItem = exports.DraggableItem = (0, _createReactClass2.default)({
  displayName: 'DraggableItem',


  //@@viewOn:mixins
  mixins: [UU5.Common.BaseMixin, UU5.Common.ElementaryMixin, UU5.Common.ContentMixin, UU5.Common.NestingLevelMixin, UU5.Common.PureRenderMixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: _bricksNs2.default.name("DraggableItem"),
    nestingLevelList: UU5.Environment.getNestingLevelList('bigBoxCollection', 'box'),
    classNames: {
      main: _bricksNs2.default.css("draggable-item")
    },
    errors: {
      invalidParentType: "Parrent of the component does not have DraggableMixin."
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    x: _propTypes2.default.number,
    y: _propTypes2.default.number,
    onMoveStart: _propTypes2.default.func,
    onMove: _propTypes2.default.func,
    onMoveEnd: _propTypes2.default.func
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      x: 0,
      y: 0,
      onMoveStart: null,
      onMove: null,
      onMoveEnd: null
    };
  },

  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  getInitialState: function getInitialState() {
    return {
      x: this.props.x,
      y: this.props.y
    };
  },
  componentWillMount: function componentWillMount() {
    this.draggableParent = this.getParentByType('hasUU5_Bricks_DraggableMixin');
    return this;
  },
  componentDidMount: function componentDidMount() {
    var _this = this;

    if (this.draggableParent) {
      this.setState(function (state) {
        return {
          x: state.x + _this.draggableParent.getXOffset() + _this.draggableParent.getClientLeft() + _this.draggableParent.getPaddingLeft(),
          y: state.y + _this.draggableParent.getYOffset() + _this.draggableParent.getClientTop() + _this.draggableParent.getPaddingTop()
        };
      });
    } else {
      this.showError('invalidParentType');
    }
    return this;
  },
  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    if (nextProps.controlled) {
      this.setState({
        x: nextProps.x,
        y: nextProps.y
      });
    }
    return this;
  },


  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  moveToPosition: function moveToPosition(x, y) {
    if (x || y) {
      if (typeof this.props.onMove === 'function') {
        this.props.onMove({ component: this, x: x, y: y });
      } else {
        this.setPosition(x, y);
      }
    }
    return this;
  },
  setPosition: function setPosition(x, y, setStateCallback) {
    x = isNaN(x) ? 0 : x;
    y = isNaN(y) ? 0 : y;
    this.setState(function (state) {
      return {
        x: x + state.x,
        y: y + state.y
      };
    }, setStateCallback);
    return this;
  },
  stopDragging: function stopDragging() {
    this.draggableParent && this.draggableParent.stopDragging();
    return this;
  },
  moveEnd: function moveEnd() {
    typeof this.props.onMoveEnd === 'function' && this.props.onMoveEnd();
    return this;
  },

  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _onMouseDown: function _onMouseDown(e) {
    var onStart;
    if (typeof this.props.onMoveStart === 'function') {
      onStart = this.props.onMoveStart();
    }
    if (onStart !== false) {
      var x = e.pageX || e.touches[0].pageX;
      var y = e.pageY || e.touches[0].pageY;

      this.draggableParent.startDragging(this, x, y);
    }

    return this;
  },

  //@@viewOff:componentSpecificHelpers

  // Render

  //@@viewOn:render
  render: function render() {
    return this.getNestingLevel() ? _react2.default.createElement(
      'div',
      _extends({}, this.getMainAttrs(), { onMouseDown: this._onMouseDown, onTouchStart: this._onMouseDown, style: {
          left: this.state.x,
          top: this.state.y
        } }),
      _react2.default.createElement(
        UU5.Bricks.Div,
        { parent: this, content: this.props.content, pureRender: true },
        this.props.children
      ),
      this.getDisabledCover()
    ) : null;
  }
  //@@viewOff:render

});

exports.default = DraggableItem;