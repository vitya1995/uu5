'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Pagination = undefined;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _createReactClass = require('create-react-class');

var _createReactClass2 = _interopRequireDefault(_createReactClass);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _uu5g = require('uu5g04');

var UU5 = _interopRequireWildcard(_uu5g);

var _bricksNs = require('./bricks-ns.js');

var _bricksNs2 = _interopRequireDefault(_bricksNs);

var _icon = require('./icon.js');

var _icon2 = _interopRequireDefault(_icon);

var _link = require('./link.js');

var _link2 = _interopRequireDefault(_link);

var _button = require('./button.js');

var _button2 = _interopRequireDefault(_button);

require('./pagination.less');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Pagination = exports.Pagination = (0, _createReactClass2.default)({
  displayName: 'Pagination',


  //@@viewOn:mixins
  mixins: [UU5.Common.BaseMixin, UU5.Common.PureRenderMixin, UU5.Common.ElementaryMixin, UU5.Common.ColorSchemaMixin, UU5.Common.NestingLevelMixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: _bricksNs2.default.name("Pagination"),
    nestingLevelList: UU5.Environment.getNestingLevelList('bigBoxCollection', 'smallBox'),
    classNames: {
      main: _bricksNs2.default.css("pagination"),
      item: _bricksNs2.default.css("pagination-item"),
      link: _bricksNs2.default.css("pagination-link"),
      nav: _bricksNs2.default.css("pagination-nav"),
      size: _bricksNs2.default.css("pagination-"),
      active: _bricksNs2.default.css("pagination-active"),
      disabledItem: 'disabled',
      background: _bricksNs2.default.css("pagination-background"),
      label: _bricksNs2.default.css("pagination-label"),
      dots: _bricksNs2.default.css("pagination-dots")
    },
    opt: {
      nestingLevelWrapper: true
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    items: _propTypes2.default.array,
    activeIndex: _propTypes2.default.number,
    range: _propTypes2.default.number,
    prevIcon: _propTypes2.default.string,
    prevLabel: _propTypes2.default.node,
    nextIcon: _propTypes2.default.string,
    nextLabel: _propTypes2.default.node,
    firstIcon: _propTypes2.default.string,
    firstLabel: _propTypes2.default.node,
    lastIcon: _propTypes2.default.string,
    lastLabel: _propTypes2.default.node,
    size: _propTypes2.default.oneOf(['s', 'm', 'l', 'xl']),
    onChange: _propTypes2.default.func,
    onChanged: _propTypes2.default.func,
    background: _propTypes2.default.bool
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      items: [1, 2, 3, 4, 5],
      activeIndex: 0,
      range: 5,
      prevIcon: 'mdi-chevron-left',
      prevLabel: null,
      nextIcon: 'mdi-chevron-right',
      nextLabel: null,
      firstIcon: null,
      firstLabel: null,
      lastIcon: null,
      lastLabel: null,
      size: 'm',
      onChange: null,
      onChanged: null,
      background: false
    };
  },

  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  getInitialState: function getInitialState() {
    return {
      activeIndex: this.props.activeIndex
    };
  },
  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    if (nextProps.controlled) {
      this.setState({ activeIndex: nextProps.activeIndex });
    }
    return this;
  },

  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  getItemsLength: function getItemsLength() {
    return this.props.items ? this.props.items.length : 0;
  },
  getActiveIndex: function getActiveIndex() {
    return this.state.activeIndex;
  },
  setActiveIndex: function setActiveIndex(activeIndex, setStateCallback) {
    if (activeIndex > -1 && this.getItemsLength() >= activeIndex) {
      this.setState({ activeIndex: activeIndex }, setStateCallback);
    }
    return this;
  },
  increaseActiveIndex: function increaseActiveIndex(setStateCallback) {
    var pagination = this;
    this.setState(function (state) {
      var newState = null;
      if (pagination.getItemsLength() - 1 > state.activeIndex) {
        newState = { activeIndex: state.activeIndex + 1 };
      }
      return newState;
    }, setStateCallback);
    return this;
  },
  decreaseActiveIndex: function decreaseActiveIndex(setStateCallback) {
    this.setState(function (state) {
      var newState = null;
      if (0 < state.activeIndex) {
        newState = { activeIndex: state.activeIndex - 1 };
      }
      return newState;
    }, setStateCallback);
    return this;
  },

  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _getMainAttrs: function _getMainAttrs() {
    var mainAttrs = this.getMainAttrs();
    mainAttrs.className += ' ' + this.getClassName().size + this.props.size;
    this.props.background ? mainAttrs.className += ' ' + this.getClassName().background : null;
    return mainAttrs;
  },
  _range: function _range(start, end, step) {
    step = step || 1;
    var rangeArray = [start];
    while (start + step <= end) {
      rangeArray.push(start += step);
    }
    return rangeArray;
  },
  _getRange: function _getRange() {
    var i = this.getActiveIndex();
    var start = 0;
    var end = this.getItemsLength() - 1;
    var range = this.props.range;
    var step = Math.floor(range / 2.0);

    if (i <= start + step) {
      end = range - 1 < end ? range - 1 : end;
    } else if (i >= end - step) {
      start = end - range + 1 > 0 ? end - range + 1 : start;
    } else {
      start = i - step;
      end = i + step;
    }

    return this._range(start, end);
  },
  _onChange: function _onChange(newActive, link, event) {
    if (typeof this.props.onChange === 'function') {
      this.props.onChange(this, newActive, event);
    } else {
      event.preventDefault();
      var onChanged;
      if (typeof this.props.onChanged === 'function') {
        var pagination = this;
        onChanged = function onChanged() {
          pagination.props.onChanged(this, this.getActiveIndex(), newActive, event);
        };
      }

      if (newActive === "prev") {
        this.decreaseActiveIndex(onChanged);
      } else if (newActive === "next") {
        this.increaseActiveIndex(onChanged);
      } else {
        this.setActiveIndex(newActive, onChanged);
      }
    }
    return this;
  },
  _getItemValue: function _getItemValue(value) {
    var newValue = null;
    var label = this.props[value + 'Label'];
    var icon = this.props[value + 'Icon'];

    if (label) {
      // if array of nodes -> set keys
      newValue = Array.isArray(label) ? _react2.default.Children.toArray(label) : label;
      // newValue = <span className={this.getClassName().label}>{Array.isArray(label) ? React.Children.toArray(label) : label}</span>;
    } else if (icon) {
      newValue = _react2.default.createElement(_icon2.default, { icon: icon });
    }

    return newValue;
  },
  _createItem: function _createItem(i, value) {
    var liAttrs = { key: i, className: this.getClassName().item };
    var linkAttrs = { className: this.getClassName().link, parent: this };

    linkAttrs.nestingLevel = this.getNestingLevel();
    linkAttrs.bgStyle = this.props.background ? 'filled' : 'transparent';

    if (i === this.getActiveIndex()) {
      liAttrs.className += ' ' + this.getClassName().active;
      linkAttrs.bgStyle = 'filled';
    } else {
      linkAttrs.colorSchema = 'custom';
      linkAttrs.onClick = this._onChange.bind(null, i);
    }

    return _react2.default.createElement(
      'li',
      liAttrs,
      _react2.default.createElement(
        _button2.default,
        linkAttrs,
        value
      )
    );
  },
  _createNavItem: function _createNavItem(key, disabled, index) {
    var liAttrs = {
      key: key,
      className: this.getClassName().item + ' ' + this.getClassName().nav + ' ' + this.getClassName().nav + '-' + key
    };
    var linkAttrs = { className: this.getClassName().link, parent: this };
    linkAttrs.disabled = disabled;
    linkAttrs.colorSchema = 'custom';

    linkAttrs.nestingLevel = this.getNestingLevel();

    if (disabled) {
      liAttrs.className += ' ' + this.getClassName().disabledItem;
      linkAttrs.href = '';
    } else {
      linkAttrs.onClick = this._onChange.bind(null, index === undefined ? key : index);
    }

    linkAttrs.bgStyle = this.props.background ? 'filled' : 'transparent';

    return _react2.default.createElement(
      'li',
      liAttrs,
      _react2.default.createElement(
        _button2.default,
        linkAttrs,
        this._getItemValue(key)
      )
    );
  },
  _getItems: function _getItems() {
    var pagination = this;

    var range = this._getRange();

    var items = this.getItemsLength() > 0 ? range.map(function (i) {
      return pagination._createItem(i, pagination.props.items[i]);
    }) : null;

    if (this.getItemsLength() > this.props.range) {
      var dotsRight = false;
      if ((this.props.range - 1) / 2 + this.getActiveIndex() < this.getItemsLength() - 1) {
        dotsRight = true;
      }

      var dotsLeft = false;
      if ((this.props.range - 1) / 2 < this.getActiveIndex()) {
        dotsLeft = true;
      }

      if (dotsLeft) {
        items.unshift(_react2.default.createElement(
          'li',
          { key: 'dotsLeft', className: this.getClassName().item },
          _react2.default.createElement(UU5.Bricks.Icon, { icon: 'mdi-dots-horizontal', className: this.getClassName("dots") })
        ));
      }

      if (dotsRight) {
        items.push(_react2.default.createElement(
          'li',
          { key: 'dotsRight', className: this.getClassName().item },
          _react2.default.createElement(UU5.Bricks.Icon, { icon: 'mdi-dots-horizontal', className: this.getClassName("dots") })
        ));
      }

      var prevDisabled = this.getActiveIndex() === 0;
      var nextDisabled = this.getActiveIndex() === this.getItemsLength() - 1;

      items.unshift(this._createNavItem('prev', prevDisabled));
      items.push(this._createNavItem('next', nextDisabled));

      (this.props.firstIcon || this.props.firstLabel) && items.unshift(this._createNavItem('first', prevDisabled, 0));
      (this.props.lastIcon || this.props.lastLabel) && items.push(this._createNavItem('last', nextDisabled, this.getItemsLength() - 1));
    }

    return items;
  },

  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render: function render() {
    var mainAttrs = this._getMainAttrs();
    var items = this._getItems();

    return items ? _react2.default.createElement(
      'ul',
      mainAttrs,
      items,
      this.getDisabledCover()
    ) : null;
  }
  //@@viewOff:render

});

exports.default = Pagination;