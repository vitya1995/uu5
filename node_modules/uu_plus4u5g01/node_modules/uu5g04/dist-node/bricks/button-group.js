'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ButtonGroup = undefined;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _createReactClass = require('create-react-class');

var _createReactClass2 = _interopRequireDefault(_createReactClass);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _uu5g = require('uu5g04');

var UU5 = _interopRequireWildcard(_uu5g);

var _bricksNs = require('./bricks-ns.js');

var _bricksNs2 = _interopRequireDefault(_bricksNs);

var _factory = require('./factory.js');

require('./button-group.less');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ButtonGroup = exports.ButtonGroup = (0, _createReactClass2.default)({
  displayName: 'ButtonGroup',


  //@@viewOn:mixins
  mixins: [UU5.Common.BaseMixin, UU5.Common.ElementaryMixin, UU5.Common.NestingLevelMixin, UU5.Common.ColorSchemaMixin, UU5.Common.ContentMixin, UU5.Common.PureRenderMixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: _bricksNs2.default.name("ButtonGroup"),
    nestingLevel: 'smallBox',
    classNames: {
      main: _bricksNs2.default.css("button-group"),
      horizontal: _bricksNs2.default.css("button-group-horizontal"),
      vertical: _bricksNs2.default.css("button-group-vertical")
      //displayBlock: 'btn-group-justified'
    },
    defaults: {
      childTagNames: ['UU5.Bricks.Button', 'UU5.Bricks.Dropdown', 'UU5.Bricks.ButtonSwitch', 'UU5.Bricks.LanguageSelector']
    },
    opt: {
      nestingLevelWrapper: true
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    size: _propTypes2.default.string,
    vertical: _propTypes2.default.bool,
    allowTags: _propTypes2.default.arrayOf(_propTypes2.default.string),
    bgStyle: _propTypes2.default.string

    // TODO: not possible for button, but for <a> element
    //displayBlock: PropTypes.bool
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      size: 'm',
      vertical: false,
      allowTags: [],
      bgStyle: undefined
      //displayBlock: false
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  shouldChildRender_: function shouldChildRender_(child) {
    var childTagName = UU5.Common.Tools.getChildTagName(child);
    var childTagNames = this.props.allowTags.concat(this.getDefault().childTagNames);
    return childTagNames.indexOf(childTagName) > -1;
  },

  expandChildProps_: function expandChildProps_(child, i) {
    var newChildProps = child.props;
    newChildProps = UU5.Common.Tools.mergeDeep({}, newChildProps);

    newChildProps.size = this.props.size;
    newChildProps.disabled = this.isDisabled() || newChildProps.disabled;
    newChildProps.bgStyle = newChildProps.bgStyle || this.props.bgStyle;

    var childTagName = UU5.Common.Tools.getChildTagName(child);
    if (childTagName === this.getDefault().childTagNames[1]) {
      var className = newChildProps.className ? newChildProps.className + ' ' : '';
      newChildProps.className = className;
    }

    return newChildProps;
  },
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _getPropsToPass: function _getPropsToPass() {
    var newProps = this.getMainPropsToPass();
    newProps.className += ' ' + this.getClassName(this.props.vertical ? 'vertical' : 'horizontal');
    return newProps;
  },
  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render: function render() {
    return this.getNestingLevel() ? _react2.default.createElement(
      _factory.Div,
      this._getPropsToPass(),
      this.getChildren()
    ) : null;
  }
  //@@viewOff:render
});

exports.default = ButtonGroup;