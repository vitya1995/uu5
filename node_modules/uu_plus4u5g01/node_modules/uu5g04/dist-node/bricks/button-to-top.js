'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ButtonToTop = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _createReactClass = require('create-react-class');

var _createReactClass2 = _interopRequireDefault(_createReactClass);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _uu5g = require('uu5g04');

var UU5 = _interopRequireWildcard(_uu5g);

var _bricksNs = require('./bricks-ns.js');

var _bricksNs2 = _interopRequireDefault(_bricksNs);

var _button = require('./button.js');

var _button2 = _interopRequireDefault(_button);

var _icon = require('./icon.js');

var _icon2 = _interopRequireDefault(_icon);

require('./button-to-top.less');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ButtonToTop = exports.ButtonToTop = (0, _createReactClass2.default)({
  displayName: 'ButtonToTop',


  //@@viewOn:mixins
  mixins: [UU5.Common.BaseMixin, UU5.Common.ElementaryMixin, UU5.Common.ColorSchemaMixin, UU5.Common.NestingLevelMixin, UU5.Common.PureRenderMixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: _bricksNs2.default.name("ButtonToTop"),
    nestingLevel: 'smallBox',
    classNames: {
      main: _bricksNs2.default.css("button-to-top")
    },
    opt: {
      nestingLevelWrapper: true
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    icon: _propTypes2.default.string,
    offset: _propTypes2.default.number,
    scrollDuration: _propTypes2.default.number,
    size: _propTypes2.default.oneOf(['s', 'm', 'l', 'xl']),
    bgStyle: _propTypes2.default.string
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      icon: 'mdi-chevron-up',
      offset: 150,
      scrollDuration: 800,
      size: "m",
      bgStyle: "inverted"
    };
  },

  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  getInitialState: function getInitialState() {
    return {
      visible: false
    };
  },
  componentDidMount: function componentDidMount() {
    window.addEventListener('scroll', this._scroll);
  },
  componentWillUnmount: function componentWillUnmount() {
    window.removeEventListener('scroll', this._scroll);
  },

  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _scroll: function _scroll(e) {
    var offset = e.target.scrollingElement ? e.target.scrollingElement.scrollTop : e.target.documentElement.scrollTop;
    if (!this._visible) {
      if (offset >= this.props.offset) {
        this._visible = true;
        this.setState({ visible: true });
      }
    } else if (offset < this.props.offset) {
      this._visible = false;
      this.setState({ visible: false });
    }
  },

  //@@viewOff:componentSpecificHelpers

  // Render
  _buildMainAttrs: function _buildMainAttrs() {
    var mainProps = this.getMainPropsToPass();
    mainProps.hidden = !this.state.visible;
    mainProps.colorSchema = this.props.colorSchema;
    mainProps.nestingLevel = this.getNestingLevel();
    mainProps.size = this.props.size;
    mainProps.bgStyle = this.props.bgStyle;
    return mainProps;
  },


  //@@viewOn:render
  render: function render() {
    var _this = this;

    return _react2.default.createElement(
      _button2.default,
      _extends({}, this._buildMainAttrs(), { onClick: function onClick() {
          UU5.Common.Tools.scrollToTarget(null, _this.props.scrollDuration);
        } }),
      _react2.default.createElement(_icon2.default, { icon: this.props.icon })
    );
  }
  //@@viewOff:render

});

exports.default = ButtonToTop;