'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _createReactClass = require('create-react-class');

var _createReactClass2 = _interopRequireDefault(_createReactClass);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _uu5g = require('uu5g04');

var UU5 = _interopRequireWildcard(_uu5g);

var _bricksNs = require('./bricks-ns.js');

var _bricksNs2 = _interopRequireDefault(_bricksNs);

var _link = require('./link.js');

var _link2 = _interopRequireDefault(_link);

var _button = require('./button.js');

var _button2 = _interopRequireDefault(_button);

require('./nav-bar-nav-item.less');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = (0, _createReactClass2.default)({
  displayName: 'nav-bar-nav-item',


  //@@viewOn:mixins
  mixins: [UU5.Common.BaseMixin, UU5.Common.PureRenderMixin, UU5.Common.ElementaryMixin, UU5.Common.ContentMixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: _bricksNs2.default.name("NavBar.Nav.Item"),
    classNames: {
      main: _bricksNs2.default.css("nav-bar-nav-item")
    },
    defaults: {
      parentTagName: 'UU5.Bricks.NavBar.Nav'
    },
    errors: {
      invalidParent: 'Parent of this component is not NavBar.Nav.'
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    onClick: _propTypes2.default.func,
    _size: _propTypes2.default.string
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      onClick: null,
      _size: 'm'
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  componentWillMount: function componentWillMount() {
    this.checkParentTagName(this.getDefault().parentTagName);

    if (!(this.getParent() && this.getParent().isNav)) {
      this.showError("invalidParent");
    }
  },

  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  expandChildProps_: function expandChildProps_(child) {
    var newChildProps = UU5.Common.Tools.mergeDeep({}, child.props);
    newChildProps.size = this.props._size;
    newChildProps.bgStyle = 'transparent';
    return newChildProps;
  },

  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _onClickHandler: function _onClickHandler() {
    var navBar = this.getParent().getParent();
    navBar.close();
  },
  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render: function render() {
    var mainAttrs = this.getMainAttrs();
    mainAttrs.onClick = this._onClickHandler;

    var children = this.getChildren();
    var firstChild = children instanceof Array ? children[0] : children;
    var child;

    if (firstChild.type && firstChild.type.tagName === 'UU5.Bricks.Dropdown') {
      child = children;
      mainAttrs.onClick = null;
    } else {
      child = _react2.default.createElement(
        _button2.default,
        { onClick: this.props.onClick, parent: this, size: this.props._size, bgStyle: 'transparent' },
        children
      );
    }

    return _react2.default.createElement(
      'li',
      mainAttrs,
      child,
      this.getDisabledCover()
    );
  }
  //@@viewOff:render
});