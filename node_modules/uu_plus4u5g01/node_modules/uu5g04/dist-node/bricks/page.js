'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Page = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _createReactClass = require('create-react-class');

var _createReactClass2 = _interopRequireDefault(_createReactClass);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _uu5g = require('uu5g04');

var UU5 = _interopRequireWildcard(_uu5g);

var _bricksNs = require('./bricks-ns.js');

var _bricksNs2 = _interopRequireDefault(_bricksNs);

var _factory = require('./factory.js');

var _row = require('./row.js');

var _row2 = _interopRequireDefault(_row);

var _pageColumn = require('./page-column.js');

var _pageColumn2 = _interopRequireDefault(_pageColumn);

var _pageMenuButton = require('./page-menu-button.js');

var _pageMenuButton2 = _interopRequireDefault(_pageMenuButton);

require('./page.less');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var LEFT = 'left';
var RIGHT = 'right';
var TOP = 'top';
var BOTTOM = 'bottom';
var CONTENT = 'content';
var PAGE_CONTENT = _propTypes2.default.oneOfType([_propTypes2.default.shape({
  tag: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.element]),
  props: _propTypes2.default.arrayOf(_propTypes2.default.object)
}), _propTypes2.default.node, _propTypes2.default.element, _propTypes2.default.string, _propTypes2.default.number]); //content (bodyItem, node, element, string, number)

var Page = exports.Page = (0, _createReactClass2.default)({
  displayName: 'Page',


  //@@viewOn:mixins
  mixins: [UU5.Common.BaseMixin, UU5.Common.PureRenderMixin, UU5.Common.ElementaryMixin, UU5.Common.NestingLevelMixin, UU5.Common.ContentMixin, UU5.Common.ScreenSizeMixin, UU5.Common.CcrWriterMixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: _bricksNs2.default.name("page"),
    nestingLevel: 'page',
    classNames: {
      main: _bricksNs2.default.css("page"),
      top: _bricksNs2.default.css("page-top"),
      bottom: _bricksNs2.default.css("page-bottom"),
      left: _bricksNs2.default.css("page-left"),
      right: _bricksNs2.default.css("page-right"),
      content: _bricksNs2.default.css("page-content"),
      contentBody: _bricksNs2.default.css("page-content-body"),
      modal: _bricksNs2.default.css("page-modal uu5-elevation-5"),
      alertBus: _bricksNs2.default.css("page-alert-bus uu5-elevation-5"),
      appLayer: _bricksNs2.default.css("page-app-layer"),
      systemLayer: _bricksNs2.default.css("page-system-layer"),
      columnFloat: _bricksNs2.default.css("page-column-float"),
      elevation0: 'uu5-elevation-0',
      elevation1: 'uu5-elevation-1',
      elevation2: 'uu5-elevation-2',
      elevation3: 'uu5-elevation-3',
      elevation4: 'uu5-elevation-4',
      zIndex0: _bricksNs2.default.css("page-z-index-0"),
      zIndex1: _bricksNs2.default.css("page-z-index-1"),
      zIndex2: _bricksNs2.default.css("page-z-index-2"),
      zIndex3: _bricksNs2.default.css("page-z-index-3"),
      zIndex4: _bricksNs2.default.css("page-z-index-4"),
      type: _bricksNs2.default.css("page-type-"),
      flex: _bricksNs2.default.css("page-flex"),
      flexGrow: _bricksNs2.default.css("page-flex-grow"),
      pageFull: _bricksNs2.default.css("page-full"),
      overflowHidden: _bricksNs2.default.css("page-overflow")
    },
    opt: {
      ccrKey: UU5.Environment.CCRKEY_PAGE
    },
    errors: {
      pageAlreadyRegistered: "Page is already registered."
    },
    defaults: {
      regexpEclMark: /!/g,
      regexpNumbers: /[0-9]/g
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    type: _propTypes2.default.oneOf(['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]),
    fullPage: _propTypes2.default.bool,

    topWrapperProps: _propTypes2.default.object,
    bottomWrapperProps: _propTypes2.default.object,
    leftWrapperProps: _propTypes2.default.object,
    rightWrapperProps: _propTypes2.default.object,
    contentWrapperProps: _propTypes2.default.object,
    appLayerWrapperProps: _propTypes2.default.object,
    systemLayerWrapperProps: _propTypes2.default.object,
    switchElevationTopBottom: _propTypes2.default.bool,
    switchElevationLeftRight: _propTypes2.default.bool,

    top: PAGE_CONTENT, //content (bodyItem, node, element, string, number)
    bottom: PAGE_CONTENT, //content (bodyItem, node, element, string, number)
    left: PAGE_CONTENT, //content (bodyItem, node, element, string, number)
    leftOpen: PAGE_CONTENT, //content (bodyItem, node, element, string, number)
    leftClosed: PAGE_CONTENT, //content (bodyItem, node, element, string, number)
    right: PAGE_CONTENT, //content (bodyItem, node, element, string, number)
    rightOpen: PAGE_CONTENT, //content (bodyItem, node, element, string, number)
    rightClosed: PAGE_CONTENT, //content (bodyItem, node, element, string, number)

    alertBus: _propTypes2.default.oneOfType([_propTypes2.default.shape({
      tag: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.element]),
      props: _propTypes2.default.arrayOf(_propTypes2.default.object)
    }), _propTypes2.default.node, _propTypes2.default.element]), //content (bodyItem, node, element)
    modal: _propTypes2.default.oneOfType([_propTypes2.default.shape({
      tag: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.element]),
      props: _propTypes2.default.arrayOf(_propTypes2.default.object)
    }), _propTypes2.default.node, _propTypes2.default.element]), //content (bodyItem, node, element)
    appLayerContent: _propTypes2.default.any, //content
    systemLayerContent: _propTypes2.default.any, //content

    leftWidth: _propTypes2.default.string, // 'xs-0 s-20 m-15 l-15 xl-30' [!|][xs|s|m|l|xl][-nn][-nn]
    rightWidth: _propTypes2.default.string // 'xs-0 s-20 m-15 l-15 xl-30'
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      type: 1,
      fullPage: true,
      topWrapperProps: {},
      bottomWrapperProps: {},
      leftWrapperProps: {},
      rightWrapperProps: {},
      contentWrapperProps: {},
      appLayerWrapperProps: {},
      systemLayerWrapperProps: {},
      switchElevationTopBottom: false,
      switchElevationLeftRight: false,
      top: null,
      bottom: null,
      left: null,
      leftOpen: null,
      leftClosed: null,
      right: null,
      rightOpen: null,
      rightClosed: null,
      alertBus: null,
      modal: null,
      appLayerContent: null,
      systemLayerContent: null,
      leftWidth: null,
      rightWidth: null
    };
  },

  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  getInitialState: function getInitialState() {
    // initialize
    this.props.userLayerContent && UU5.Common.Tools.warning("Property 'userLayerContent' is deprecated! Use 'appLayerContent' instead.");
    this.props.userLayerWrapperProps && UU5.Common.Tools.warning("Property 'userLayerWrapperProps' is deprecated! Use 'appLayerWrapperProps' instead.");
    // state
    return {
      widths: this._setWidths()
    };
  },
  componentDidMount: function componentDidMount() {
    if (UU5.Environment.page) {
      this.showError('pageAlreadyRegistered');
    } else {
      UU5.Environment.page = this;
    }

    this._setLayerContent(this.props.systemLayerContent, this._systemLayer);
    this._setLayerContent(this.props.appLayerContent || this.props.userLayerContent, this._appLayer);
  },
  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    if (nextProps.controlled) {
      this.setState({ widths: this._setWidths(nextProps) });
      this._setLayerContent(nextProps.systemLayerContent, this._systemLayer);
      this._setLayerContent(nextProps.appLayerContent || this.props.userLayerContent, this._appLayer);
    }
  },
  componentWillUnmount: function componentWillUnmount() {
    UU5.Environment.page === this && (UU5.Environment.page = null);
  },


  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  isPage: function isPage() {
    return true;
  },
  isLeftFloat: function isLeftFloat() {
    return this.state.widths.left[this.getScreenSize()] && this.state.widths.left[this.getScreenSize()].float;
  },
  isRightFloat: function isRightFloat() {
    return this.state.widths.right[this.getScreenSize()] && this.state.widths.right[this.getScreenSize()].float;
  },


  //page left column
  getLeftColumn: function getLeftColumn() {
    return this._pageLeft;
  },


  //page right column
  getRightColumn: function getRightColumn() {
    return this._pageRight;
  },


  //content component of column
  getLeftOpen: function getLeftOpen() {
    return this._leftOpen || this._left;
  },


  //content component of column
  getLeftClosed: function getLeftClosed() {
    return this._leftClosed || this._left;
  },


  //content component of column
  getRightOpen: function getRightOpen() {
    return this._rightOpen || this._right;
  },


  //content component of column
  getRightClosed: function getRightClosed() {
    return this._rightClosed || this._right;
  },


  //content component of column
  getTop: function getTop() {
    return this._top;
  },


  //content component of column
  getBottom: function getBottom() {
    return this._bottom;
  },
  toggleLeft: function toggleLeft(setStateCallback) {
    this._pageLeft && this._pageLeft.toggle(setStateCallback);
    return this;
  },
  toggleRight: function toggleRight(setStateCallback) {
    this._pageRight && this._pageRight.toggle(setStateCallback);
    return this;
  },
  getUserLayer: function getUserLayer() {
    UU5.Common.Tools.warning("Method '[component].getUserLayer()' is deprecated! Use '[component].getAppLayer()' instead.");
    return this._appLayer;
  },
  getAppLayer: function getAppLayer() {
    return this._appLayer;
  },
  getSystemLayer: function getSystemLayer() {
    return this._systemLayer;
  },
  getAlertBus: function getAlertBus() {
    return this._alertBus;
  },
  getModal: function getModal() {
    return this._modal;
  },

  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _getPropsToPass: function _getPropsToPass() {
    var newProps = UU5.Common.Tools.merge(this.getMainPropsToPass(), { content: null });
    newProps.className += ' ' + this.getClassName('type') + this.props.type;
    this.props.fullPage && (newProps.className += ' ' + this.getClassName('pageFull'));
    return newProps;
  },
  _getWidths: function _getWidths(width) {
    var _this = this;

    width = width || 'xs-0';
    var widths = {
      xs: { minWidth: 0, minUnit: '%' },
      s: { minWidth: 0, minUnit: '%' },
      m: { minWidth: 0, minUnit: '%' },
      l: { minWidth: 0, minUnit: '%' },
      xl: { minWidth: 0, minUnit: '%' }
    };

    var splitter = width.split(' ');
    splitter.forEach(function (split) {
      var _split$split = split.split('-'),
          _split$split2 = _slicedToArray(_split$split, 3),
          key = _split$split2[0],
          minWidth = _split$split2[1],
          maxWidth = _split$split2[2];

      var match = key.match(_this.getDefault().regexpEclMark);
      var float = match && match.length > 0;

      widths[key.replace('!', '')] = {
        minWidth: parseInt(minWidth),
        maxWidth: maxWidth ? parseInt(maxWidth) : null,
        float: float,
        minUnit: minWidth && minWidth.replace(_this.getDefault().regexpNumbers, '') || '%',
        maxUnit: maxWidth && maxWidth.replace(_this.getDefault().regexpNumbers, '') || '%'
      };
    });

    widths.xs.minWidth = widths.xs.minWidth === 0 ? 0 : widths.xs.minWidth || 0;
    widths.s.minWidth = widths.s.minWidth === 0 ? 0 : widths.s.minWidth || widths.xs.minWidth;
    widths.m.minWidth = widths.m.minWidth === 0 ? 0 : widths.m.minWidth || widths.s.minWidth;
    widths.l.minWidth = widths.l.minWidth === 0 ? 0 : widths.l.minWidth || widths.m.minWidth;
    widths.xl.minWidth = widths.xl.minWidth === 0 ? 0 : widths.xl.minWidth || widths.l.minWidth;

    return widths;
  },
  _setWidths: function _setWidths(props) {
    var widths = void 0;
    var defaultWidth = {
      xs: { minWidth: 0, minUnit: '%' },
      s: { minWidth: 0, minUnit: '%' },
      m: { minWidth: 0, minUnit: '%' },
      l: { minWidth: 0, minUnit: '%' },
      xl: { minWidth: 0, minUnit: '%' }
    };
    props = props || this.props;

    var leftWidths = props.left || props.leftOpen || props.leftClosed ? this._getWidths(props.leftWidth) : defaultWidth;
    var rightWidths = props.right || props.rightOpen || props.rightClosed ? this._getWidths(props.rightWidth) : defaultWidth;

    widths = {
      left: leftWidths,
      right: rightWidths
    };

    return widths;
  },
  _getWidth: function _getWidth(screenSize, wrapper) {
    var result = {
      widthContent: '100%',
      floatLeft: this.state.widths.left[screenSize].float,
      floatRight: this.state.widths.right[screenSize].float
    };

    var minWidthLeft = 0;
    var widthLeft = 0;
    var maxWidthLeft = null;
    var minWidthRight = 0;
    var widthRight = 0;
    var maxWidthRight = null;

    if (this.props.left || this.props.leftOpen && this.props.leftClosed) {
      minWidthLeft = this.state.widths.left[screenSize].minWidth;
      maxWidthLeft = this.state.widths.left[screenSize].maxWidth;
      widthLeft = maxWidthLeft || minWidthLeft;
    }
    result.minWidthLeft = minWidthLeft + this.state.widths.left[screenSize].minUnit;
    result.maxWidthLeft = maxWidthLeft ? maxWidthLeft + this.state.widths.left[screenSize].maxUnit : null;
    result.widthLeft = widthLeft + (maxWidthLeft ? this.state.widths.left[screenSize].maxUnit : this.state.widths.left[screenSize].minUnit);

    if (this.props.right || this.props.rightOpen && this.props.rightClosed) {
      minWidthRight = this.state.widths.right[screenSize].minWidth;
      maxWidthRight = this.state.widths.right[screenSize].maxWidth;
      widthRight = maxWidthRight || minWidthRight;
    }
    result.minWidthRight = minWidthRight + this.state.widths.right[screenSize].minUnit;
    result.maxWidthRight = maxWidthRight ? maxWidthRight + this.state.widths.right[screenSize].maxUnit : null;
    result.widthRight = widthRight + (maxWidthRight ? this.state.widths.right[screenSize].maxUnit : this.state.widths.right[screenSize].minUnit);

    var left = 0;
    if (result.floatLeft) {
      left = result.minWidthLeft && result.maxWidthLeft ? result.minWidthLeft : 0;
    } else {
      left = result.widthLeft;
    }
    var right = 0;
    if (result.floatRight) {
      right = result.minWidthRight && result.maxWidthRight ? result.minWidthRight : 0;
    } else {
      right = result.widthRight;
    }

    if (wrapper === LEFT) {
      result.widthWrapper = 'Calc(100% - ' + (left || '0%') + ')';
      result.widthContent = 'Calc(((100% - ' + (left || '0%') + ' - ' + (right || '0%') + ') / (100 - ' + (parseInt(left) || '0') + ')) * 100 )';
      result.widthRight = 'Calc(((' + result.widthRight + ') / (100 - ' + (parseInt(left) || '0') + ')) * 100 )';
      result.minWidthRight = 'Calc(((' + result.minWidthRight + ') / (100 - ' + (parseInt(left) || '0') + ')) * 100 )';
    } else if (wrapper === RIGHT) {
      result.widthWrapper = 'Calc(100% - ' + (right || '0%') + ')';
      result.widthContent = 'Calc(((100% - ' + (right || '0%') + ' - ' + (left || '0%') + ') / (100 - ' + (parseInt(right) || '0') + ')) * 100 )';
      result.widthLeft = 'Calc(((' + result.widthLeft + ') / (100 - ' + (parseInt(right) || '0') + ')) * 100 )';
      result.minWidthLeft = 'Calc(((' + result.minWidthLeft + ') / (100 - ' + (parseInt(right) || '0') + ')) * 100 )';
    } else {
      result.widthContent = 'Calc(100% - ' + (left || '0%') + ' - ' + (right || '0%') + ')';
    }

    return result;
  },
  _getPageColumn: function _getPageColumn(component, name) {
    var _this2 = this;

    var result = void 0;
    if (component) {
      if ((typeof component === 'undefined' ? 'undefined' : _typeof(component)) === 'object') {
        var newProps = { parent: this, ref_: function ref_(ref) {
            return _this2[name] = ref;
          } };
        if (component.props && typeof component.props.ref_ === 'function') {
          newProps.ref_ = function (ref) {
            component.props.ref_(ref);
            _this2[name] = ref;
          };
        } else {
          newProps.ref_ = function (ref) {
            return _this2[name] = ref;
          };
        }

        if (component.tag) {
          result = _react2.default.createElement(UU5.Common.Tools.checkTag(component), newProps);
        } else if (component.type && typeof component.type === 'function') {
          result = _react2.default.cloneElement(component, newProps);
        }
      } else {
        result = component;
      }
    }

    return result;
  },
  _getColumnProps: function _getColumnProps(props, classNames, position, screenSize, block) {
    props = props || {};
    var newProps = UU5.Common.Tools.merge({ pureRender: true }, props);

    if (typeof classNames === 'string') {
      newProps.className = newProps.className || '';
      newProps.className += ' ' + classNames;
    } else if (Array.isArray(classNames) && classNames.length > 0) {
      newProps.className = newProps.className || '';
      classNames.forEach(function (className) {
        className && (newProps.className += ' ' + className);
      });
    }

    var elevation = this._getElevation(this.props.type);

    switch (position) {
      case LEFT:
        if (this._getWidth(screenSize).floatLeft) {
          newProps.className += ' ' + this.getClassName('columnFloat');
        }
        if (!block && (this.props.left || this.props.leftOpen || this.props.leftClosed)) {
          newProps.elevation = elevation[position];
        }
        break;
      case RIGHT:
        if (this._getWidth(screenSize).floatRight) {
          newProps.className += ' ' + this.getClassName('columnFloat');
        }
        if (!block && (this.props.right || this.props.rightOpen || this.props.rightClosed)) {
          // newProps.className += ' ' + this.getClassName('elevation' + elevation[position]) + ' ' + this.getClassName('zIndex' + elevation[position]);
          newProps.elevation = elevation[position];
        }
        break;
      case TOP:
        if (this.props.top) {
          newProps.className += ' ' + this.getClassName('elevation' + elevation[position]) + ' ' + this.getClassName('zIndex' + elevation[position]);
        }
        break;
      case BOTTOM:
        if (this.props.bottom) {
          newProps.className += ' ' + this.getClassName('elevation' + elevation[position]) + ' ' + this.getClassName('zIndex' + elevation[position]);
        }
        break;
    }
    newProps.parent = this;

    return newProps;
  },
  _getAlertBus: function _getAlertBus() {
    var _this3 = this;

    var alertBus = void 0;
    if (this.props.alertBus && _typeof(this.props.alertBus) === 'object') {
      var props = UU5.Common.Tools.merge(this.props.alertBus.props, {
        pureRender: true,
        parent: this,
        className: this.getClassName('alertBus') + (this.props.alertBus.props && this.props.alertBus.props.className ? ' ' + this.props.alertBus.props.className : ''),
        ref_: function ref_(alertBus) {
          return _this3._alertBus = alertBus;
        }
      });
      if (this.props.alertBus.tag) {
        alertBus = _react2.default.createElement(UU5.Common.Tools.checkTag(this.props.alertBus.tag), props);
      } else if (this.props.alertBus.type && typeof this.props.alertBus.type === 'function') {
        alertBus = _react2.default.cloneElement(this.props.alertBus, props);
      }
    }
    return alertBus;
  },
  _getModal: function _getModal() {
    var _this4 = this;

    var modal = void 0;
    if (this.props.modal && _typeof(this.props.modal) === 'object') {
      var props = UU5.Common.Tools.merge(this.props.modal.props, {
        pureRender: true,
        parent: this,
        className: this.getClassName('modal') + (this.props.modal.props && this.props.modal.props.className ? ' ' + this.props.modal.props.className : ''),
        ref_: function ref_(modal) {
          return _this4._modal = modal;
        }
      });
      if (this.props.modal.tag) {
        modal = _react2.default.createElement(UU5.Common.Tools.checkTag(this.props.modal.tag), props);
      } else if (this.props.modal.type && typeof this.props.modal.type === 'function') {
        modal = _react2.default.cloneElement(this.props.modal, props);
      }
    }
    return modal;
  },
  _setLayerContent: function _setLayerContent(layerContent, layer) {
    // When elem is not an array, it acts differently
    if (layerContent) {
      var content = Array.isArray(layerContent) ? layerContent : [layerContent];
      layer.setChildren(this.buildChildren({ content: content }));
    }
    return this;
  },
  _getAppLayer: function _getAppLayer() {
    var _this5 = this;

    var props = this.props.userLayerWrapperProps || this.props.appLayerWrapperProps || {};
    var ref = props.ref_;
    props = UU5.Common.Tools.merge(props, {
      dynamic: true,
      controlled: false,
      parent: this,
      className: UU5.Common.Tools.joinClassNames(this.getClassName('appLayer'), props.className),
      ref_: function ref_(appLayer) {
        _this5._appLayer = appLayer;
        typeof ref === 'function' && ref(appLayer);
      },
      pureRender: true
    });
    return _react2.default.createElement(_factory.Div, props);
  },
  _getSystemLayer: function _getSystemLayer() {
    var _this6 = this;

    var props = this.props.systemLayerWrapperProps || {};
    var ref = props.ref_;
    props = UU5.Common.Tools.merge(props, {
      dynamic: true,
      controlled: false,
      parent: this,
      className: UU5.Common.Tools.joinClassNames(this.getClassName('systemLayer'), props.className),
      ref_: function ref_(systemLayer) {
        _this6._systemLayer = systemLayer;
        typeof ref === 'function' && ref(systemLayer);
      },
      pureRender: true
    });
    return _react2.default.createElement(_factory.Div, props);
  },
  _getTop: function _getTop() {
    var _this7 = this;

    var top = void 0;
    if (this.props.top && _typeof(this.props.top) === 'object') {
      var props = UU5.Common.Tools.merge(this.props.top.props, {
        parent: this,
        ref_: function ref_(top) {
          return _this7._top = top;
        }
      });
      if (this.props.top.tag) {
        top = _react2.default.createElement(UU5.Common.Tools.checkTag(this.props.top.tag), props);
      } else if (this.props.top.type && typeof this.props.top.type === 'function') {
        top = _react2.default.cloneElement(this.props.top, props);
      }
    } else {
      top = this.props.top;
    }
    return top;
  },
  _getBottom: function _getBottom() {
    var _this8 = this;

    var bottom = void 0;
    if (this.props.bottom && _typeof(this.props.bottom) === 'object') {
      var props = UU5.Common.Tools.merge(this.props.bottom.props, {
        parent: this,
        ref_: function ref_(bottom) {
          return _this8._bottom = bottom;
        }
      });
      if (this.props.bottom.tag) {
        bottom = _react2.default.createElement(UU5.Common.Tools.checkTag(this.props.bottom.tag), props);
      } else if (this.props.bottom.type && typeof this.props.bottom.type === 'function') {
        bottom = _react2.default.cloneElement(this.props.bottom, props);
      }
    } else {
      bottom = this.props.bottom;
    }
    return bottom;
  },
  _getLeftContent: function _getLeftContent() {
    var left = this._getPageColumn(this.props.left, '_left');
    var leftOpen = this._getPageColumn(this.props.leftOpen, '_leftOpen');
    var leftClosed = this._getPageColumn(this.props.leftClosed, '_leftClosed');
    var leftOpenContent = leftOpen || left;
    var leftClosedContent = leftClosed || left;

    return {
      open: leftOpenContent,
      closed: leftClosedContent
    };
  },
  _getRightContent: function _getRightContent() {
    var right = this._getPageColumn(this.props.right, '_right');
    var rightOpen = this._getPageColumn(this.props.rightOpen, '_rightOpen');
    var rightClosed = this._getPageColumn(this.props.rightClosed, '_rightClosed');
    var rightOpenContent = rightOpen || right;
    var rightClosedContent = rightClosed || right;

    return {
      open: rightOpenContent,
      closed: rightClosedContent
    };
  },
  _getContentAttrs: function _getContentAttrs(screenSize, width, marginWidth) {
    var contentAttrs = void 0;
    if (this._getWidth(screenSize).floatLeft && this._getWidth(screenSize).minWidthLeft && this._getWidth(screenSize).maxWidthLeft) {
      contentAttrs = {
        style: {
          marginLeft: marginWidth ? 'Calc(100% - ' + marginWidth + ')' : this._getWidth(screenSize).minWidthLeft
        }
      };
    }

    if (width) {
      contentAttrs = contentAttrs || {};
      contentAttrs.style = contentAttrs.style || {};
      contentAttrs.style.width = width;
    }

    return contentAttrs;
  },
  _getElevation: function _getElevation(type) {
    var elevation = void 0;
    switch (type.toString()) {
      case '1':
        elevation = {
          content: 0,
          left: this.props.switchElevationLeftRight ? 1 : 2,
          right: this.props.switchElevationLeftRight ? 2 : 1,
          top: this.props.switchElevationTopBottom ? 3 : 4,
          bottom: this.props.switchElevationTopBottom ? 4 : 3
        };
        break;
      case '2':
        elevation = {
          content: 0,
          left: this.props.switchElevationLeftRight ? 2 : 3,
          right: this.props.switchElevationLeftRight ? 3 : 2,
          top: 4,
          bottom: 1
        };
        break;
      case '3':
        elevation = {
          content: 0,
          left: this.props.switchElevationLeftRight ? 3 : 4,
          right: this.props.switchElevationLeftRight ? 4 : 3,
          top: this.props.switchElevationTopBottom ? 1 : 2,
          bottom: this.props.switchElevationTopBottom ? 2 : 1
        };
        break;
      case '4':
        elevation = {
          content: 0,
          left: this.props.switchElevationLeftRight ? 2 : 3,
          right: this.props.switchElevationLeftRight ? 3 : 2,
          top: 1,
          bottom: 4
        };
        break;
      case '5':
        elevation = {
          content: 0,
          left: 3,
          right: 1,
          top: 4,
          bottom: 2
        };
        break;
      case '6':
        elevation = {
          content: 0,
          left: 1,
          right: 3,
          top: 4,
          bottom: 2
        };
        break;
      case '7':
        elevation = {
          content: 0,
          left: 3,
          right: 1,
          top: 2,
          bottom: 4
        };
        break;
      case '8':
        elevation = {
          content: 0,
          left: 1,
          right: 3,
          top: 2,
          bottom: 4
        };
        break;
      case '9':
        elevation = {
          content: 0,
          left: 4,
          right: 1,
          top: this.props.switchElevationTopBottom ? 2 : 3,
          bottom: this.props.switchElevationTopBottom ? 3 : 2
        };
        break;
      case '10':
        elevation = {
          content: 0,
          left: 4,
          right: 2,
          top: 3,
          bottom: 1
        };
        break;
      case '11':
        elevation = {
          content: 0,
          left: 4,
          right: 2,
          top: 1,
          bottom: 3
        };
        break;
      case '12':
        elevation = {
          content: 0,
          left: 1,
          right: 4,
          top: this.props.switchElevationTopBottom ? 2 : 3,
          bottom: this.props.switchElevationTopBottom ? 3 : 2
        };
        break;
      case '13':
        elevation = {
          content: 0,
          left: 2,
          right: 4,
          top: 3,
          bottom: 1
        };
        break;
      case '14':
        elevation = {
          content: 0,
          left: 2,
          right: 4,
          top: 1,
          bottom: 3
        };
        break;

      default:
        elevation = {
          content: 0
        };
        break;
    }
    return elevation;
  },
  _getFullPageClass: function _getFullPageClass(overflowHidden) {
    var result = [];
    this.props.fullPage && result.push(this.getClassName('flexGrow'));
    overflowHidden && result.push(this.getClassName('overflowHidden'));
    return result.length ? result.join(' ') : null;
  },
  _getContentDiv: function _getContentDiv() {
    return _react2.default.createElement(_factory.Div, { className: this.getClassName('contentBody'), pureRender: true, content: this.props.content || this.props.children });
  },
  _getType0: function _getType0() {
    var screenSize = this.getScreenSize();
    var width = this._getWidth(screenSize);

    return _react2.default.createElement(
      _factory.Div,
      this._getPropsToPass(),
      this._getAppLayer(),
      this._getSystemLayer(),
      _react2.default.createElement(
        _factory.Div,
        _extends({}, this._getColumnProps(this.props.contentWrapperProps, this.getClassName('content'), CONTENT), { mainAttrs: this._getContentAttrs(screenSize, width.widthContent) }),
        this._getContentDiv()
      ),
      this._getAlertBus(),
      this._getModal()
    );
  },
  _getType1: function _getType1() {
    var _this9 = this;

    var screenSize = this.getScreenSize();
    var width = this._getWidth(screenSize);

    return _react2.default.createElement(
      _factory.Div,
      this._getPropsToPass(),
      this._getAppLayer(),
      this._getSystemLayer(),
      _react2.default.createElement(_row2.default, _extends({}, this._getColumnProps(this.props.topWrapperProps, this.getClassName('top'), TOP), { content: this._getTop() })),
      _react2.default.createElement(
        _row2.default,
        { display: 'flex', className: this._getFullPageClass(true) },
        _react2.default.createElement(_pageColumn2.default, _extends({}, this._getColumnProps(this.props.leftWrapperProps, this.getClassName('left'), LEFT, screenSize, !width.floatLeft), { width: width.widthLeft, minWidth: width.minWidthLeft, maxWidth: width.maxWidthLeft, openContent: this._getLeftContent().open, closedContent: this._getLeftContent().closed, ref_: function ref_(left) {
            return _this9._pageLeft = left;
          }, block: !width.floatLeft })),
        _react2.default.createElement(
          _factory.Div,
          _extends({}, this._getColumnProps(this.props.contentWrapperProps, this.getClassName('content'), CONTENT), { mainAttrs: this._getContentAttrs(screenSize, width.widthContent) }),
          this._getContentDiv()
        ),
        _react2.default.createElement(_pageColumn2.default, _extends({}, this._getColumnProps(this.props.rightWrapperProps, this.getClassName('right'), RIGHT, screenSize, !width.floatRight), { width: width.widthRight, minWidth: width.minWidthRight, maxWidth: width.maxWidthRight, openContent: this._getRightContent().open, closedContent: this._getRightContent().closed, ref_: function ref_(right) {
            return _this9._pageRight = right;
          }, block: !width.floatRight, right: true }))
      ),
      _react2.default.createElement(_row2.default, _extends({}, this._getColumnProps(this.props.bottomWrapperProps, this.getClassName('bottom'), BOTTOM), { content: this._getBottom() })),
      this._getAlertBus(),
      this._getModal()
    );
  },
  _getType2: function _getType2() {
    var _this10 = this;

    var screenSize = this.getScreenSize();
    var width = this._getWidth(screenSize);

    return _react2.default.createElement(
      _factory.Div,
      this._getPropsToPass(),
      this._getAppLayer(),
      this._getSystemLayer(),
      _react2.default.createElement(_row2.default, _extends({}, this._getColumnProps(this.props.topWrapperProps, this.getClassName('top'), TOP), { content: this._getTop() })),
      _react2.default.createElement(
        _row2.default,
        { display: 'flex', className: this._getFullPageClass(true) },
        _react2.default.createElement(_pageColumn2.default, _extends({}, this._getColumnProps(this.props.leftWrapperProps, this.getClassName('left'), LEFT, screenSize, !width.floatLeft), { width: width.widthLeft, minWidth: width.minWidthLeft, maxWidth: width.maxWidthLeft, openContent: this._getLeftContent().open, closedContent: this._getLeftContent().closed, ref_: function ref_(left) {
            return _this10._pageLeft = left;
          }, block: !width.floatLeft })),
        _react2.default.createElement(
          _factory.Div,
          { className: this.getClassName('flex'), mainAttrs: this._getContentAttrs(screenSize, width.widthContent) },
          _react2.default.createElement(
            _row2.default,
            _extends({}, this._getColumnProps(this.props.contentWrapperProps, [this.getClassName('content'), this._getFullPageClass()], CONTENT), { width: width.widthContent }),
            this._getContentDiv()
          ),
          _react2.default.createElement(_row2.default, _extends({}, this._getColumnProps(this.props.bottomWrapperProps, this.getClassName('bottom'), BOTTOM), { content: this._getBottom() }))
        ),
        _react2.default.createElement(_pageColumn2.default, _extends({}, this._getColumnProps(this.props.rightWrapperProps, this.getClassName('right'), RIGHT, screenSize, !width.floatRight), { width: width.widthRight, minWidth: width.minWidthRight, maxWidth: width.maxWidthRight, openContent: this._getRightContent().open, closedContent: this._getRightContent().closed, ref_: function ref_(right) {
            return _this10._pageRight = right;
          }, block: !width.floatRight, right: true }))
      ),
      this._getAlertBus(),
      this._getModal()
    );
  },
  _getType3: function _getType3() {
    var _this11 = this;

    var screenSize = this.getScreenSize();
    var width = this._getWidth(screenSize);

    return _react2.default.createElement(
      _factory.Div,
      this._getPropsToPass(),
      this._getAppLayer(),
      this._getSystemLayer(),
      _react2.default.createElement(
        _row2.default,
        { display: 'flex', className: this._getFullPageClass(true) },
        _react2.default.createElement(_pageColumn2.default, _extends({}, this._getColumnProps(this.props.leftWrapperProps, this.getClassName('left'), LEFT, screenSize, !width.floatLeft), { width: width.widthLeft, minWidth: width.minWidthLeft, maxWidth: width.maxWidthLeft, openContent: this._getLeftContent().open, closedContent: this._getLeftContent().closed, ref_: function ref_(left) {
            return _this11._pageLeft = left;
          }, block: !width.floatLeft })),
        _react2.default.createElement(
          _factory.Div,
          { className: this.getClassName('flex'), mainAttrs: this._getContentAttrs(screenSize, width.widthContent) },
          _react2.default.createElement(_row2.default, _extends({}, this._getColumnProps(this.props.topWrapperProps, this.getClassName('top'), TOP), { content: this._getTop() })),
          _react2.default.createElement(
            _row2.default,
            _extends({}, this._getColumnProps(this.props.contentWrapperProps, [this.getClassName('content'), this._getFullPageClass()], CONTENT), { width: width.widthContent }),
            this._getContentDiv()
          ),
          _react2.default.createElement(_row2.default, _extends({}, this._getColumnProps(this.props.bottomWrapperProps, this.getClassName('bottom'), BOTTOM), { content: this._getBottom() }))
        ),
        _react2.default.createElement(_pageColumn2.default, _extends({}, this._getColumnProps(this.props.rightWrapperProps, this.getClassName('right'), RIGHT, screenSize, !width.floatRight), { width: width.widthRight, minWidth: width.minWidthRight, maxWidth: width.maxWidthRight, openContent: this._getRightContent().open, closedContent: this._getRightContent().closed, ref_: function ref_(right) {
            return _this11._pageRight = right;
          }, block: !width.floatRight, right: true }))
      ),
      this._getAlertBus(),
      this._getModal()
    );
  },
  _getType4: function _getType4() {
    var _this12 = this;

    var screenSize = this.getScreenSize();
    var width = this._getWidth(screenSize);

    return _react2.default.createElement(
      _factory.Div,
      this._getPropsToPass(),
      this._getAppLayer(),
      this._getSystemLayer(),
      _react2.default.createElement(
        _row2.default,
        { display: 'flex', className: this._getFullPageClass(true) },
        _react2.default.createElement(_pageColumn2.default, _extends({}, this._getColumnProps(this.props.leftWrapperProps, this.getClassName('left'), LEFT, screenSize, !width.floatLeft), { width: width.widthLeft, minWidth: width.minWidthLeft, maxWidth: width.maxWidthLeft, openContent: this._getLeftContent().open, closedContent: this._getLeftContent().closed, ref_: function ref_(left) {
            return _this12._pageLeft = left;
          }, block: !width.floatLeft })),
        _react2.default.createElement(
          _factory.Div,
          { mainAttrs: this._getContentAttrs(screenSize, width.widthContent) },
          _react2.default.createElement(_row2.default, _extends({}, this._getColumnProps(this.props.topWrapperProps, this.getClassName('top'), TOP), { content: this._getTop() })),
          _react2.default.createElement(
            _row2.default,
            _extends({}, this._getColumnProps(this.props.contentWrapperProps, this.getClassName('content'), CONTENT), { width: width.widthContent }),
            this._getContentDiv()
          )
        ),
        _react2.default.createElement(_pageColumn2.default, _extends({}, this._getColumnProps(this.props.rightWrapperProps, this.getClassName('right'), RIGHT, screenSize, !width.floatRight), { width: width.widthRight, minWidth: width.minWidthRight, maxWidth: width.maxWidthRight, openContent: this._getRightContent().open, closedContent: this._getRightContent().closed, ref_: function ref_(right) {
            return _this12._pageRight = right;
          }, block: !width.floatRight, right: true }))
      ),
      _react2.default.createElement(_row2.default, _extends({}, this._getColumnProps(this.props.bottomWrapperProps, this.getClassName('bottom'), BOTTOM), { content: this._getBottom() })),
      this._getAlertBus(),
      this._getModal()
    );
  },
  _getType5: function _getType5() {
    var _this13 = this;

    var screenSize = this.getScreenSize();
    var width = this._getWidth(screenSize, LEFT);

    return _react2.default.createElement(
      _factory.Div,
      this._getPropsToPass(),
      this._getAppLayer(),
      this._getSystemLayer(),
      _react2.default.createElement(_row2.default, _extends({}, this._getColumnProps(this.props.topWrapperProps, this.getClassName('top'), TOP), { content: this._getTop() })),
      _react2.default.createElement(
        _row2.default,
        { display: 'flex', className: this._getFullPageClass(true) },
        _react2.default.createElement(_pageColumn2.default, _extends({}, this._getColumnProps(this.props.leftWrapperProps, this.getClassName('left'), LEFT, screenSize, !width.floatLeft), { width: width.widthLeft, minWidth: width.minWidthLeft, maxWidth: width.maxWidthLeft, openContent: this._getLeftContent().open, closedContent: this._getLeftContent().closed, ref_: function ref_(left) {
            return _this13._pageLeft = left;
          }, block: !width.floatLeft })),
        _react2.default.createElement(
          _factory.Div,
          { className: this.getClassName('flex'), mainAttrs: this._getContentAttrs(screenSize, width.widthWrapper) },
          _react2.default.createElement(
            _row2.default,
            { display: 'flex', className: this._getFullPageClass() },
            _react2.default.createElement(
              _factory.Div,
              _extends({}, this._getColumnProps(this.props.contentWrapperProps, [this.getClassName('content'), this._getFullPageClass()], CONTENT), { mainAttrs: { style: { width: width.widthContent } } }),
              this._getContentDiv()
            ),
            _react2.default.createElement(_pageColumn2.default, _extends({}, this._getColumnProps(this.props.rightWrapperProps, this.getClassName('right'), RIGHT, screenSize, !width.floatRight), { width: width.widthRight, minWidth: width.minWidthRight, maxWidth: width.maxWidthRight, openContent: this._getRightContent().open, closedContent: this._getRightContent().closed, ref_: function ref_(right) {
                return _this13._pageRight = right;
              }, block: !width.floatRight, right: true }))
          ),
          _react2.default.createElement(_row2.default, _extends({}, this._getColumnProps(this.props.bottomWrapperProps, this.getClassName('bottom'), BOTTOM), { content: this._getBottom() }))
        )
      ),
      this._getAlertBus(),
      this._getModal()
    );
  },
  _getType6: function _getType6() {
    var _this14 = this;

    var screenSize = this.getScreenSize();
    var width = this._getWidth(screenSize, RIGHT);

    return _react2.default.createElement(
      _factory.Div,
      this._getPropsToPass(),
      this._getAppLayer(),
      this._getSystemLayer(),
      _react2.default.createElement(_row2.default, _extends({}, this._getColumnProps(this.props.topWrapperProps, this.getClassName('top'), TOP), { content: this._getTop() })),
      _react2.default.createElement(
        _row2.default,
        { display: 'flex', className: this._getFullPageClass(true) },
        _react2.default.createElement(
          _factory.Div,
          { mainAttrs: { style: { width: width.widthWrapper } }, className: this.getClassName('flex') },
          _react2.default.createElement(
            _row2.default,
            { display: 'flex', style: { position: 'relative' }, className: this._getFullPageClass() },
            _react2.default.createElement(_pageColumn2.default, _extends({}, this._getColumnProps(this.props.leftWrapperProps, this.getClassName('left'), LEFT, screenSize, !width.floatLeft), { width: width.widthLeft, minWidth: width.minWidthLeft, maxWidth: width.maxWidthLeft, openContent: this._getLeftContent().open, closedContent: this._getLeftContent().closed, ref_: function ref_(left) {
                return _this14._pageLeft = left;
              }, block: !width.floatLeft })),
            _react2.default.createElement(
              _factory.Div,
              _extends({}, this._getColumnProps(this.props.contentWrapperProps, this.getClassName('content'), CONTENT), { mainAttrs: this._getContentAttrs(screenSize, width.widthContent, width.widthContent) }),
              this._getContentDiv()
            )
          ),
          _react2.default.createElement(_row2.default, _extends({}, this._getColumnProps(this.props.bottomWrapperProps, this.getClassName('bottom'), BOTTOM), { content: this._getBottom() }))
        ),
        _react2.default.createElement(_pageColumn2.default, _extends({}, this._getColumnProps(this.props.rightWrapperProps, this.getClassName('right'), RIGHT, screenSize, !width.floatRight), { width: width.widthRight, minWidth: width.minWidthRight, maxWidth: width.maxWidthRight, openContent: this._getRightContent().open, closedContent: this._getRightContent().closed, ref_: function ref_(right) {
            return _this14._pageRight = right;
          }, block: !width.floatRight, right: true }))
      ),
      this._getAlertBus(),
      this._getModal()
    );
  },
  _getType7: function _getType7() {
    var _this15 = this;

    var screenSize = this.getScreenSize();
    var width = this._getWidth(screenSize, LEFT);

    return _react2.default.createElement(
      _factory.Div,
      this._getPropsToPass(),
      this._getAppLayer(),
      this._getSystemLayer(),
      _react2.default.createElement(
        _row2.default,
        { display: 'flex', className: this._getFullPageClass(true) },
        _react2.default.createElement(_pageColumn2.default, _extends({}, this._getColumnProps(this.props.leftWrapperProps, this.getClassName('left'), LEFT, screenSize, !width.floatLeft), { width: width.widthLeft, minWidth: width.minWidthLeft, maxWidth: width.maxWidthLeft, openContent: this._getLeftContent().open, closedContent: this._getLeftContent().closed, ref_: function ref_(left) {
            return _this15._pageLeft = left;
          }, block: !width.floatLeft })),
        _react2.default.createElement(
          _factory.Div,
          { className: this.getClassName('flex'), mainAttrs: this._getContentAttrs(screenSize, width.widthWrapper) },
          _react2.default.createElement(_row2.default, _extends({}, this._getColumnProps(this.props.topWrapperProps, this.getClassName('top'), TOP), { content: this._getTop() })),
          _react2.default.createElement(
            _row2.default,
            { display: 'flex', className: this._getFullPageClass() },
            _react2.default.createElement(
              _factory.Div,
              _extends({}, this._getColumnProps(this.props.contentWrapperProps, this.getClassName('content'), CONTENT), { mainAttrs: { style: { width: width.widthContent } } }),
              this._getContentDiv()
            ),
            _react2.default.createElement(_pageColumn2.default, _extends({}, this._getColumnProps(this.props.rightWrapperProps, this.getClassName('right'), RIGHT, screenSize, !width.floatRight), { width: width.widthRight, minWidth: width.minWidthRight, maxWidth: width.maxWidthRight, openContent: this._getRightContent().open, closedContent: this._getRightContent().closed, ref_: function ref_(right) {
                return _this15._pageRight = right;
              }, block: !width.floatRight, right: true }))
          )
        )
      ),
      _react2.default.createElement(_row2.default, _extends({}, this._getColumnProps(this.props.bottomWrapperProps, this.getClassName('bottom'), BOTTOM), { content: this._getBottom() })),
      this._getAlertBus(),
      this._getModal()
    );
  },
  _getType8: function _getType8() {
    var _this16 = this;

    var screenSize = this.getScreenSize();
    var width = this._getWidth(screenSize, RIGHT);

    return _react2.default.createElement(
      _factory.Div,
      this._getPropsToPass(),
      this._getAppLayer(),
      this._getSystemLayer(),
      _react2.default.createElement(
        _row2.default,
        { display: 'flex', className: this._getFullPageClass(true) },
        _react2.default.createElement(
          _factory.Div,
          { mainAttrs: { style: { width: width.widthWrapper } }, className: this.getClassName('flex') },
          _react2.default.createElement(_row2.default, _extends({}, this._getColumnProps(this.props.topWrapperProps, this.getClassName('top'), TOP), { content: this._getTop() })),
          _react2.default.createElement(
            _row2.default,
            { display: 'flex', style: { position: 'relative' }, className: this._getFullPageClass() },
            _react2.default.createElement(_pageColumn2.default, _extends({}, this._getColumnProps(this.props.leftWrapperProps, this.getClassName('left'), LEFT, screenSize, !width.floatLeft), { width: width.widthLeft, minWidth: width.minWidthLeft, maxWidth: width.maxWidthLeft, openContent: this._getLeftContent().open, closedContent: this._getLeftContent().closed, ref_: function ref_(left) {
                return _this16._pageLeft = left;
              }, block: !width.floatLeft })),
            _react2.default.createElement(
              _factory.Div,
              _extends({}, this._getColumnProps(this.props.contentWrapperProps, this.getClassName('content'), CONTENT), { mainAttrs: this._getContentAttrs(screenSize, width.widthContent, width.widthContent) }),
              this._getContentDiv()
            )
          )
        ),
        _react2.default.createElement(_pageColumn2.default, _extends({}, this._getColumnProps(this.props.rightWrapperProps, this.getClassName('right'), RIGHT, screenSize, !width.floatRight), { width: width.widthRight, minWidth: width.minWidthRight, maxWidth: width.maxWidthRight, openContent: this._getRightContent().open, closedContent: this._getRightContent().closed, ref_: function ref_(right) {
            return _this16._pageRight = right;
          }, block: !width.floatRight, right: true }))
      ),
      _react2.default.createElement(_row2.default, _extends({}, this._getColumnProps(this.props.bottomWrapperProps, this.getClassName('bottom'), BOTTOM), { content: this._getBottom() })),
      this._getAlertBus(),
      this._getModal()
    );
  },
  _getType9: function _getType9() {
    var _this17 = this;

    var screenSize = this.getScreenSize();
    var width = this._getWidth(screenSize, LEFT);

    return _react2.default.createElement(
      _factory.Div,
      this._getPropsToPass(),
      this._getAppLayer(),
      this._getSystemLayer(),
      _react2.default.createElement(
        _row2.default,
        { display: 'flex', className: this._getFullPageClass(true) },
        _react2.default.createElement(_pageColumn2.default, _extends({}, this._getColumnProps(this.props.leftWrapperProps, this.getClassName('left'), LEFT, screenSize, !width.floatLeft), { width: width.widthLeft, minWidth: width.minWidthLeft, maxWidth: width.maxWidthLeft, openContent: this._getLeftContent().open, closedContent: this._getLeftContent().closed, ref_: function ref_(left) {
            return _this17._pageLeft = left;
          }, block: !width.floatLeft })),
        _react2.default.createElement(
          _factory.Div,
          { className: this.getClassName('flex'), mainAttrs: this._getContentAttrs(screenSize, width.widthWrapper) },
          _react2.default.createElement(_row2.default, _extends({}, this._getColumnProps(this.props.topWrapperProps, this.getClassName('top'), TOP), { content: this._getTop() })),
          _react2.default.createElement(
            _row2.default,
            { display: 'flex', className: this._getFullPageClass() },
            _react2.default.createElement(
              _factory.Div,
              _extends({}, this._getColumnProps(this.props.contentWrapperProps, this.getClassName('content'), CONTENT), { mainAttrs: { style: { width: width.widthContent } } }),
              this._getContentDiv()
            ),
            _react2.default.createElement(_pageColumn2.default, _extends({}, this._getColumnProps(this.props.rightWrapperProps, this.getClassName('right'), RIGHT, screenSize, !width.floatRight), { width: width.widthRight, minWidth: width.minWidthRight, maxWidth: width.maxWidthRight, openContent: this._getRightContent().open, closedContent: this._getRightContent().closed, ref_: function ref_(right) {
                return _this17._pageRight = right;
              }, block: !width.floatRight, right: true }))
          ),
          _react2.default.createElement(_row2.default, _extends({}, this._getColumnProps(this.props.bottomWrapperProps, this.getClassName('bottom'), BOTTOM), { content: this._getBottom() }))
        )
      ),
      this._getAlertBus(),
      this._getModal()
    );
  },
  _getType10: function _getType10() {
    var _this18 = this;

    var screenSize = this.getScreenSize();
    var width = this._getWidth(screenSize, LEFT);

    return _react2.default.createElement(
      _factory.Div,
      this._getPropsToPass(),
      this._getAppLayer(),
      this._getSystemLayer(),
      _react2.default.createElement(
        _row2.default,
        { display: 'flex', className: this._getFullPageClass(true) },
        _react2.default.createElement(_pageColumn2.default, _extends({}, this._getColumnProps(this.props.leftWrapperProps, this.getClassName('left'), LEFT, screenSize, !width.floatLeft), { width: width.widthLeft, minWidth: width.minWidthLeft, maxWidth: width.maxWidthLeft, openContent: this._getLeftContent().open, closedContent: this._getLeftContent().closed, ref_: function ref_(left) {
            return _this18._pageLeft = left;
          }, block: !width.floatLeft })),
        _react2.default.createElement(
          _factory.Div,
          { className: this.getClassName('flex'), mainAttrs: this._getContentAttrs(screenSize, width.widthWrapper) },
          _react2.default.createElement(_row2.default, _extends({}, this._getColumnProps(this.props.topWrapperProps, this.getClassName('top'), TOP), { content: this._getTop() })),
          _react2.default.createElement(
            _row2.default,
            { display: 'flex', className: this._getFullPageClass() },
            _react2.default.createElement(
              _factory.Div,
              { mainAttrs: { style: { width: width.widthContent } }, className: this.getClassName('flex') },
              _react2.default.createElement(
                _row2.default,
                this._getColumnProps(this.props.contentWrapperProps, [this.getClassName('content'), this._getFullPageClass()], CONTENT),
                this._getContentDiv()
              ),
              _react2.default.createElement(_row2.default, _extends({}, this._getColumnProps(this.props.bottomWrapperProps, this.getClassName('bottom'), BOTTOM), { content: this._getBottom() }))
            ),
            _react2.default.createElement(_pageColumn2.default, _extends({}, this._getColumnProps(this.props.rightWrapperProps, this.getClassName('right'), RIGHT, screenSize, !width.floatRight), { width: width.widthRight, minWidth: width.minWidthRight, maxWidth: width.maxWidthRight, openContent: this._getRightContent().open, closedContent: this._getRightContent().closed, ref_: function ref_(right) {
                return _this18._pageRight = right;
              }, block: !width.floatRight, right: true }))
          )
        )
      ),
      this._getAlertBus(),
      this._getModal()
    );
  },
  _getType11: function _getType11() {
    var _this19 = this;

    var screenSize = this.getScreenSize();
    var width = this._getWidth(screenSize, LEFT);

    return _react2.default.createElement(
      _factory.Div,
      this._getPropsToPass(),
      this._getAppLayer(),
      this._getSystemLayer(),
      _react2.default.createElement(
        _row2.default,
        { display: 'flex', className: this._getFullPageClass(true) },
        _react2.default.createElement(_pageColumn2.default, _extends({}, this._getColumnProps(this.props.leftWrapperProps, this.getClassName('left'), LEFT, screenSize, !width.floatLeft), { width: width.widthLeft, minWidth: width.minWidthLeft, maxWidth: width.maxWidthLeft, openContent: this._getLeftContent().open, closedContent: this._getLeftContent().closed, ref_: function ref_(left) {
            return _this19._pageLeft = left;
          }, block: !width.floatLeft })),
        _react2.default.createElement(
          _factory.Div,
          { className: this.getClassName('flex'), mainAttrs: this._getContentAttrs(screenSize, width.widthWrapper) },
          _react2.default.createElement(
            _row2.default,
            { display: 'flex', className: this._getFullPageClass() },
            _react2.default.createElement(
              _factory.Div,
              { mainAttrs: { style: { width: width.widthContent } }, className: this.getClassName('flex') },
              _react2.default.createElement(_row2.default, _extends({}, this._getColumnProps(this.props.topWrapperProps, this.getClassName('top'), TOP), { content: this._getTop() })),
              _react2.default.createElement(
                _row2.default,
                this._getColumnProps(this.props.contentWrapperProps, [this.getClassName('content'), this._getFullPageClass()], CONTENT),
                this._getContentDiv()
              )
            ),
            _react2.default.createElement(_pageColumn2.default, _extends({}, this._getColumnProps(this.props.rightWrapperProps, this.getClassName('right'), RIGHT, screenSize, !width.floatRight), { width: width.widthRight, minWidth: width.minWidthRight, maxWidth: width.maxWidthRight, openContent: this._getRightContent().open, closedContent: this._getRightContent().closed, ref_: function ref_(right) {
                return _this19._pageRight = right;
              }, block: !width.floatRight, right: true }))
          ),
          _react2.default.createElement(_row2.default, _extends({}, this._getColumnProps(this.props.bottomWrapperProps, this.getClassName('bottom'), BOTTOM), { content: this._getBottom() }))
        )
      ),
      this._getAlertBus(),
      this._getModal()
    );
  },
  _getType12: function _getType12() {
    var _this20 = this;

    var screenSize = this.getScreenSize();
    var width = this._getWidth(screenSize, RIGHT);

    return _react2.default.createElement(
      _factory.Div,
      this._getPropsToPass(),
      this._getAppLayer(),
      this._getSystemLayer(),
      _react2.default.createElement(
        _row2.default,
        { display: 'flex', className: this._getFullPageClass(true) },
        _react2.default.createElement(
          _factory.Div,
          { mainAttrs: { style: { width: width.widthWrapper } }, className: this.getClassName('flex') },
          _react2.default.createElement(_row2.default, _extends({}, this._getColumnProps(this.props.topWrapperProps, this.getClassName('top'), TOP), { content: this._getTop() })),
          _react2.default.createElement(
            _row2.default,
            { display: 'flex', style: { position: 'relative' }, className: this._getFullPageClass() },
            _react2.default.createElement(_pageColumn2.default, _extends({}, this._getColumnProps(this.props.leftWrapperProps, this.getClassName('left'), LEFT, screenSize, !width.floatLeft), { width: width.widthLeft, minWidth: width.minWidthLeft, maxWidth: width.maxWidthLeft, openContent: this._getLeftContent().open, closedContent: this._getLeftContent().closed, ref_: function ref_(left) {
                return _this20._pageLeft = left;
              }, block: !width.floatLeft })),
            _react2.default.createElement(
              _factory.Div,
              _extends({}, this._getColumnProps(this.props.contentWrapperProps, [this.getClassName('content'), this._getFullPageClass()], CONTENT), { mainAttrs: this._getContentAttrs(screenSize, width.widthContent, width.widthContent) }),
              this._getContentDiv()
            )
          ),
          _react2.default.createElement(_row2.default, _extends({}, this._getColumnProps(this.props.bottomWrapperProps, this.getClassName('bottom'), BOTTOM), { content: this._getBottom() }))
        ),
        _react2.default.createElement(_pageColumn2.default, _extends({}, this._getColumnProps(this.props.rightWrapperProps, this.getClassName('right'), RIGHT, screenSize, !width.floatRight), { width: width.widthRight, minWidth: width.minWidthRight, maxWidth: width.maxWidthRight, openContent: this._getRightContent().open, closedContent: this._getRightContent().closed, ref_: function ref_(right) {
            return _this20._pageRight = right;
          }, block: !width.floatRight, right: true }))
      ),
      this._getAlertBus(),
      this._getModal()
    );
  },
  _getType13: function _getType13() {
    var _this21 = this;

    var screenSize = this.getScreenSize();
    var width = this._getWidth(screenSize, RIGHT);

    return _react2.default.createElement(
      _factory.Div,
      this._getPropsToPass(),
      this._getAppLayer(),
      this._getSystemLayer(),
      _react2.default.createElement(
        _row2.default,
        { display: 'flex', className: this._getFullPageClass(true) },
        _react2.default.createElement(
          _factory.Div,
          { mainAttrs: { style: { width: width.widthWrapper } }, className: this.getClassName('flex') },
          _react2.default.createElement(_row2.default, _extends({}, this._getColumnProps(this.props.topWrapperProps, this.getClassName('top'), TOP), { content: this._getTop() })),
          _react2.default.createElement(
            _row2.default,
            { display: 'flex', style: { position: 'relative' }, className: this._getFullPageClass() },
            _react2.default.createElement(_pageColumn2.default, _extends({}, this._getColumnProps(this.props.leftWrapperProps, this.getClassName('left'), LEFT, screenSize, !width.floatLeft), { width: width.widthLeft, minWidth: width.minWidthLeft, maxWidth: width.maxWidthLeft, openContent: this._getLeftContent().open, closedContent: this._getLeftContent().closed, ref_: function ref_(left) {
                return _this21._pageLeft = left;
              }, block: !width.floatLeft })),
            _react2.default.createElement(
              _factory.Div,
              { className: this.getClassName('flex'), mainAttrs: this._getContentAttrs(screenSize, width.widthContent, width.widthContent) },
              _react2.default.createElement(
                _row2.default,
                this._getColumnProps(this.props.contentWrapperProps, [this.getClassName('content'), this._getFullPageClass()], CONTENT),
                this._getContentDiv()
              ),
              _react2.default.createElement(_row2.default, _extends({}, this._getColumnProps(this.props.bottomWrapperProps, this.getClassName('bottom'), BOTTOM), { content: this._getBottom() }))
            )
          )
        ),
        _react2.default.createElement(_pageColumn2.default, _extends({}, this._getColumnProps(this.props.rightWrapperProps, this.getClassName('right'), RIGHT, screenSize, !width.floatRight), { width: width.widthRight, minWidth: width.minWidthRight, maxWidth: width.maxWidthRight, openContent: this._getRightContent().open, closedContent: this._getRightContent().closed, ref_: function ref_(right) {
            return _this21._pageRight = right;
          }, block: !width.floatRight, right: true }))
      ),
      this._getAlertBus(),
      this._getModal()
    );
  },
  _getType14: function _getType14() {
    var _this22 = this;

    var screenSize = this.getScreenSize();
    var width = this._getWidth(screenSize, RIGHT);

    return _react2.default.createElement(
      _factory.Div,
      this._getPropsToPass(),
      this._getAppLayer(),
      this._getSystemLayer(),
      _react2.default.createElement(
        _row2.default,
        { display: 'flex', className: this._getFullPageClass(true) },
        _react2.default.createElement(
          _factory.Div,
          { mainAttrs: { style: { width: width.widthWrapper } }, className: this.getClassName('flex') },
          _react2.default.createElement(
            _row2.default,
            { display: 'flex', style: { position: 'relative' }, className: this._getFullPageClass() },
            _react2.default.createElement(_pageColumn2.default, _extends({}, this._getColumnProps(this.props.leftWrapperProps, this.getClassName('left'), LEFT, screenSize, !width.floatLeft), { width: width.widthLeft, minWidth: width.minWidthLeft, maxWidth: width.maxWidthLeft, openContent: this._getLeftContent().open, closedContent: this._getLeftContent().closed, ref_: function ref_(left) {
                return _this22._pageLeft = left;
              }, block: !width.floatLeft })),
            _react2.default.createElement(
              _factory.Div,
              { className: this.getClassName('flex'), mainAttrs: this._getContentAttrs(screenSize, width.widthContent, width.widthContent) },
              _react2.default.createElement(_row2.default, _extends({}, this._getColumnProps(this.props.topWrapperProps, this.getClassName('top'), TOP), { content: this._getTop() })),
              _react2.default.createElement(
                _row2.default,
                this._getColumnProps(this.props.contentWrapperProps, [this.getClassName('content'), this._getFullPageClass()], CONTENT),
                this._getContentDiv()
              )
            )
          ),
          _react2.default.createElement(_row2.default, _extends({}, this._getColumnProps(this.props.bottomWrapperProps, this.getClassName('bottom'), BOTTOM), { content: this._getBottom() }))
        ),
        _react2.default.createElement(_pageColumn2.default, _extends({}, this._getColumnProps(this.props.rightWrapperProps, this.getClassName('right'), RIGHT, screenSize, !width.floatRight), { width: width.widthRight, minWidth: width.minWidthRight, maxWidth: width.maxWidthRight, openContent: this._getRightContent().open, closedContent: this._getRightContent().closed, ref_: function ref_(right) {
            return _this22._pageRight = right;
          }, block: !width.floatRight, right: true }))
      ),
      this._getAlertBus(),
      this._getModal()
    );
  },
  _getPageByType: function _getPageByType() {
    var result = void 0;
    switch (this.props.type.toString()) {
      case '0':
        result = this._getType0();
        break;
      case '1':
        result = this._getType1();
        break;
      case '2':
        result = this._getType2();
        break;
      case '3':
        result = this._getType3();
        break;
      case '4':
        result = this._getType4();
        break;
      case '5':
        result = this._getType5();
        break;
      case '6':
        result = this._getType6();
        break;
      case '7':
        result = this._getType7();
        break;
      case '8':
        result = this._getType8();
        break;
      case '9':
        result = this._getType9();
        break;
      case '10':
        result = this._getType10();
        break;
      case '11':
        result = this._getType11();
        break;
      case '12':
        result = this._getType12();
        break;
      case '13':
        result = this._getType13();
        break;
      case '14':
        result = this._getType14();
        break;
    }
    return result;
  },

  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render: function render() {
    return this.getNestingLevel() ? this._getPageByType() : null;
  }
  //@@viewOff:render

});

Page.MenuButton = _pageMenuButton2.default;
exports.default = Page;