"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MenuButton = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _createReactClass = require("create-react-class");

var _createReactClass2 = _interopRequireDefault(_createReactClass);

var _propTypes = require("prop-types");

var _propTypes2 = _interopRequireDefault(_propTypes);

var _uu5g = require("uu5g04");

var UU5 = _interopRequireWildcard(_uu5g);

var _bricksNs = require("./bricks-ns.js");

var _bricksNs2 = _interopRequireDefault(_bricksNs);

var _button = require("./button.js");

var _button2 = _interopRequireDefault(_button);

require("./page-menu-button.less");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MenuButton = exports.MenuButton = (0, _createReactClass2.default)({
  displayName: "MenuButton",


  //@@viewOn:mixins
  mixins: [UU5.Common.BaseMixin, UU5.Common.ElementaryMixin, UU5.Common.ContentMixin, UU5.Common.ColorSchemaMixin, UU5.Common.NestingLevelMixin, UU5.Common.CcrReaderMixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: _bricksNs2.default.name("Page.MenuButton"),
    nestingLevel: 'smallBox',
    classNames: {
      main: _bricksNs2.default.css("page-menu-button"),
      left: _bricksNs2.default.css("page-menu-button-left"),
      right: _bricksNs2.default.css("page-menu-button-right")
    },
    opt: {
      nestingLevelWrapper: true
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    menu: _propTypes2.default.oneOf(['left', 'right']),
    onClick: _propTypes2.default.func,
    pageKey: _propTypes2.default.string,
    size: _propTypes2.default.string,
    displayBlock: _propTypes2.default.bool,
    pressed: _propTypes2.default.bool,
    bgStyle: _propTypes2.default.string
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      menu: 'left',
      onClick: null,
      pageKey: null,
      size: 'm',
      displayBlock: false,
      pressed: false,
      bgStyle: undefined
    };
  },

  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  componentDidMount: function componentDidMount() {
    UU5.Environment.EventListener.registerEvent('pageColumn', this.getId(), this._setVisibility);
  },

  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _getPage: function _getPage() {
    return this.getCcrComponentByKey(this.props.pageKey || UU5.Environment.CCRKEY_PAGE);
  },
  _onClick: function _onClick(button, e) {
    if (typeof this.props.onClick === 'function') {
      this.props.onClick(this, e);
    } else {
      var page = this._getPage();
      if (page) {
        switch (this.props.menu) {
          case 'left':
            page.toggleLeft();
            break;
          case 'right':
            page.toggleRight();
            break;
        }
      }
    }
    return this;
  },
  _isFloat: function _isFloat() {
    var float = false;
    var page = this._getPage();

    if (page) {
      switch (this.props.menu) {
        case 'left':
          float = page.isLeftFloat();
          break;
        case 'right':
          float = page.isRightFloat();
          break;
        default:
          float = false;
      }
    }
    return float;
  },
  _getPropsToPass: function _getPropsToPass() {
    var props = this.getMainPropsToPass();
    props.className = props.className + ' ' + this.getClassName(this.props.menu);
    props.size = this.props.size;
    props.displayBlock = this.props.displayBlock;
    props.pressed = this.props.pressed;
    props.bgStyle = this.props.bgStyle;
    return props;
  },
  _getChild: function _getChild() {
    var child = null;
    var content = this.props.content || this.getChildren() || _react2.default.createElement(UU5.Bricks.Icon, { icon: "mdi-menu" });
    if (this._isFloat()) {
      child = _react2.default.createElement(_button2.default, _extends({}, this._getPropsToPass(), { onClick: this._onClick, content: content }));
    }
    return child;
  },
  _setVisibility: function _setVisibility(menu, visible) {
    menu === this.props.menu && this.setAsyncState({ hidden: !visible });
    return this;
  },

  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render: function render() {
    return this.getNestingLevel() ? this._getChild() : null;
  }
} //@@viewOff:render

);

exports.default = MenuButton;