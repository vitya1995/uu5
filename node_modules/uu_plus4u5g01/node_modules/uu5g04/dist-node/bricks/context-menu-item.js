'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ContextMenuItem = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _createReactClass = require('create-react-class');

var _createReactClass2 = _interopRequireDefault(_createReactClass);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _uu5g = require('uu5g04');

var UU5 = _interopRequireWildcard(_uu5g);

var _bricksNs = require('./bricks-ns.js');

var _bricksNs2 = _interopRequireDefault(_bricksNs);

var _contextMenu = require('./context-menu.js');

var _contextMenu2 = _interopRequireDefault(_contextMenu);

var _link = require('./link.js');

var _link2 = _interopRequireDefault(_link);

var _icon = require('./icon.js');

var _icon2 = _interopRequireDefault(_icon);

require('./context-menu-item.less');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ContextMenuItem = exports.ContextMenuItem = (0, _createReactClass2.default)({
  displayName: 'ContextMenuItem',


  //@@viewOn:mixins
  mixins: [UU5.Common.BaseMixin, UU5.Common.ElementaryMixin, UU5.Common.ContentMixin, UU5.Common.PureRenderMixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: _bricksNs2.default.name("ContextMenu.Item"),
    classNames: {
      main: _bricksNs2.default.css("context-menu-item"),
      link: _bricksNs2.default.css("context-menu-item-link"),
      icon: _bricksNs2.default.css("context-menu-item-icon"),
      nestedIcon: _bricksNs2.default.css("context-menu-item-nested-icon"),
      space: _bricksNs2.default.css("context-menu-item-space"),
      divider: _bricksNs2.default.css("context-menu-item-divider")
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    label: _propTypes2.default.any, // content
    href: _propTypes2.default.string,
    onClick: _propTypes2.default.func,
    smoothScroll: _propTypes2.default.number,
    offset: _propTypes2.default.number,
    target: _propTypes2.default.string,
    icon: _propTypes2.default.string,
    space: _propTypes2.default.bool,
    divider: _propTypes2.default.bool
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      label: null,
      href: '#',
      onClick: null,
      smoothScroll: null,
      offset: null,
      target: '_self',
      icon: null,
      space: false,
      divider: false
    };
  },

  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _getLinkProps: function _getLinkProps() {
    var linkProps = {
      className: this.getClassName().link,
      parent: this,
      disabled: this.isDisabled(),
      colorSchema: "custom"
    };

    if (!this.isDisabled()) {
      linkProps.onClick = this._onItemClick;
      linkProps.href = this.props.href;
      linkProps.smoothScroll = this.props.smoothScroll;
      linkProps.offset = this.props.offset;
      linkProps.target = this.props.target;
    }

    return linkProps;
  },
  _getStandardItem: function _getStandardItem(props) {
    var linkProps = this._getLinkProps();

    this.props.space && !this.props.icon && (props.className += ' ' + this.getClassName('space'));
    var content = [this.props.label];
    this.props.icon && content.unshift(_react2.default.createElement(_icon2.default, { icon: this.props.icon, className: this.getClassName('icon') }));
    linkProps.content = content;

    return _react2.default.createElement(
      'li',
      props,
      _react2.default.createElement(_link2.default, linkProps)
    );
  },
  _getNestingItem: function _getNestingItem(props) {
    var _this = this;

    var linkProps = this._getLinkProps();
    linkProps.onClick = null;
    linkProps.href = null;

    this.props.space && !this.props.icon && (props.className += ' ' + this.getClassName('space'));
    var content = [this.props.label];
    this.props.icon && content.unshift(_react2.default.createElement(_icon2.default, { icon: this.props.icon, className: this.getClassName('icon') }));
    content.push(_react2.default.createElement(_icon2.default, { icon: 'mdi-menu-right', className: this.getClassName('icon') }));
    linkProps.content = content;

    return _react2.default.createElement(
      'li',
      _extends({}, props, { onMouseEnter: function onMouseEnter(e) {
          var rect = e.currentTarget.getBoundingClientRect();
          var x = rect.width - 1;
          var y = -1;

          _this._nestedMenu.open({ pageX: x, pageY: y });
        }, onMouseLeave: this._onMouseLeaveHandler }),
      _react2.default.createElement(_link2.default, linkProps),
      this._getNestedContextMenu()
    );
  },
  _onItemClick: function _onItemClick(target, event) {
    var parent = this.getParentByType('isContextMenu') || this.getParent();
    if (typeof this.props.onClick === 'function') {
      this.props.onClick({ component: parent, target: target, event: event, value: this.props.label });
    } else {
      parent && parent.close();
    }
    return this;
  },
  _getContentItem: function _getContentItem(props) {
    return _react2.default.createElement(
      'li',
      props,
      this.getChildren()
    );
  },
  _getDividerItem: function _getDividerItem(props) {
    props.className += ' ' + this.getClassName().divider;
    return _react2.default.createElement('li', props);
  },
  _onMouseLeaveHandler: function _onMouseLeaveHandler(e) {
    this._nestedMenu.close();
  },
  _getNestedContextMenu: function _getNestedContextMenu() {
    var _this2 = this;

    return _react2.default.createElement(
      _contextMenu2.default,
      { key: 'nestedMenu', ref_: function ref_(cm) {
          return _this2._nestedMenu = cm;
        }, parent: this },
      this.getChildren()
    );
  },

  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render: function render() {
    var mainAttrs = this.getMainAttrs();
    mainAttrs.id = this.getId();

    var result = null;

    if (this.props.divider) {
      result = this._getDividerItem(mainAttrs);
    } else if (this.getContent() || this.props.children) {
      if (this.props.label) {
        result = this._getNestingItem(mainAttrs);
      } else {
        result = this._getContentItem(mainAttrs);
      }
    } else {
      result = this._getStandardItem(mainAttrs);
    }

    return result;
  }
  //@@viewOff:render

});

exports.default = ContextMenuItem;