'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Box = undefined;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _createReactClass = require('create-react-class');

var _createReactClass2 = _interopRequireDefault(_createReactClass);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _uu5g = require('uu5g04');

var UU5 = _interopRequireWildcard(_uu5g);

var _bricksNs = require('./bricks-ns.js');

var _bricksNs2 = _interopRequireDefault(_bricksNs);

var _modal = require('./modal.js');

var _modal2 = _interopRequireDefault(_modal);

require('./box.less');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Box = exports.Box = (0, _createReactClass2.default)({
  displayName: 'Box',


  //@@viewOn:mixins
  mixins: [UU5.Common.BaseMixin, UU5.Common.ElementaryMixin, UU5.Common.NestingLevelMixin, UU5.Common.ContentMixin, UU5.Common.ColorSchemaMixin, UU5.Common.PureRenderMixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: _bricksNs2.default.name("Box"),
    nestingLevelList: UU5.Environment.getNestingLevelList('bigBoxCollection', 'inline'),
    classNames: {
      main: _bricksNs2.default.css("box", "text uu5-common-text uu5-common-bg"),
      nestingLevelSmallBox: _bricksNs2.default.css("box-nesting-level-small-box uu5-common-padding-s"),
      nestingLevelInline: _bricksNs2.default.css("box-nesting-level-inline"),
      modal: _bricksNs2.default.css("box-modal"),
      click: _bricksNs2.default.css("box-click")
    },
    opt: {
      nestingLeveWrapper: true
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    infoHeader: _propTypes2.default.any,
    infoContent: _propTypes2.default.any,
    disableClick: _propTypes2.default.bool
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      infoHeader: 'Info',
      infoContent: null,
      disableClick: false
    };
  },

  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  openInfo: function openInfo(modalProps, setStateCallback) {
    if (this.props.infoContent || modalProps.content) {
      this.modal.open(modalProps, setStateCallback);
    }
    return this;
  },
  closeInfo: function closeInfo(setStateCallback) {
    this.modal.close(true, setStateCallback);
    return this;
  },

  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _getMainAttrs: function _getMainAttrs() {
    var _this = this;

    var attrs = this.getMainAttrs();

    if (this.props.infoContent && !this.props.disableClick) {
      attrs.onClick = function () {
        return !_this.isDisabled() && _this.modal.open();
      };
      attrs.className += ' ' + this.getClassName().click;
    }

    switch (this.getNestingLevel()) {
      case 'inline':
        attrs.className += ' ' + this.getClassName().nestingLevelInline;
        break;
      default:
        attrs.className += ' ' + this.getClassName().nestingLevelSmallBox;
    }

    return attrs;
  },

  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render: function render() {
    var _this2 = this;

    var component = null;
    if (this.getNestingLevel()) {
      if (this.getNestingLevel() === "inline") {
        component = _react2.default.createElement(
          UU5.Bricks.Text,
          this.getMainPropsToPass(),
          this.getChildren(),
          this.getDisabledCover()
        );
      } else {
        var modal = void 0;

        if (this.props.infoContent) {
          modal = _react2.default.createElement(_modal2.default, { className: this.getClassName().modal, ref_: function ref_(modal) {
              return _this2.modal = modal;
            }, content: this.props.infoContent, header: this.props.infoHeader, parent: this });
        }

        component = _react2.default.createElement(
          'div',
          null,
          _react2.default.createElement(
            'div',
            this._getMainAttrs(),
            this.getChildren(),
            this.getDisabledCover()
          ),
          modal
        );
      }
    }

    return component;
  }
  //@@viewOff:render

});

exports.default = Box;