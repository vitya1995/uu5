'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _createReactClass = require('../create-react-class.js');

var _createReactClass2 = _interopRequireDefault(_createReactClass);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _uu5g = require('uu5g04');

var UU5 = _interopRequireWildcard(_uu5g);

var _bricksNs = require('./bricks-ns.js');

var _bricksNs2 = _interopRequireDefault(_bricksNs);

require('./panel-body.less');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = (0, _createReactClass2.default)({
  displayName: 'panel-body',


  //@@viewOn:mixins
  mixins: [UU5.Common.BaseMixin, UU5.Common.PureRenderMixin, UU5.Common.ElementaryMixin, UU5.Common.ContentMixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: _bricksNs2.default.name("Panel.Body"),
    classNames: {
      main: _bricksNs2.default.css("panel-body"),
      body: _bricksNs2.default.css("panel-body-body"),
      block: _bricksNs2.default.css("panel-body-block"),
      expanding: _bricksNs2.default.css("panel-body-expanding")
    },
    defaults: {
      parentTagName: 'UU5.Bricks.Panel',
      duration: 250
    },
    errors: {
      invalidParent: 'Parent of this component is not Panel.'
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    _expanded: _propTypes2.default.bool
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      _expanded: false
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  getInitialState: function getInitialState() {
    return {
      height: this._getHeight(this.props)
    };
  },

  componentWillMount: function componentWillMount() {
    //this.checkParentTagName(this.getDefault().parentTagName);

    if (!(this.getParent() && this.getParent().isPanel)) {
      this.showError("invalidParent");
    }
  },

  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    var body = this;
    var height = this._getHeight(nextProps);

    if (height) {
      this.setState({ height: height }, function () {
        body.timer && clearTimeout(body.timer);
        body.timer = setTimeout(function () {
          body.setAsyncState({ height: null });
        }, body.getDefault().duration);
      });
    } else {
      this.setState({ height: this._getHeight(this.props) }, function () {
        body.timer && clearTimeout(body.timer);
        body.timer = setTimeout(function () {
          body.setAsyncState({ height: height });
        }, 1);
      });
    }
  },

  componentWillUnmount: function componentWillUnmount() {
    this.timer && clearTimeout(this.timer);
  },

  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _getPanelBodyId: function _getPanelBodyId() {
    return this.getId() + '-content';
  },

  _getHeight: function _getHeight(props) {
    var result = void 0;
    if (props._expanded) {
      var element = document.getElementById(this._getPanelBodyId());
      element && (result = UU5.Common.Tools.getOuterHeight(element, true));
    } else {
      result = 0;
    }
    return result;
  },
  //@@viewOff:componentSpecificHelpers

  // Render
  _getMainAttrs: function _getMainAttrs() {
    var mainAttrs = this.getMainAttrs();

    if (this.state.height === null) {
      mainAttrs.className += ' ' + this.getClassName().block;
    } else {
      this.state.height > 0 && (mainAttrs.className += ' ' + this.getClassName().expanding);

      mainAttrs.style = mainAttrs.style || {};
      mainAttrs.style.height = this.state.height + 'px';

      var time = this.getDefault().duration / 1000;
      ['WebkitTransitionDuration', 'MozTransitionDuration', 'MsTransitionDuration', 'OTransitionDuration', 'transitionDuration'].forEach(function (style) {
        mainAttrs.style[style] = time + 's';
      });
    }

    return mainAttrs;
  },

  _buildChildren: function _buildChildren() {
    return this.buildChildren();
  },

  //@@viewOn:render
  render: function render() {
    var _this = this;

    return _react2.default.createElement(
      'div',
      this._getMainAttrs(),
      _react2.default.createElement(
        'div',
        { className: this.getClassName().body, id: this._getPanelBodyId(), ref: function ref(panelBody) {
            return _this._panelBody = panelBody;
          } },
        this._buildChildren()
      ),
      this.getDisabledCover()
    );
  }
  //@@viewOff:render
});