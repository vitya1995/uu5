'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Checkbox = undefined;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _createReactClass = require('create-react-class');

var _createReactClass2 = _interopRequireDefault(_createReactClass);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _uu5g = require('uu5g04');

var UU5 = _interopRequireWildcard(_uu5g);

require('uu5g04-bricks');

var _formsNs = require('./forms-ns.js');

var _formsNs2 = _interopRequireDefault(_formsNs);

var _inputMixin = require('./mixins/input-mixin.js');

var _inputMixin2 = _interopRequireDefault(_inputMixin);

var _message = require('./internal/message.js');

var _message2 = _interopRequireDefault(_message);

require('./checkbox.less');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Checkbox = exports.Checkbox = (0, _createReactClass2.default)({
  displayName: 'Checkbox',


  //@@viewOn:mixins
  mixins: [UU5.Common.BaseMixin, UU5.Common.PureRenderMixin, UU5.Common.ElementaryMixin, UU5.Common.ColorSchemaMixin, _inputMixin2.default],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: _formsNs2.default.name("Checkbox"),
    classNames: {
      main: _formsNs2.default.css("checkbox"),
      button: _formsNs2.default.css("checkbox-button"),
      right: _formsNs2.default.css("input-label-right"),
      rightWrapper: _formsNs2.default.css("right-wrapper"),
      radio: _formsNs2.default.css("input-radio"),
      checked: _formsNs2.default.css("checkbox-checked"),
      dot: _formsNs2.default.css("checkbox-dot")
    },
    defaults: {
      onIcon: 'mdi-check'
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    value: _propTypes2.default.bool,
    onIcon: _propTypes2.default.string,
    offIcon: _propTypes2.default.string,
    labelPosition: _propTypes2.default.oneOf(['left', 'right']),
    _radio: _propTypes2.default.bool
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      value: false,
      onIcon: '',
      offIcon: '',
      labelPosition: 'left',
      _radio: false
    };
  },

  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    if (nextProps.controlled) {
      this.setState({ value: nextProps.value });
    }
  },


  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _onChange: function _onChange(e) {
    var opt = { value: !this.state.value, event: e, component: this };
    if (!this.isDisabled() && !this.isReadOnly()) {
      if (typeof this.props.onChange === 'function') {
        this.props.onChange(opt);
      } else {
        this.setState(function (state) {
          return { value: !state.value };
        });
        return this;
      }
    }
  },
  _getMainAttrs: function _getMainAttrs() {
    var _this = this;

    var mainAttrs = this._getInputAttrs();
    mainAttrs.className += this.state.value ? ' ' + this.getClassName().checked : '';
    if (this.props._radio) {
      mainAttrs.className += ' ' + this.getClassName().radio;
    }

    if (this.props.labelPosition === 'right') {
      mainAttrs.className += ' ' + this.getClassName().right;
    }

    mainAttrs.onClick = function (e) {
      _this._onChange(e);
    };

    return mainAttrs;
  },
  _getIcon: function _getIcon() {
    var icon = void 0;

    if (this.props._radio && this.state.value && !this.props.onIcon) {
      icon = _react2.default.createElement('span', { className: this.getClassName('dot') });
    } else {
      icon = _react2.default.createElement(UU5.Bricks.Icon, { icon: this.state.value ? this.props.onIcon || this.getDefault('onIcon') : this.props.offIcon });
    }

    return icon;
  },

  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render: function render() {
    var inputId = this.getId() + '-input';
    var label = this.getLabel(inputId);

    return _react2.default.createElement(
      'div',
      this._getMainAttrs(),
      this.props.labelPosition === 'left' && label,
      this.getInputWrapper(_react2.default.createElement(
        UU5.Bricks.Div,
        { className: this.getClassName("rightWrapper") },
        _react2.default.createElement(UU5.Bricks.Button, { className: this.getClassName().button, colorSchema: 'custom', disabled: this.props.disabled, mainAttrs: this.props.inputAttrs, content: this._getIcon() }),
        this.props.labelPosition === 'right' && label
      ))
    );
  }
  //@@viewOn:render

});

exports.default = Checkbox;