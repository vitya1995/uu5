import React from 'react';
import createReactClass from 'create-react-class';
import ns from "./common-ns.js";
import BaseMixin from './base-mixin.js';
import ElementaryMixin from './elementary-mixin.js';
import Tools from './tools.js';
import PureRenderMixin from "./pure-render-mixin";

export const OutlineModal = createReactClass({

  //@@viewOn:mixins
  mixins: [BaseMixin, ElementaryMixin, PureRenderMixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: ns.name("Outline.Modal"),
    classNames: {
      main: ns.css("outline-modal")
    },
    errors: {
      invalidParent: 'Parent of this component is not Outline.'
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  getInitialState: function () {
    return {
      tag: null,
      props: null
    };
  },

  componentWillMount() {
    if (!this.getParentByType('isOutline')) {
      this.showError("invalidParent");
    }
  },
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  open: function (tag, props, setStateCallback) {
    this.setState({ shown: true, tag: tag, props: props }, setStateCallback);
    return this;
  },

  close: function (setStateCallback) {
    this.setState({ shown: false, tag: null, props: null }, setStateCallback);
    return this;
  },
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render: function () {
    let props = Tools.mergeDeep({}, this.getMainPropsToPass(), {
      shown: this.state.shown,
      header: this.state.tag,
      content: <pre>{this.state.props}</pre>
    });
    return Tools.findComponent('UU5.Bricks.Modal', props);
  }
  //@@viewOff:render
});

export default OutlineModal;