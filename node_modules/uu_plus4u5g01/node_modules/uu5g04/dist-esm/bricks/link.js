import React from 'react';
import createReactClass from '../create-react-class.js';
import PropTypes from 'prop-types';
import * as UU5 from "uu5g04";
import ns from "./bricks-ns.js";

import './link.less';

export const Link = createReactClass({

  //@@viewOn:mixins
  mixins: [UU5.Common.BaseMixin, UU5.Common.PureRenderMixin, UU5.Common.ElementaryMixin, UU5.Common.NestingLevelMixin, UU5.Common.ContentMixin, UU5.Common.ColorSchemaMixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: ns.name("Link"),
    nestingLevelList: UU5.Environment.getNestingLevelList('bigBoxCollection', 'inline'),
    classNames: {
      main: ns.css("link")
    },
    defaults: {
      content: 'noText'
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    href: PropTypes.string,
    onClick: PropTypes.func,
    onCtrlClick: PropTypes.func,
    onWheelClick: PropTypes.func,
    smoothScroll: PropTypes.number,
    offset: PropTypes.number,
    target: PropTypes.oneOf(['_blank', '_parent', '_top', '_self']),
    download: PropTypes.bool
    // disabledRouter: PropTypes.bool
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps: function () {
    return {
      href: null,
      onClick: null,
      onCtrlClick: null,
      onWheelClick: null,
      smoothScroll: 0,
      offset: 0,
      target: '_self',
      download: false
      // disabledRouter: false
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _isSmoothScroll() {
    return this.props.href && this.props.href.length > 1 && this.props.href.lastIndexOf('#', 0) === 0 && (this.props.smoothScroll > 0 || this.props.offset > 0);
  },

  _onClickHandler(e) {
    typeof this.props.onClick === 'function' && this.props.onClick(this, e);
    return this;
  },

  _onClickSmoothScroll(e) {
    e.preventDefault();
    UU5.Common.Tools.scrollToTarget(this.props.href, this.props.smoothScroll, this.props.offset);
    this._onClickHandler(e);
    return this;
  },

  // _onClickRouter: function (e) {
  //   e.preventDefault();
  //   this.props.router.push(this.props.href);
  //   this._onClickHandler(e);
  //   return this;
  // },
  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render() {
    let mainAttrs = this.getMainAttrs();

    if (!this.isDisabled()) {
      mainAttrs.href = this.props.href;

      if (typeof this.props.onClick === 'function' || typeof this.props.onWheelClick === 'function' || typeof this.props.onCtrlClick === 'function' || this._isSmoothScroll()) {
        mainAttrs.onClick = e => {
          this.props.href && e.preventDefault();

          if (e.ctrlKey && typeof this.props.onCtrlClick === 'function') {
            this.props.onCtrlClick(this, e);
          } else {
            if (this._isSmoothScroll()) {
              this._onClickSmoothScroll(e);
            } else if (typeof this.props.onClick === 'function') {
              this._onClickHandler(e);
            }
          }
        };
        if (typeof this.props.onWheelClick === 'function') {
          let onMouseDown = mainAttrs.onMouseDown;
          mainAttrs.onMouseDown = e => {
            e.button === 1 && e.preventDefault();
            typeof onMouseDown === 'function' && onMouseDown(e, this);
          };

          let onMouseUp = mainAttrs.onMouseUp;
          mainAttrs.onMouseUp = e => {
            if (e.button === 1) {
              e.preventDefault();
              this.props.onWheelClick(this, e);
            }
            typeof onMouseUp === 'function' && onMouseUp(e, this);
          };
        }
      } else {
        mainAttrs.target = this.props.target;
        mainAttrs.download = this.props.download;
      }
    }

    return this.getNestingLevel() ? <a {...mainAttrs}>
            {this.getChildren() || this.props.href || this.getDefault().content}
            {this.getDisabledCover()}
          </a> : null;
  }
  //@@viewOff:render
});

export const A = Link;

export default Link;