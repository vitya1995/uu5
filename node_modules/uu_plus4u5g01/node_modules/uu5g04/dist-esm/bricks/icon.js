import React from 'react';
import createReactClass from 'create-react-class';
import PropTypes from 'prop-types';
import * as UU5 from "uu5g04";
import ns from "./bricks-ns.js";

import './icon.less';

export const Icon = createReactClass({

  //@@viewOn:mixins
  mixins: [UU5.Common.BaseMixin, UU5.Common.PureRenderMixin, UU5.Common.ElementaryMixin, UU5.Common.NestingLevelMixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: ns.name("Icon"),
    nestingLevel: 'inline',
    classNames: {
      main: ns.css("icon"),
      notClickable: ns.css("icon-notclickable")
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    icon: PropTypes.string,
    clickable: PropTypes.bool
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps: function () {
    return {
      icon: 'mdi-check',
      clickable: true //TODO check if it is still needed
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render: function () {
    let mainProps = this.getMainAttrs();
    if (this.props.icon) {
      let splitter = this.props.icon.split('-');
      if (splitter) {
        let iconsName = splitter[0];
        UU5.Environment.IconManager.addIcons(iconsName);
        mainProps.className += ' ' + iconsName;
      }
      mainProps.className += ' ' + this.props.icon;
    }
    mainProps.className += !this.props.clickable ? ' ' + this.getClassName().notClickable : '';

    return this.getNestingLevel() ? <span {...mainProps}>
            {this.props.children && React.Children.toArray(this.props.children)}
            {this.getDisabledCover()}
          </span> : null;
  }
  //@@viewOff:render
});

export default Icon;