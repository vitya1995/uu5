import React from 'react';
import createReactClass from 'create-react-class';
import PropTypes from 'prop-types';
import * as UU5 from "uu5g04";
import ns from "./bricks-ns.js";

import './youtube-video.less';

export const YoutubeVideo = createReactClass({

  //@@viewOn:mixins
  mixins: [UU5.Common.BaseMixin, UU5.Common.PureRenderMixin, UU5.Common.ElementaryMixin, UU5.Common.NestingLevelMixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: ns.name("YoutubeVideo"),
    nestingLevelList: UU5.Environment.getNestingLevelList('bigBox', 'box'),
    classNames: {
      main: ns.css("youtube-video"),
      size: ns.css("youtube-video-")
    },
    defaults: {
      source: 'https://www.youtube.com/embed/'
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    autoplay: PropTypes.bool,
    disableControls: PropTypes.bool,
    loop: PropTypes.bool,
    disableInfo: PropTypes.bool,
    src: PropTypes.string.isRequired,
    disableRelatedVideos: PropTypes.bool,
    size: PropTypes.oneOf(['s', 'm', 'l', 'xl']),
    disableFullscreen: PropTypes.bool
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps: function () {
    return {
      autoplay: false,
      disableControls: false,
      loop: false,
      disableInfo: false,
      src: '',
      disableRelatedVideos: false,
      size: 'm',
      disableFullscreen: false
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _buildLink: function () {
    let origin = this.props.src;
    let source = this.getDefault().source;
    let params = [];

    source += origin.slice(32);

    this.props.autoplay && params.push('autoplay=1');
    this.props.disableControls && params.push('controls=0');
    this.props.loop && params.push('loop=1');
    this.props.disableInfo && params.push('showinfo=0');
    this.props.disableRelatedVideos && params.push('rel=0');
    this.props.disableFullscreen && params.push('fs=0');

    if (params.length) source = source + '?' + params.join('&amp;');

    return source;
  },

  _buildMainAttrs: function () {
    let mainProps = this.getMainAttrs();

    mainProps.className += ' ' + this.getClassName().size + this.props.size;

    mainProps.src = this._buildLink();

    return mainProps;
  },

  //@@viewOff:componentSpecificHelpers

  // Render

  //@@viewOn:render
  render: function () {
    return this.getNestingLevel() ? <iframe {...this._buildMainAttrs()} /> : null;
  }
  //@@viewOff:render
});

export default YoutubeVideo;