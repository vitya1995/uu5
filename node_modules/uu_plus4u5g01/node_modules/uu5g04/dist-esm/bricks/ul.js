import React from 'react';
import createReactClass from 'create-react-class';
import PropTypes from 'prop-types';
import * as UU5 from "uu5g04";
import ns from "./bricks-ns.js";

import './ul.less';

export const Ul = createReactClass({
  //@@viewOn:mixins
  mixins: [UU5.Common.BaseMixin, UU5.Common.ElementaryMixin, UU5.Common.SectionMixin, UU5.Common.NestingLevelMixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: ns.name('Ul'),
    nestingLevelList: UU5.Environment.getNestingLevelList('bigBoxCollection', 'box'),
    classNames: {
      main: ns.css('ul'),
      type: ns.css('ul-type-')
    },
    defaults: {
      childTagName: 'UU5.Bricks.Li'
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    allowTags: PropTypes.arrayOf(PropTypes.string),
    type: PropTypes.oneOf(['disc', 'square', 'circle'])
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps() {
    return {
      allowTags: [],
      type: 'disc'
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  shouldComponentUpdate(nextProps, nextState) {
    return this.shouldRender(nextProps, nextState);
  },
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  shouldChildRender_(child) {
    const childTagName = UU5.Common.Tools.getChildTagName(child);
    const childTagNames = this.props.allowTags.concat(this.getDefault().childTagName);
    return childTagNames.indexOf(childTagName) > -1;
  },
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _getMainAttrs() {
    const mainAttrs = this.getMainAttrs();
    mainAttrs.className += ' ' + this.getClassName('type') + this.props.type;
    return mainAttrs;
  },
  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render() {
    return this.getNestingLevel() ? <ul {...this._getMainAttrs()}>
        {this.getHeaderChild()}
        {this.getChildren()}
        {this.getFooterChild()}
        {this.getDisabledCover()}
      </ul> : null;
  }
  //@@viewOff:render
});

export default Ul;