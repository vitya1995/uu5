/*! UAF Licence for the uu5 software.

Copyright (c) 2016-present, Unicorn a.s.
All rights reserved.

Definitions
-----------
This licence agreement is based on the original "BSD Licence" published by
the Regents of the University of California in 1990.

The term "Software" means the uu5 package, its modules, components,
all program files, source code, examples, media, and documentation which are part
of the Software package, as well as any portion of them. The term "Author" means
Unicorn a.s. and all its subsidiaries and/or affiliates.

Licence Agreement
-----------------

Redistribution and use of this Software in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

1. Redistributions of source code must retain the above copyright
   notice, this list of conditions and the following disclaimer.

2. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in the
   documentation and/or other materials provided with the distribution.

3. All derivative products containing user interface must display the following
   acknowledgement in the appropriate "About window" or website section accessible
   by all users of the product:

     This product includes following software developed by
     <a href="https://unicorn.com">Unicorn a.s.</a>:
     <a href="https://uuos9.plus4u.net/uu-dockitg01-main/78462435-86b4d5a4a030400784764ebdb972bbda/book">UAF</a>,
     <a href="https://uuos9.plus4u.net/uu-dockitg01-main/78462435-ed11ec379073476db0aa295ad6c00178/book">uu5</a>.

4. All derivative products must not block the default uu5 browser console message containing
   Software version information and copyright notice of the Author.

5. The use of any portion of this Software is not allowed in the products
   that fully or partially resemble the functionality of the Software
   or otherwise compete with the Software unless they are licenced under the same licence
   conditions and provided free of charge. Specific prior written permission is required otherwise.

6. Neither the name of the Author nor the names of its contributors
   may be used to endorse or promote products derived from this software
   without specific prior written permission.

Disclaimer
----------
THIS SOFTWARE IS PROVIDED BY AUTHOR "AS IS" AND ANY
EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL AUTHOR BE LIABLE FOR ANY
DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("react"), require("prop-types"), require("module"), require("react-dom"), require("create-react-class"));
	else if(typeof define === 'function' && define.amd)
		define("UU5", ["react", "prop-types", "module", "react-dom", "create-react-class"], factory);
	else if(typeof exports === 'object')
		exports["UU5"] = factory(require("react"), require("prop-types"), require("module"), require("react-dom"), require("create-react-class"));
	else
		root["UU5"] = factory(root["React"], root["PropTypes"], root["undefined"], root["ReactDOM"], root["createReactClass"]);
})(this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_22__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 7);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/*!**************************************************************************************!*\
  !*** external {"amd":"react","commonjs":"react","commonjs2":"react","root":"React"} ***!
  \**************************************************************************************/
/*! no static exports found */
/*! exports used: default */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_0__;

/***/ }),
/* 1 */
/*!*********************************************************************************************************!*\
  !*** external {"amd":"prop-types","commonjs":"prop-types","commonjs2":"prop-types","root":"PropTypes"} ***!
  \*********************************************************************************************************/
/*! no static exports found */
/*! exports used: default */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_1__;

/***/ }),
/* 2 */
/*!**************************************************!*\
  !*** ../node_modules/css-loader/lib/css-base.js ***!
  \**************************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */
/***/ (function(module, exports) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
module.exports = function (useSourceMap) {
	var list = [];

	// return the list of modules as css string
	list.toString = function toString() {
		return this.map(function (item) {
			var content = cssWithMappingToString(item, useSourceMap);
			if (item[2]) {
				return "@media " + item[2] + "{" + content + "}";
			} else {
				return content;
			}
		}).join("");
	};

	// import a list of modules into the list
	list.i = function (modules, mediaQuery) {
		if (typeof modules === "string") modules = [[null, modules, ""]];
		var alreadyImportedModules = {};
		for (var i = 0; i < this.length; i++) {
			var id = this[i][0];
			if (typeof id === "number") alreadyImportedModules[id] = true;
		}
		for (i = 0; i < modules.length; i++) {
			var item = modules[i];
			// skip already imported module
			// this implementation is not 100% perfect for weird media query combinations
			//  when a module is imported multiple times with different media queries.
			//  I hope this will never occur (Hey this way we have smaller bundles)
			if (typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
				if (mediaQuery && !item[2]) {
					item[2] = mediaQuery;
				} else if (mediaQuery) {
					item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
				}
				list.push(item);
			}
		}
	};
	return list;
};

function cssWithMappingToString(item, useSourceMap) {
	var content = item[1] || '';
	var cssMapping = item[3];
	if (!cssMapping) {
		return content;
	}

	if (useSourceMap && typeof btoa === 'function') {
		var sourceMapping = toComment(cssMapping);
		var sourceURLs = cssMapping.sources.map(function (source) {
			return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */';
		});

		return [content].concat(sourceURLs).concat([sourceMapping]).join('\n');
	}

	return [content].join('\n');
}

// Adapted from convert-source-map (MIT)
function toComment(sourceMap) {
	// eslint-disable-next-line no-undef
	var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));
	var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;

	return '/*# ' + data + ' */';
}

/***/ }),
/* 3 */
/*!*****************************************************!*\
  !*** ../node_modules/style-loader/lib/addStyles.js ***!
  \*****************************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */
/***/ (function(module, exports, __webpack_require__) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/

var stylesInDom = {};

var	memoize = function (fn) {
	var memo;

	return function () {
		if (typeof memo === "undefined") memo = fn.apply(this, arguments);
		return memo;
	};
};

var isOldIE = memoize(function () {
	// Test for IE <= 9 as proposed by Browserhacks
	// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805
	// Tests for existence of standard globals is to allow style-loader
	// to operate correctly into non-standard environments
	// @see https://github.com/webpack-contrib/style-loader/issues/177
	return window && document && document.all && !window.atob;
});

var getElement = (function (fn) {
	var memo = {};

	return function(selector) {
		if (typeof memo[selector] === "undefined") {
			memo[selector] = fn.call(this, selector);
		}

		return memo[selector]
	};
})(function (target) {
	return document.querySelector(target)
});

var singleton = null;
var	singletonCounter = 0;
var	stylesInsertedAtTop = [];

var	fixUrls = __webpack_require__(/*! ./urls */ 12);

module.exports = function(list, options) {
	if (typeof DEBUG !== "undefined" && DEBUG) {
		if (typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
	}

	options = options || {};

	options.attrs = typeof options.attrs === "object" ? options.attrs : {};

	// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
	// tags it will allow on a page
	if (!options.singleton) options.singleton = isOldIE();

	// By default, add <style> tags to the <head> element
	if (!options.insertInto) options.insertInto = "head";

	// By default, add <style> tags to the bottom of the target
	if (!options.insertAt) options.insertAt = "bottom";

	var styles = listToStyles(list, options);

	addStylesToDom(styles, options);

	return function update (newList) {
		var mayRemove = [];

		for (var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];

			domStyle.refs--;
			mayRemove.push(domStyle);
		}

		if(newList) {
			var newStyles = listToStyles(newList, options);
			addStylesToDom(newStyles, options);
		}

		for (var i = 0; i < mayRemove.length; i++) {
			var domStyle = mayRemove[i];

			if(domStyle.refs === 0) {
				for (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();

				delete stylesInDom[domStyle.id];
			}
		}
	};
};

function addStylesToDom (styles, options) {
	for (var i = 0; i < styles.length; i++) {
		var item = styles[i];
		var domStyle = stylesInDom[item.id];

		if(domStyle) {
			domStyle.refs++;

			for(var j = 0; j < domStyle.parts.length; j++) {
				domStyle.parts[j](item.parts[j]);
			}

			for(; j < item.parts.length; j++) {
				domStyle.parts.push(addStyle(item.parts[j], options));
			}
		} else {
			var parts = [];

			for(var j = 0; j < item.parts.length; j++) {
				parts.push(addStyle(item.parts[j], options));
			}

			stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
		}
	}
}

function listToStyles (list, options) {
	var styles = [];
	var newStyles = {};

	for (var i = 0; i < list.length; i++) {
		var item = list[i];
		var id = options.base ? item[0] + options.base : item[0];
		var css = item[1];
		var media = item[2];
		var sourceMap = item[3];
		var part = {css: css, media: media, sourceMap: sourceMap};

		if(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});
		else newStyles[id].parts.push(part);
	}

	return styles;
}

function insertStyleElement (options, style) {
	var target = getElement(options.insertInto)

	if (!target) {
		throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");
	}

	var lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];

	if (options.insertAt === "top") {
		if (!lastStyleElementInsertedAtTop) {
			target.insertBefore(style, target.firstChild);
		} else if (lastStyleElementInsertedAtTop.nextSibling) {
			target.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);
		} else {
			target.appendChild(style);
		}
		stylesInsertedAtTop.push(style);
	} else if (options.insertAt === "bottom") {
		target.appendChild(style);
	} else {
		throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");
	}
}

function removeStyleElement (style) {
	if (style.parentNode === null) return false;
	style.parentNode.removeChild(style);

	var idx = stylesInsertedAtTop.indexOf(style);
	if(idx >= 0) {
		stylesInsertedAtTop.splice(idx, 1);
	}
}

function createStyleElement (options) {
	var style = document.createElement("style");

	options.attrs.type = "text/css";

	addAttrs(style, options.attrs);
	insertStyleElement(options, style);

	return style;
}

function createLinkElement (options) {
	var link = document.createElement("link");

	options.attrs.type = "text/css";
	options.attrs.rel = "stylesheet";

	addAttrs(link, options.attrs);
	insertStyleElement(options, link);

	return link;
}

function addAttrs (el, attrs) {
	Object.keys(attrs).forEach(function (key) {
		el.setAttribute(key, attrs[key]);
	});
}

function addStyle (obj, options) {
	var style, update, remove, result;

	// If a transform function was defined, run it on the css
	if (options.transform && obj.css) {
	    result = options.transform(obj.css);

	    if (result) {
	    	// If transform returns a value, use that instead of the original css.
	    	// This allows running runtime transformations on the css.
	    	obj.css = result;
	    } else {
	    	// If the transform function returns a falsy value, don't add this css.
	    	// This allows conditional loading of css
	    	return function() {
	    		// noop
	    	};
	    }
	}

	if (options.singleton) {
		var styleIndex = singletonCounter++;

		style = singleton || (singleton = createStyleElement(options));

		update = applyToSingletonTag.bind(null, style, styleIndex, false);
		remove = applyToSingletonTag.bind(null, style, styleIndex, true);

	} else if (
		obj.sourceMap &&
		typeof URL === "function" &&
		typeof URL.createObjectURL === "function" &&
		typeof URL.revokeObjectURL === "function" &&
		typeof Blob === "function" &&
		typeof btoa === "function"
	) {
		style = createLinkElement(options);
		update = updateLink.bind(null, style, options);
		remove = function () {
			removeStyleElement(style);

			if(style.href) URL.revokeObjectURL(style.href);
		};
	} else {
		style = createStyleElement(options);
		update = applyToTag.bind(null, style);
		remove = function () {
			removeStyleElement(style);
		};
	}

	update(obj);

	return function updateStyle (newObj) {
		if (newObj) {
			if (
				newObj.css === obj.css &&
				newObj.media === obj.media &&
				newObj.sourceMap === obj.sourceMap
			) {
				return;
			}

			update(obj = newObj);
		} else {
			remove();
		}
	};
}

var replaceText = (function () {
	var textStore = [];

	return function (index, replacement) {
		textStore[index] = replacement;

		return textStore.filter(Boolean).join('\n');
	};
})();

function applyToSingletonTag (style, index, remove, obj) {
	var css = remove ? "" : obj.css;

	if (style.styleSheet) {
		style.styleSheet.cssText = replaceText(index, css);
	} else {
		var cssNode = document.createTextNode(css);
		var childNodes = style.childNodes;

		if (childNodes[index]) style.removeChild(childNodes[index]);

		if (childNodes.length) {
			style.insertBefore(cssNode, childNodes[index]);
		} else {
			style.appendChild(cssNode);
		}
	}
}

function applyToTag (style, obj) {
	var css = obj.css;
	var media = obj.media;

	if(media) {
		style.setAttribute("media", media)
	}

	if(style.styleSheet) {
		style.styleSheet.cssText = css;
	} else {
		while(style.firstChild) {
			style.removeChild(style.firstChild);
		}

		style.appendChild(document.createTextNode(css));
	}
}

function updateLink (link, options, obj) {
	var css = obj.css;
	var sourceMap = obj.sourceMap;

	/*
		If convertToAbsoluteUrls isn't defined, but sourcemaps are enabled
		and there is no publicPath defined then lets turn convertToAbsoluteUrls
		on by default.  Otherwise default to the convertToAbsoluteUrls option
		directly
	*/
	var autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;

	if (options.convertToAbsoluteUrls || autoFixUrls) {
		css = fixUrls(css);
	}

	if (sourceMap) {
		// http://stackoverflow.com/a/26603875
		css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
	}

	var blob = new Blob([css], { type: "text/css" });

	var oldSrc = link.href;

	link.href = URL.createObjectURL(blob);

	if(oldSrc) URL.revokeObjectURL(oldSrc);
}


/***/ }),
/* 4 */
/*!*********************************************************************************************!*\
  !*** external {"amd":"module","commonjs":"module","commonjs2":"module","root":"undefined"} ***!
  \*********************************************************************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_4__;

/***/ }),
/* 5 */
/*!*******************************************!*\
  !*** ./assets/fonts/uu5-icons.eot?n7r5pz ***!
  \*******************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "assets/fonts/uu5-icons.eot";

/***/ }),
/* 6 */
/*!*****************************************************************************************************!*\
  !*** external {"amd":"react-dom","commonjs":"react-dom","commonjs2":"react-dom","root":"ReactDOM"} ***!
  \*****************************************************************************************************/
/*! no static exports found */
/*! exports used: default */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_6__;

/***/ }),
/* 7 */
/*!**********************************!*\
  !*** multi ../.tmp/core/core.js ***!
  \**********************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! C:\Users\User\Documents\Work\Git\uu_uu5g04\.tmp\core\core.js */8);


/***/ }),
/* 8 */
/*!****************************!*\
  !*** ../.tmp/core/core.js ***!
  \****************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */
/***/ (function(module, exports, __webpack_require__) {

var mod = __webpack_require__(/*! module */ 4);
var uri = ((mod ? mod.uri : (document.currentScript || Array.prototype.slice.call(document.getElementsByTagName("script"), -1)[0] || {}).src) || "").toString();
__webpack_require__.p = uri.split(/\//).slice(0, -1).join("/") + "/"; // runtime publicPath configuration required for proper linking of styles, background images, ...
module.exports = __webpack_require__(/*! __project__/core/core.js */ 9);

/***/ }),
/* 9 */
/*!***********************************!*\
  !*** ./core/core.js + 41 modules ***!
  \***********************************/
/*! exports provided: Common, Environment, Icons, Bricks, Forms, CodeKit, default */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is referenced from these modules with unsupported syntax: ../.tmp/core/core.js (referenced with cjs require) */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
var common_namespaceObject = {};
__webpack_require__.d(common_namespaceObject, "REGEXP", function() { return REGEXP; });
__webpack_require__.d(common_namespaceObject, "Tools", function() { return Tools; });
__webpack_require__.d(common_namespaceObject, "BaseMixin", function() { return BaseMixin; });
__webpack_require__.d(common_namespaceObject, "Div", function() { return Div; });
__webpack_require__.d(common_namespaceObject, "Error", function() { return error_Error; });
__webpack_require__.d(common_namespaceObject, "NotFoundTag", function() { return NotFoundTag; });
__webpack_require__.d(common_namespaceObject, "ElementaryMixin", function() { return ElementaryMixin; });
__webpack_require__.d(common_namespaceObject, "IdentityMixin", function() { return IdentityMixin; });
__webpack_require__.d(common_namespaceObject, "LevelMixin", function() { return LevelMixin; });
__webpack_require__.d(common_namespaceObject, "NestingLevelMixin", function() { return NestingLevelMixin; });
__webpack_require__.d(common_namespaceObject, "ContentMixin", function() { return ContentMixin; });
__webpack_require__.d(common_namespaceObject, "ColorSchemaMixin", function() { return ColorSchemaMixin; });
__webpack_require__.d(common_namespaceObject, "SectionMixin", function() { return SectionMixin; });
__webpack_require__.d(common_namespaceObject, "SessionMixin", function() { return SessionMixin; });
__webpack_require__.d(common_namespaceObject, "CcrReaderMixin", function() { return CcrReaderMixin; });
__webpack_require__.d(common_namespaceObject, "CcrWriterMixin", function() { return CcrWriterMixin; });
__webpack_require__.d(common_namespaceObject, "ScreenSizeMixin", function() { return ScreenSizeMixin; });
__webpack_require__.d(common_namespaceObject, "CallsMixin", function() { return CallsMixin; });
__webpack_require__.d(common_namespaceObject, "LoadMixin", function() { return LoadMixin; });
__webpack_require__.d(common_namespaceObject, "LsiMixin", function() { return LsiMixin; });
__webpack_require__.d(common_namespaceObject, "SwipeMixin", function() { return SwipeMixin; });
__webpack_require__.d(common_namespaceObject, "VucMixin", function() { return VucMixin; });
__webpack_require__.d(common_namespaceObject, "PureRenderMixin", function() { return PureRenderMixin; });
__webpack_require__.d(common_namespaceObject, "RouteMixin", function() { return RouteMixin; });
__webpack_require__.d(common_namespaceObject, "Router", function() { return Router; });
__webpack_require__.d(common_namespaceObject, "UU5String", function() { return uu5_string_UU5String; });
__webpack_require__.d(common_namespaceObject, "UU5Json", function() { return uu5_json_UU5Json; });
__webpack_require__.d(common_namespaceObject, "Url", function() { return Url; });
__webpack_require__.d(common_namespaceObject, "EventListener", function() { return event_listener_EventListener; });
__webpack_require__.d(common_namespaceObject, "TagPlaceholder", function() { return TagPlaceholder; });
__webpack_require__.d(common_namespaceObject, "TextCorrector", function() { return TextCorrector; });
__webpack_require__.d(common_namespaceObject, "Outline", function() { return Outline; });
var icons_namespaceObject = {};
__webpack_require__.d(icons_namespaceObject, "alertCircle", function() { return alertCircle; });
__webpack_require__.d(icons_namespaceObject, "arrowDown", function() { return arrowDown; });
__webpack_require__.d(icons_namespaceObject, "arrowLeft", function() { return arrowLeft; });
__webpack_require__.d(icons_namespaceObject, "arrowRight", function() { return arrowRight; });
__webpack_require__.d(icons_namespaceObject, "arrowUp", function() { return arrowUp; });
__webpack_require__.d(icons_namespaceObject, "calendar", function() { return calendar; });
__webpack_require__.d(icons_namespaceObject, "clock", function() { return clock; });
__webpack_require__.d(icons_namespaceObject, "cross", function() { return cross; });
__webpack_require__.d(icons_namespaceObject, "errorCircle", function() { return errorCircle; });
__webpack_require__.d(icons_namespaceObject, "finder", function() { return finder; });
__webpack_require__.d(icons_namespaceObject, "flagUpload", function() { return flagUpload; });
__webpack_require__.d(icons_namespaceObject, "menu", function() { return menu; });
__webpack_require__.d(icons_namespaceObject, "minus", function() { return minus; });
__webpack_require__.d(icons_namespaceObject, "ok", function() { return ok; });
__webpack_require__.d(icons_namespaceObject, "okCircle", function() { return okCircle; });
__webpack_require__.d(icons_namespaceObject, "person", function() { return person; });
__webpack_require__.d(icons_namespaceObject, "picture", function() { return picture; });
__webpack_require__.d(icons_namespaceObject, "plus", function() { return plus; });
__webpack_require__.d(icons_namespaceObject, "point", function() { return point; });
__webpack_require__.d(icons_namespaceObject, "thumb", function() { return thumb; });

// EXTERNAL MODULE: external {"amd":"module","commonjs":"module","commonjs2":"module","root":"undefined"}
var external___amd___module___commonjs___module___commonjs2___module___root___undefined__ = __webpack_require__(4);
var external___amd___module___commonjs___module___commonjs2___module___root___undefined___default = /*#__PURE__*/__webpack_require__.n(external___amd___module___commonjs___module___commonjs2___module___root___undefined__);

// CONCATENATED MODULE: ./core/common/text-entity-map.js
var HtmlEntityMap = {
  re: /(&#?[a-z0-9]+;)/g,
  items: {
    '&amp;': '&',
    '&#38;': '&',
    '&apos;': "'",
    '&#39;': "'",
    '&quot;': '"',
    '&#34;': '"',
    '&lt;': '<',
    '&#060;': '<',
    '&gt;': '>',
    '&#062;': '>',
    '&hellip;': '…',
    '&#133;': '…',
    '&mdash;': '—',
    '&#8212;': '—',
    '&pi;': 'π',
    '&#8719;': 'π',
    '&reg;': '®',
    '&#174;': '®',
    '&#8730;': '√',
    '&radic;': '√',
    '&#8734;': '∞',
    '&infin;': '∞',
    '&#160;': ' ',
    '&nbsp;': ' ',
    '&#8592;': '←',
    '&larr;': '←',
    '&#8594;': '→',
    '&rarr;': '→',
    '&#8595;': '?',
    '&darr;': '?',
    '&#169;': '©',
    '&copy;': '©',
    '&trade;': '™',
    '&pound;': '£',
    '&euro;': '€',
    '&prod;': '∏',
    '&sum;': '∑',
    '&int;': '∫',
    '&le;': '≤',
    '&ge;': '≥'
  }
};

var AsciiEmojiMap = {
  //:) :D :O :* :( :| :S :Z :$ :P :/   ;-)     :'-(   ,:-(   ,:-)   O:-)       8-) X-)    :-")  :'-)        :,'-(          ";-(   ]:-)   <3
  re: /(:-[)(DOo*|$SsZzP/@]|;-\)|:[',]-\(|,:-\(|,:-\)|[0oO]:-\)|[B8Xx]-\)|:-"\)|:[',]-[)D]|:(?:,'|',)-\(|";-\(|]:-\)|<\/?3)/g,
  items: {
    ":-)": "😃",
    ';-)': "😉",
    ":-(": "😦",
    ":'-(": "😢",
    ":,-(": "😢",
    ":-D": "😄",
    ":-o": "😮",
    ":-O": "😮",
    ":-*": "😘",
    ",:-(": "😓",
    ",:-)": "😅",
    "0:-)": "😇",
    "O:-)": "😇",
    "o:-)": "😇",
    "8-)": "😎",
    "B-)": "😎",
    ':-")': "😊",
    ":-$": "😒",
    ":'-)": "😂",
    ":'-D": "😂",
    ":,-)": "😂",
    ":,-D": "😂",
    ":,'-(": "😭",
    '";-(': "😭",
    ":-/": "😕",
    ":-@": "😡",
    ":-P": "😛",
    ":-S": "😒",
    ":-Z": "😒",
    ":-s": "😒",
    ":-z": "😒",
    ":-|": "😐",
    "]:-)": "😈",
    "X-)": "😆",
    "x-)": "😆",
    '</3': '💔',
    '<3': '💗'
  }
};

var ExtendedEmojiMap = {
  re: /#\(([a-z\-]+)\)/g,
  items: {
    'baby': '👶',
    'boy': '👦',
    'girl': '👧',
    'man': '👨',
    'woman': '👩',
    'old-man': '👴',
    'old-woman': '👵',
    'cow': '🐄',
    'horse': '🐎',
    'tiger': '🐅',
    'elephant': '🐘',
    'unicorn-face': '🦄',
    'pig': '🐖',
    'pig-face': '🐷',
    'pig-nose': '🐽',
    'rat': '🐀',
    'mouse': '🐁',
    'hamster-face': '🐹',
    'bat': '🦇',
    'chicken': '🐔',
    'dolphin': '🐬',
    'fish': '🐟',
    'crocodile': '🐊',
    'snake': '🐍',
    'whale': '🐋',
    'octopus': '🐙',
    'spider': '🕷',
    'panda-face': '🐼',
    'bear-face': '🐻',
    'boar': '🐗',
    'dog': '🐕',
    'dog-face': '🐶',
    'cat': '🐈',
    'cat-face': '🐱',
    'snail': '🐌',
    'butterfly': '🦋',
    'ant': '🐜',
    'fire': '🔥',
    'skull-with-crossbones': '☠',
    'bomb': '💣',
    'light-bulb': '💡',
    'hammer': '🔨',
    'wrench': '🔧',
    'key': '🔑',
    'gear': '⚙',
    'coffin': '⚰',
    'moai': '🗿',
    'beer': '🍺',
    'volcano': '🌋',
    'pile-of-poo': '💩',
    'shit': '💩',
    'broken-heart': '💔',
    'heart': '❤️',
    'love': '💘',
    'alien': '👽',
    'robot-face': '🤖',
    'skull': '💀',
    'ghost': '👻',
    'cloud': '☁',
    'thumbs-up': '👍',
    'thumbs-down': '👎',
    'index-finger': '☝️',
    'sign-of-the-horns': '🤘',
    'vulcan-salute': '🖖',
    'clapping-hands': '👏',
    'handshake': '🤝',
    'ok-hand': '👌',
    'raised-hand': '✋',
    'five-finger-hand': '🖐',
    'middle-finger': '🖕',
    'raised-fist': '✊',
    'victory-hand': '✌',
    'crossed-fingers': '🤞',
    'writing-hand': '✍️',
    'kiss': '💋',
    'anchor': '⚓',
    'airplane': '✈',
    'sailboat': '⛵',
    'car': '🚗',
    'truck': '🚚',
    'train': '🚆',
    'tractor': '🚜',
    'ship': '🚢',
    'rocket': '🚀',
    'helicopter': '🚁',
    'ball': '⚽',
    'czechia': '🇨🇿',
    'united-states': '🇺🇸',
    'germany': '🇩🇪',
    'ukraine': '🇺🇦',
    'slovakia': '🇸🇰',
    'netherlands': '🇳🇱',
    'spain': '🇪🇸',
    'united-kingdom': '🇬🇧',
    'croatia': '🇭🇷',
    'skin-light': '🏻',
    'skin-medium-light': '🏼',
    'skin-medium': '🏽',
    'skin-medium-dark': '🏾',
    'skin-dark': '🏿'
  }
};

var TextEntityMap = {
  _re: null,
  _htmlEntity: true,
  get htmlEntity() {
    return this._htmlEntity;
  },
  set htmlEntity(s) {
    if (s !== this._htmlEntity) {
      this._htmlEntity = s;
      this.recompile();
    }
  },
  _htmlEntityMap: HtmlEntityMap,
  replaceHtmlEntity: function replaceHtmlEntity(text) {
    var _this = this;

    var reg = new RegExp('(\\\\)?' + this._htmlEntityMap.re.source, 'g');
    if (this.htmlEntity) text = text.replace(reg, function (m0, m1, m2) {
      return m1 ? m2 : _this._htmlEntityMap.items[m2] || m2;
    });
    return text;
  },


  _asciiEmoji: true,
  get asciiEmoji() {
    return this._asciiEmoji;
  },
  set asciiEmoji(s) {
    if (s !== this.asciiEmoji) {
      this._asciiEmoji = s;
      this.recompile();
    }
  },
  _asciiEmojiMap: AsciiEmojiMap,
  replaceAsciiEmoji: function replaceAsciiEmoji(text) {
    var _this2 = this;

    var reg = new RegExp('(\\\\)?' + this._asciiEmojiMap.re.source, 'g');
    if (this.asciiEmoji) text = text.replace(reg, function (m0, m1, m2) {
      return m1 ? m2 : _this2._asciiEmojiMap.items[m2] || m2;
    });
    return text;
  },


  _extendedTextEntity: true,
  get extendedTextEntity() {
    return this._extendedTextEntity;
  },
  set extendedTextEntity(s) {
    if (s !== this._extendedTextEntity) {
      this._extendedTextEntity = s;
      this.recompile();
    }
  },
  _extendedTextEntityMapList: [ExtendedEmojiMap],
  _textEntityRegexGroups: {},

  replace: function replace(text) {
    var eteg = this._textEntityRegexGroups;
    var count = this._reGroupsCount;

    return text.replace(this._re, function (match, esc) {
      for (var _len = arguments.length, groups = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
        groups[_key - 2] = arguments[_key];
      }

      var r = match;
      if (esc) r = match.slice(1);else for (var i = 0; i < count; i++) {
        if (groups[i]) {
          r = eteg[i].items[groups[i]] || r;break;
        }
      }
      return r;
    });
  },
  addExtendedTextEntityMap: function addExtendedTextEntityMap(map) {
    if (!this._extendedTextEntityMapList.some(function (item) {
      return item === map;
    })) this._extendedTextEntityMapList.push(map);
  },
  removeExtendedTextEntityMap: function removeExtendedTextEntityMap(map) {
    this._extendedTextEntityMapList = this._extendedTextEntityMapList.filter(function (item) {
      return item !== map;
    });
  },


  get extendedTextEntityMapList() {
    return this._extendedTextEntityMapList;
  },

  recompile: function recompile() {
    var _this3 = this;

    if (this.htmlEntity || this.asciiEmoji || this.extendedTextEntity) {
      var reA = [];
      var i = 0;
      this._textEntityRegexGroups = {};
      if (this.htmlEntity) {
        reA.push(this._htmlEntityMap.re.source);
        this._textEntityRegexGroups[i] = this._htmlEntityMap;
        i++;
      }
      if (this.asciiEmoji) {
        reA.push(this._asciiEmojiMap.re.source);
        this._textEntityRegexGroups[i] = this._asciiEmojiMap;
        i++;
      }
      if (this.extendedTextEntity) {
        this._extendedTextEntityMapList.forEach(function (item) {
          reA.push(item.re.source);
          _this3._textEntityRegexGroups[i] = item;
          i++;
        });
      }
      this._reGroupsCount = i;
      this._re = new RegExp('(\\\\)?(?:' + reA.join('|') + ')', 'g');
    } else this._re = null;
  }
};

//precompile regex
TextEntityMap.recompile();
// CONCATENATED MODULE: ./core/environment/document-manager.js
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var DocumentManager = function () {
  function DocumentManager() {
    _classCallCheck(this, DocumentManager);
  }

  _createClass(DocumentManager, null, [{
    key: "addCss",
    value: function addCss(cssUrl) {
      var link = document.createElement('link');
      link.type = "text/css";
      link.rel = "stylesheet";
      link.href = cssUrl;
      document.head.appendChild(link);
    }
  }, {
    key: "isCssAdded",
    value: function isCssAdded(path) {
      var ss = document.styleSheets;
      for (var i = 0; i < ss.length; i++) {
        if (ss[i].href === path) {
          return true;
        }
      }
      return false;
    }
  }, {
    key: "addUniqueCss",
    value: function addUniqueCss(cssUrl) {
      if (!this.isCssAdded(cssUrl)) {
        this.addCss(cssUrl);
        return true;
      }
      return false;
    }
  }]);

  return DocumentManager;
}();

/* harmony default export */ var document_manager = (DocumentManager);
// CONCATENATED MODULE: ./core/environment/icon-manager.js
var icon_manager__createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function icon_manager__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }



var icon_manager_IconManager = function () {
  function IconManager(env) {
    icon_manager__classCallCheck(this, IconManager);

    this.env = env;
  }

  icon_manager__createClass(IconManager, [{
    key: "addIcons",
    value: function addIcons(iconsName) {
      var iconsUrl = this.iconLibraries[iconsName];
      this.loadedIcons = this.loadedIcons || {};

      if (iconsUrl && !this.loadedIcons[iconsName]) {
        this.loadedIcons[iconsName] = true;
        document_manager.addUniqueCss(iconsUrl);
      }
    }
  }, {
    key: "iconLibraries",
    get: function get() {
      return this.env.iconLibraries;
    }
  }]);

  return IconManager;
}();

/* harmony default export */ var icon_manager = (icon_manager_IconManager);
// CONCATENATED MODULE: ./core/environment/environment.js
var environment__this = this;






var uri = ((external___amd___module___commonjs___module___commonjs2___module___root___undefined___default.a ? external___amd___module___commonjs___module___commonjs2___module___root___undefined___default.a.uri : (document.currentScript || Array.prototype.slice.call(document.getElementsByTagName("script"), -1)[0] || {}).src) || "").toString();
var uu5BaseUrl = uri ? uri.replace(/^(.*\/).*/, "$1") : './';

var Environment = {
  name: "uu5g04",
  mode: "development",
  version: "1.5.0",
  licence: 'uu5g04-' + "1.5.0" + ' ©Unicorn 2017',
  basePath: uu5BaseUrl,
  nestingLevelList: ['spa', 'page', 'container', 'bigBoxCollection', 'bigBox', 'boxCollection', 'box', 'smallBoxCollection', 'smallBox', 'inline'],
  nestingLevelStrict: false,
  colorSchemaMap: {
    default: {
      color: 'default'
    },
    primary: {
      color: 'blue-rich',
      src: uu5BaseUrl + 'assets/color-schema/blue-rich.min.css'
    },
    success: {
      color: 'green',
      src: uu5BaseUrl + 'assets/color-schema/green.min.css'
    },
    info: {
      color: 'blue',
      src: uu5BaseUrl + 'assets/color-schema/blue.min.css'
    },
    warning: {
      color: 'orange',
      src: uu5BaseUrl + 'assets/color-schema/orange.min.css'
    },
    danger: {
      color: 'red',
      src: uu5BaseUrl + 'assets/color-schema/red.min.css'
    },

    yellow: {
      color: 'yellow',
      src: uu5BaseUrl + 'assets/color-schema/yellow.min.css'
    },
    'yellow-rich': {
      color: 'yellow-rich',
      src: uu5BaseUrl + 'assets/color-schema/yellow-rich.min.css'
    },
    orange: {
      color: 'orange',
      src: uu5BaseUrl + 'assets/color-schema/orange.min.css'
    },
    'orange-rich': {
      color: 'orange-rich',
      src: uu5BaseUrl + 'assets/color-schema/orange-rich.min.css'
    },
    pink: {
      color: 'pink',
      src: uu5BaseUrl + 'assets/color-schema/pink.min.css'
    },
    'pink-rich': {
      color: 'pink-rich',
      src: uu5BaseUrl + 'assets/color-schema/pink-rich.min.css'
    },
    red: {
      color: 'red',
      src: uu5BaseUrl + 'assets/color-schema/red.min.css'
    },
    'red-rich': {
      color: 'red-rich',
      src: uu5BaseUrl + 'assets/color-schema/red-rich.min.css'
    },
    purple: {
      color: 'purple',
      src: uu5BaseUrl + 'assets/color-schema/purple.min.css'
    },
    'purple-rich': {
      color: 'purple-rich',
      src: uu5BaseUrl + 'assets/color-schema/purple-rich.min.css'
    },
    cyan: {
      color: 'cyan',
      src: uu5BaseUrl + 'assets/color-schema/cyan.min.css'
    },
    'cyan-rich': {
      color: 'cyan-rich',
      src: uu5BaseUrl + 'assets/color-schema/cyan-rich.min.css'
    },
    blue: {
      color: 'blue',
      src: uu5BaseUrl + 'assets/color-schema/blue.min.css'
    },
    'blue-rich': {
      color: 'blue-rich',
      src: uu5BaseUrl + 'assets/color-schema/blue-rich.min.css'
    },
    green: {
      color: 'green',
      src: uu5BaseUrl + 'assets/color-schema/green.min.css'
    },
    'green-rich': {
      color: 'green-rich',
      src: uu5BaseUrl + 'assets/color-schema/green-rich.min.css'
    },
    brown: {
      color: 'brown',
      src: uu5BaseUrl + 'assets/color-schema/brown.min.css'
    },
    'brown-rich': {
      color: 'brown-rich',
      src: uu5BaseUrl + 'assets/color-schema/brown-rich.min.css'
    },
    grey: {
      color: 'grey',
      src: uu5BaseUrl + 'assets/color-schema/grey.min.css'
    },
    'grey-rich': {
      color: 'grey-rich',
      src: uu5BaseUrl + 'assets/color-schema/grey-rich.min.css'
    },
    custom: {
      color: 'custom'
    }
  },
  // External component calls
  calls: {},
  // External component limits
  limits: {},
  // Central component register (ccr)
  ccr: {
    byKey: {}
  },
  ccrStrict: false,
  CCRKEY_PAGE: 'UU5.Bricks.Page',
  CCRKEY_ROUTER: 'UU5.Common.Router',
  COMPONENT_REGISTRY_URL: 'https://uuos9.plus4u.net/uu-uu5componentregistryg01-main/85849867896916817-fe96c133c895434bbd4d5b24831483f3/getLibrary', //PROD
  // COMPONENT_REGISTRY_URL: 'https://uuos9.plus4u.net/uu-uu5componentregistryg01-main/84723967990075193-eb48e82fb0ab409b9dd2fe4f956226dc/getLibrary', //DEV
  CDN_URL: 'https://cdn.plus4u.net',
  uu5DataMap: {},
  languages: [{ language: 'cs', q: 1.0 }, { language: 'sk', q: 0.7 }, { language: 'en', q: 0.4 }],
  languageList: {
    cs: {
      flag: uu5BaseUrl + 'assets/flags/cs.png',
      language: 'Česky'
    },
    nl: {
      flag: uu5BaseUrl + 'assets/flags/nl.png',
      language: 'Nederlands'
    },
    en: {
      flag: uu5BaseUrl + 'assets/flags/en-gb.png',
      language: 'English'
    },
    'en-gb': {
      flag: uu5BaseUrl + 'assets/flags/en-gb.png',
      language: 'English GB'
    },
    'en-us': {
      flag: uu5BaseUrl + 'assets/flags/en-us.png',
      language: 'English US'
    },
    fr: {
      flag: uu5BaseUrl + 'assets/flags/fr.png',
      language: 'Français'
    },
    de: {
      flag: uu5BaseUrl + 'assets/flags/de.png',
      language: 'Deutsch'
    },
    pl: {
      flag: uu5BaseUrl + 'assets/flags/pl.png',
      language: 'Polski'
    },
    ru: {
      flag: uu5BaseUrl + 'assets/flags/ru.png',
      language: 'Pусский'
    },
    sk: {
      flag: uu5BaseUrl + 'assets/flags/sk.png',
      language: 'Slovensky'
    },
    es: {
      flag: uu5BaseUrl + 'assets/flags/es.png',
      language: 'Español'
    },
    uk: {
      flag: uu5BaseUrl + 'assets/flags/uk.png',
      language: 'Yкраїнський'
    }
  },
  defaultLanguage: 'en-gb',
  // URI for log errors
  //logErrorUrl: null, //TODO: deprecated
  // function for log errors
  logErrorFunction: null,
  hardSpace: {
    regExp: '\&nbsp;',
    nbSpace: "\xA0",
    nbHyphen: "\u2011",
    lsiReplacer: {}
  },

  textCorrector: false,

  textEntityMap: TextEntityMap,
  textEntityReplace: true,

  // {'cs-CZ': {decimalSeparator: ',', thousandSeparator: '.'}}
  numberFormat: {},

  // {'cs-CZ': 'dd.MM.yyyy HH:mm:ss.SSS'}
  dateTimeFormat: {},
  dateTimeZone: -new Date().getTimezoneOffset() / 60,
  //uu5String tags regExp
  uu5StringTagsRegExp: null,

  session: null,
  urlBuilder: null,

  library: {},
  useComponentRegistry: true,
  runtimeLibraries: {}
};

Environment.DocumentManager = document_manager;

/********** ICONS start **********/
Environment.iconLibraries = {
  mdi: "https://cdn.plus4u.net/libs/materialdesignicons/2.0.46/css/materialdesignicons.min.css",
  glyphicon: "https://cdn.plus4u.net/libs/bootstrap/3.3.7/css/bootstrap.min.css",
  fa: "https://cdn.plus4u.net/libs/font-awsome/4.7.0/css/font-awesome.min.css"
};

Environment.IconManager = new icon_manager(Environment);

Environment.addIconLibrary = function (iconsKey, src) {
  Environment.iconLibraries[iconsKey] = src;
};

Environment.removeIconLibrary = function (iconsKey) {
  delete Environment.iconLibraries[iconsKey];
};

Environment.clearIconLibraries = function () {
  for (var iconsKey in Environment.iconLibraries) {
    delete Environment.iconLibraries[iconsKey];
  }
};
/********** ICONS end **********/

Environment.addLibrary = function (libraryName, params) {
  //TODO check if exist and merge
  Environment.library[libraryName] = params;
  return environment__this;
};

Environment.getLibrary = function (libraryName) {
  var library = Environment.library;
  if (libraryName) {
    library = library[libraryName];
  }
  return library;
};

Environment.addRuntimeLibrary = function (library) {
  library.name && (Environment.runtimeLibraries[library.name] = library);
  return environment__this;
};

Environment.getRuntimeLibraries = function () {
  return Environment.runtimeLibraries;
};

Environment.colorSchema = Object.keys(Environment.colorSchemaMap);

Environment.isDevelopment = function () {
  return Environment.mode === 'development';
};

Environment.isProduction = function () {
  return Environment.mode === 'production';
};

// Version
console.log(Environment.licence);

Environment.changeColorSchema = function (key, colorSchema, src) {
  Environment.colorSchemaMap[key] = Environment.colorSchemaMap[key] || {};
  Environment.colorSchemaMap[key].color = colorSchema;
  src && (Environment.colorSchemaMap[key].src = src);
  Environment.colorSchema = Object.keys(Environment.colorSchemaMap);
  return this;
};

Environment.getColorSchema = function (key) {
  var colorSchema = Environment.colorSchemaMap[key];
  var color = null;

  if (colorSchema) {
    color = colorSchema.color;

    Environment.loadedColors = Environment.loadedColors || {};
    if (colorSchema.src && !Environment.loadedColors[color]) {
      Environment.loadedColors[color] = true;
      Environment.DocumentManager.addUniqueCss(colorSchema.src);
    }
  }

  return color;
};

Environment.search = function (searchedTexts) {
  var el = Environment.EventListener || window.UU5.Environment.EventListener;
  el.triggerHighlight(searchedTexts);
  return environment__this;
};

Environment.setDateTimeFormat = function (format) {
  var el = Environment.EventListener || window.UU5.Environment.EventListener;
  el.triggerDateTime({ format: format });
  return environment__this;
};

Environment.setDateTimeCountry = function (country) {
  var el = Environment.EventListener || window.UU5.Environment.EventListener;
  el.triggerDateTime({ country: country });
  return environment__this;
};

Environment.setDateTimeZone = function (timeZone) {
  var el = Environment.EventListener || window.UU5.Environment.EventListener;
  el.triggerDateTime({ timeZone: timeZone });
  return environment__this;
};

Environment.setDateTimeOptions = function (opt) {
  var el = Environment.EventListener || window.UU5.Environment.EventListener;
  el.triggerDateTime(opt);
  return environment__this;
};

Environment.setNumberCountry = function (country) {
  var el = Environment.EventListener || window.UU5.Environment.EventListener;
  el.triggerNumber({ country: country });
  return environment__this;
};

Environment.setNumberOptions = function (opt) {
  var el = Environment.EventListener || window.UU5.Environment.EventListener;
  el.triggerNumber(opt);
  return environment__this;
};

Environment.getRouter = function () {
  return Environment.router;
};

Environment.setRoute = function (route, setStateCallback) {
  return Environment.getRouter().setRoute(route, setStateCallback);
};

Environment.hardSpace.lsiReplacer['cs-cz'] = function (text) {

  var newText = text.replace(new RegExp(Environment.hardSpace.regExp, 'g'), Environment.hardSpace.nbSpace);

  var nbSpace = Environment.hardSpace.nbSpace;

  var wordsWithSpace = {
    after: ["s", "k", "v", "z", "a", "i", "o", "u"],
    degreesBefore: ["bc.", "bca.", "ing.", "ing.arch.", "mudr.", "mvdr.", "mga.", "mgr.", "judr.", "phdr.", "rndr.", "pharmdr.", "thlic.", "thdr.", "prof.", "doc.", "paeddr.", "dr.", "phmr."],
    degreesAfter: ["ph.d.", "th.d.", "csc.", "drsc.", "dis."],
    units: ["%", "Kč", "€", "m", "g", "l", "q", "t", "w", "J", "ks", "mm", "cm", "km", "mg", "dkg", "kg", "ml", "cl", "dl", "hl", "m3", "km3", "mm2", "cm2", "dm2", "m2", "km2", "ha", "Pa", "hPa", "kPa", "MPa", "bar", "mbar", "nbar", "atm", "psi", "kW", "MW", "HP", "m/s", "km/h", "m/min", "MPH", "cal", "Wh", "kWh", "kp·m", "°C", "°F", "kB", "dB", "MB", "GB", "kHz", "MHz"]
  };

  var spaceSplitter = newText.split(' ');
  var resultText = '';
  for (var i = 0; i < spaceSplitter.length; i++) {
    var prevPart = spaceSplitter[i];
    var prevPartLowerCase = prevPart.toLowerCase();
    var lastChar = prevPart[prevPart.length - 1];
    var nextPart = spaceSplitter[i + 1];
    var firstChar = nextPart && nextPart[0];

    resultText += prevPart === '' ? ' ' : prevPart;

    if (nextPart) {
      if (
      // it is word with space after
      wordsWithSpace.after.indexOf(prevPartLowerCase) > -1 ||

      // dot and next char is not upper - not end of sentence
      '.' === lastChar && firstChar && firstChar !== firstChar.toUpperCase() && !isFinite(firstChar) && wordsWithSpace.degreesAfter.indexOf(prevPart.toLowerCase()) === -1 && spaceSplitter[i - 3] !== "dr." && spaceSplitter[i - 2] !== "h." && prevPart !== "c."

      // numbers split by space
      || isFinite(prevPart) && isFinite(nextPart)

      // degrees before name
      || wordsWithSpace.degreesBefore.indexOf(prevPartLowerCase) > -1

      // degrees after name
      || wordsWithSpace.degreesAfter.indexOf(nextPart.toLowerCase()) > -1

      // between number and unit
      || prevPart.match(/^\d+$/g) && wordsWithSpace.units.indexOf(nextPart) > -1) {
        resultText += nbSpace;

        // degree dr. h. c.
      } else if (nextPart === "dr." && spaceSplitter[i + 2] === "h." && spaceSplitter[i + 3] === "c." || prevPart === "dr." && nextPart === "h." && spaceSplitter[i + 2] === "c." || spaceSplitter[i - 1] === "dr." && prevPart === "h." && nextPart === "c.") {
        resultText += nbSpace;
      } else {
        resultText += " ";
      }
    }
  }

  // space after dot or comma
  //return resultText.replace(/([,.])([a-zA-Z0-9])/, "$1 $2");
  return resultText;
};

Environment.hardSpace.lsiReplacer['code'] = function (text) {
  var resultText = text;

  resultText = resultText.replace(/ /g, Environment.hardSpace.nbSpace);
  resultText = resultText.replace(/-/g, Environment.hardSpace.nbHyphen);

  return resultText;
};

Environment.setSession = function (session) {
  Environment.session = session.currentSession || session;
};

Environment.getSession = function () {

  var session = void 0;

  if (Environment.session) {
    session = Environment.session;
  } else {
    var Oidc = window.UuOidc;
    if (typeof window.System != "undefined") {
      if (window.System.has(window.System.normalizeSync("uu_oidc"))) {
        Oidc = window.System.get(window.System.normalizeSync("uu_oidc"));
      } else if (window.System.has(window.System.normalizeSync("uu_oidcg01"))) {
        Oidc = window.System.get(window.System.normalizeSync("uu_oidcg01"));
      }
    }

    if (Oidc) {
      session = Environment.session = Oidc.Session.currentSession || Oidc.Session;
    }
  }

  return session || null;
};

Environment.App = {
  vucConfig: {
    errorRoute: null
  },
  callConfig: {
    authorizeVuc: function authorizeVuc() {
      console.error("Please add to UU5.Environment.App.callConfig.authorizeVuc your own function as:\n        (dtoIn) => {\n          $.ajax({\n          url: dtoIn.data.name ? '/' + dtoIn.data.name : window.location.href,\n          type: 'get',\n          cache: false,\n          contentType: 'application/json',\n          data: { data: dtoIn.data }\n          }).done(doneDtoOut => {\n            if (typeof dtoIn.done === 'function') {\n              dtoIn.done(typeof doneDtoOut == 'string' && doneDtoOut.length ? JSON.parse(doneDtoOut) : doneDtoOut);\n            }\n          }).fail(failDtoOut => {\n            UU5.Common.Tools.error('authorizeVuc error', {dtoIn: dtoIn});\n            if (typeof dtoIn.fail === 'function') {\n              dtoIn.fail(typeof failDtoOut == 'string' && failDtoOut.length ? JSON.parse(failDtoOut) : failDtoOut);\n            }\n          });\n        }\n      ");
    }
  }
};

Environment.Lsi = {};
Environment.Lsi.Forms = {};
Environment.Lsi.Common = {};

Environment.getNestingLevelList = function (levelFrom, levelTo) {
  var begin = Environment.nestingLevelList.indexOf(levelFrom);
  begin < 0 && (begin = 0);
  var end = Environment.nestingLevelList.indexOf(levelTo) + 1;
  end <= begin && (end = Environment.nestingLevelList.length);
  return Environment.nestingLevelList.slice(begin, end);
};

Environment.getUrlBuilder = function () {
  return Environment.urlBuilder;
};

Environment.setUrlBuilder = function (urlBuilder) {
  Environment.urlBuilder = urlBuilder;
};

Environment.tagCalls = {};

/* harmony default export */ var environment = (Environment);
// EXTERNAL MODULE: ./core/common/normalize.css
var normalize = __webpack_require__(10);
var normalize_default = /*#__PURE__*/__webpack_require__.n(normalize);

// EXTERNAL MODULE: ./core/common/common.less
var common = __webpack_require__(13);
var common_default = /*#__PURE__*/__webpack_require__.n(common);

// EXTERNAL MODULE: ./core/common/icons.less
var icons = __webpack_require__(15);
var icons_default = /*#__PURE__*/__webpack_require__.n(icons);

// EXTERNAL MODULE: ./core/common/font-size.less
var font_size = __webpack_require__(20);
var font_size_default = /*#__PURE__*/__webpack_require__.n(font_size);

// EXTERNAL MODULE: external {"amd":"react","commonjs":"react","commonjs2":"react","root":"React"}
var external___amd___react___commonjs___react___commonjs2___react___root___React__ = __webpack_require__(0);
var external___amd___react___commonjs___react___commonjs2___react___root___React___default = /*#__PURE__*/__webpack_require__.n(external___amd___react___commonjs___react___commonjs2___react___root___React__);

// EXTERNAL MODULE: external {"amd":"react-dom","commonjs":"react-dom","commonjs2":"react-dom","root":"ReactDOM"}
var external___amd___react_dom___commonjs___react_dom___commonjs2___react_dom___root___ReactDOM__ = __webpack_require__(6);
var external___amd___react_dom___commonjs___react_dom___commonjs2___react_dom___root___ReactDOM___default = /*#__PURE__*/__webpack_require__.n(external___amd___react_dom___commonjs___react_dom___commonjs2___react_dom___root___ReactDOM__);

// CONCATENATED MODULE: ./core/common/tools.js
var tools__this = this;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

/* eslint-disable react/display-name, react/no-find-dom-node */





var REGEXP = {
  attrs: /([-\w]+)(?:\s*=\s*(?:(?:"\s*(<uu5json\s*\/>(?:\\.|[^"])*?)")|(?:'\s*(<uu5json\s*\/>(?:\\.|[^'])*?)')|(?:"\s*(<uu5string\s*\/>(?:\\.|[^"])*?)")|(?:'\s*(<uu5string\s*\/>(?:\\.|[^'])*?)')|(?:"\s*(<uu5data\s*\/>(?:\\.|[^"])*?)")|(?:'\s*(<uu5data\s*\/>(?:\\.|[^'])*?)')|(?:"((?:\\.|[^"])*?)")|(?:'((?:\\.|[^'])*?)')|([^\s]+)))?/g,
  uu5string: /^\s*<uu5string\s*\/>/,
  uu5json: /^\s*<uu5json\s*\/>/,
  uu5data: /^\s*<uu5data\s*\/>/,
  slashes: /^.*[\\\/]/,
  char: /(\-[a-z])/g,
  mobile1: /(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i,
  mobile2: /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i,
  xy: /[xy]/g,
  whiteSpaces: /\s\s+/g,
  digitInBracket: /{(\d+)}/g,
  stringParams: /%((%)|s|d)/g,
  jsCode: /^(javascript:\s*)*/i
};

var Tools = {};

Tools.events = {
  lsi: 'UU5_Common_LsiMixin_lsiEvent',
  highlight: 'UU5_Bricks_TextCorrector_highlightEvent',
  dateTime: 'UU5_Bricks_DateTime_event',
  number: 'UU5_Bricks_Number_event'
};

Tools.screenSize = {
  xs: 480,
  s: 768,
  m: 992,
  l: 1360,
  xl: Infinity
};

Tools.getPage = function () {
  return environment.page;
};

Tools.checkTag = function (tag, hideError) {
  var result = null;
  switch (typeof tag === 'undefined' ? 'undefined' : _typeof(tag)) {
    case "string":
      result = tag;

      var tagArray = tag.split('.');
      var isSimpleString = tagArray.length === 1;

      if (!isSimpleString) {
        var calculatedTag = window;
        while (calculatedTag && ["object", "function"].indexOf(typeof calculatedTag === 'undefined' ? 'undefined' : _typeof(calculatedTag)) > -1 && tagArray.length > 0) {
          calculatedTag = calculatedTag[tagArray.shift()];
        }
        result = calculatedTag || null;

        if (typeof result !== 'function') {
          if (!hideError) {
            Tools.error('Unknown tag ' + tag + ' - element was not found.', {
              notFoundObject: result,
              notFoundObjectType: typeof result === 'undefined' ? 'undefined' : _typeof(result)
            });
          }
          result = null;
        }
      }

      break;
    case "function":
      result = tag;
      break;
  }

  return result;
};

Tools.findComponent = function (tag, props, content) {
  var newTag = tag;
  if ((typeof tag === 'undefined' ? 'undefined' : _typeof(tag)) === 'object' && tag.tag) {
    newTag = tag.tag;
    props = tag.props;
  }
  props = props || {};

  var result = void 0;
  var UU5 = window.UU5;
  if (environment.useComponentRegistry) {
    var fTag = Tools.checkTag(newTag, true);
    if (fTag) {
      result = external___amd___react___commonjs___react___commonjs2___react___root___React___default.a.createElement(fTag, props, content);
    } else {
      var module = newTag.split('.');
      module.splice(-1, 1);

      if (module.length === 2 && window[module[0]] && window[module[0]][module[1]] && Object.keys(window[module[0]][module[1]]).length) {
        result = external___amd___react___commonjs___react___commonjs2___react___root___React___default.a.createElement(UU5.Common.NotFoundTag, { tagName: tag, id: props.id, ref_: props.ref_ });
      } else {
        result = external___amd___react___commonjs___react___commonjs2___react___root___React___default.a.createElement(UU5.Common.TagPlaceholder, { tagName: newTag, props: props, content: content });
      }

      // let fModule = Tools.checkTag(module.join('.'), true);
      // result = fModule ? <UU5.Common.NotFoundTag tagName={tag} id={props.id} ref_={props.ref_} /> :
      //   <UU5.Common.TagPlaceholder tagName={newTag} props={props} content={content} />;
    }
  } else {
    var component = Tools.checkTag(newTag, false);
    result = component ? external___amd___react___commonjs___react___commonjs2___react___root___React___default.a.createElement(component, props, content) : external___amd___react___commonjs___react___commonjs2___react___root___React___default.a.createElement(UU5.Common.NotFoundTag, { tagName: tag, id: props.id, ref_: props.ref_ });
  }

  return result;
};

Tools.buildAttributes = function (attrsString) {

  //group1 = name (Attribute name)
  //group2 = value (uu5JSON "...")
  //group3 = value (uu5JSON '...')
  //group4 = value (uu5String "...")
  //group5 = value (uu5String '...')
  //group6 = value (uu5Data "...")
  //group7 = value (uu5Data '...')
  //group8 = value (string "...")
  //group9 = value (string '...')
  //group10 = value (no string ... null, true, false, number)

  var attrs = {};
  // !!!!! Never put attrsReg to constants, otherwise it gets stuck - because of exec method on regexp
  var attrsReg = /([-\w]+)(?:\s*=\s*(?:(?:"\s*(<uu5json\s*\/>(?:\\.|[^"])*?)")|(?:'\s*(<uu5json\s*\/>(?:\\.|[^'])*?)')|(?:"\s*(<uu5string\s*\/>(?:\\.|[^"])*?)")|(?:'\s*(<uu5string\s*\/>(?:\\.|[^'])*?)')|(?:"\s*(<uu5data\s*\/>(?:\\.|[^"])*?)")|(?:'\s*(<uu5data\s*\/>(?:\\.|[^'])*?)')|(?:"((?:\\.|[^"])*?)")|(?:'((?:\\.|[^'])*?)')|([^\s]+)))?/g;
  var matchAttrs = attrsReg.exec(attrsString);

  while (matchAttrs) {
    var name = matchAttrs[1];
    var value = true;
    var matchValue = matchAttrs[2] || matchAttrs[3] || matchAttrs[4] || matchAttrs[5] || matchAttrs[6] || matchAttrs[7] || matchAttrs[8] || matchAttrs[9] || matchAttrs[10];

    if (matchValue) {
      if (matchAttrs[10]) {
        //no string value
        if (matchValue == "true") {
          //true
          value = true;
        } else if (matchValue == "false") {
          //false
          value = false;
        } else if (isFinite(matchValue)) {
          //number
          value = +matchValue;
        } else {
          //any other -> null
          value = null;
        }
      } else if (matchAttrs[2] || matchAttrs[3]) {
        //uu5JSON
        value = this.parseFromUu5JSON(matchValue);
      } else if (matchAttrs[4] || matchAttrs[5]) {
        //uu5String
        value = this.getChildrenFromUu5String(matchValue);
      } else if (matchAttrs[6] || matchAttrs[7]) {
        //uu5Data
        value = this.parseFromUu5Data(matchValue);
      } else {
        if (name === "href") {
          matchValue = matchValue.replace(REGEXP.jsCode, "");
        }

        value = matchValue;
      }
    } else if (typeof matchAttrs[8] === 'string' || typeof matchAttrs[9] === 'string') {
      value = matchAttrs[8] || matchAttrs[9];
    }

    attrs[name] = value;

    matchAttrs = attrsReg.exec(attrsString);
  }

  return attrs;
};

Tools.isUU5String = function (uu5String) {
  return typeof uu5String === 'string' && !!uu5String.match(REGEXP.uu5String);
};

Tools.getChildrenFromUu5String = function (uu5String, opt) {
  // opt (Object) - tagsRegExp, checkSpaces, checkGrammar, language - defaults from UU5.Common.TextCorrector
  opt = opt || {};

  // replace \r\n because of spaces at the start of text in some paragraph
  uu5String = uu5String.trim().replace(/\r\n/g, " ");

  var body = opt && opt.body;

  var tagsRegExp = opt.tagsRegExp || environment.uu5StringTagsRegExp || null;

  var childStack = [{
    tag: '_root',
    content: [],
    index: 0
  }];

  var pointer = childStack[0];

  var cIndex = -1;
  var pIndex = 0;
  var pre = false;

  // !!!!! Never put uu5stringRe to constants, otherwise it gets stuck - because of exec method on regexp
  var uu5stringRe = /(<\/?)([-\w.]+)((?:\s+\w+(?:\s*=\s*(?:(?:"(?:\\.|[^"])*")|(?:'(?:\\.|[^'])*')|[^>\s]+))?)*)\s*(\/?>)((?:[^<])*)/g;
  var matchS = uu5stringRe.exec(uu5String);
  if (matchS && matchS[2] === 'uu5string' && matchS[4] === '/>') {
    if (matchS[5]) pointer.content.push(Tools.replaceTextEntity(matchS[5]));
    pIndex = matchS[0].length; //skip <uu5string />
    matchS = uu5stringRe.exec(uu5String);
  } else {
    //not an uu5string, leave output intact
    pointer.content.push(uu5String);
    matchS = false;
  }

  while (matchS) {
    cIndex = matchS.index;
    if (cIndex > pIndex) {
      var head = uu5String.substring(pIndex, cIndex);
      pointer.content.push(pre ? TextEntityMap.replaceHtmlEntity(head) : Tools.replaceTextEntity(head));
    }
    var childTag = matchS[2];
    var tagObj = void 0;

    if (pre && !(childTag === 'uu5string.pre' && matchS[1] === '</')) {
      pointer.content.push(TextEntityMap.replaceHtmlEntity(matchS[0]));
    } else {

      if (matchS[1] === '</') {
        //closing tag

        tagObj = childStack.pop();

        if (tagObj.tag !== childTag) {
          //ERROR
          Tools.error("Invalid uu5string", { uu5String: uu5String, tag: tagObj.tag, position: tagObj.index });
          return external___amd___react___commonjs___react___commonjs2___react___root___React___default.a.createElement(UU5.Common.Error, // eslint-disable-line no-undef
          null, 'Invalid uu5string: ' + uu5String + '. Tag ' + tagObj.tag + ' at position ' + tagObj.index + ' is not closed.');
        }

        pointer = childStack[childStack.length - 1];

        if (pre) {
          pre = false;
          pointer.content[pointer.content.length - 1] = TextEntityMap.replaceHtmlEntity(tagObj.content.join(''));
        } else {
          if (tagObj.forbidden) {
            tagObj.content = ['Error: Tag <' + tagObj.tag + '/> is not allowed.'];
            tagObj.tag = "UU5.Common.Error";
          }
          var props = void 0;
          if (body) {
            props = tagObj.attrs || {};
            props.content = props.content || tagObj.content;
          }
          pointer.content[pointer.content.length - 1] = body ? {
            tag: tagObj.tag,
            props: props
          } : this.findComponent(tagObj.tag, tagObj.attrs, external___amd___react___commonjs___react___commonjs2___react___root___React___default.a.Children.toArray(tagObj.content));
        }
      } else {
        pre = childTag === 'uu5string.pre';
        tagObj = { tag: childTag, content: [], index: matchS.index };

        if (tagsRegExp && !tagsRegExp.test(childTag)) tagObj.forbidden = true;else if (matchS[3]) {
          tagObj.attrs = this.buildAttributes(matchS[3]);
        }

        if (matchS[4] === '/>') {
          //self-closing tag
          pre = false;

          if (childTag.indexOf('uu5string.') === 0) {
            //meta-tag uu5string.*
            var s = this.execMetaTag(childTag, tagObj.attrs);
            if (s) s.forEach(function (item) {
              return pointer.content.push(item);
            });
          } else body ? pointer.content.push({
            tag: tagObj.tag,
            props: tagObj.attrs
          }) : pointer.content.push(this.findComponent(tagObj.tag, tagObj.attrs, null));
        } else {
          //common tag
          pointer.content.push(tagObj);
          childStack.push(tagObj);
          pointer = tagObj;
        }
      }

      //text after tag
      if (matchS[5]) pointer.content.push(pre ? TextEntityMap.replaceHtmlEntity(matchS[5]) : Tools.replaceTextEntity(matchS[5]));
    }
    pIndex = cIndex + matchS[0].length;
    matchS = uu5stringRe.exec(uu5String);
  }

  if (childStack.length > 1) {
    var _tagObj = childStack.pop();

    Tools.error("Invalid uu5string", { uu5String: uu5String, tag: _tagObj.tag, position: _tagObj.index });
    return external___amd___react___commonjs___react___commonjs2___react___root___React___default.a.createElement(UU5.Common.Error, // eslint-disable-line no-undef
    null, 'Invalid uu5string: ' + uu5String + '. Tag ' + _tagObj.tag + ' at position ' + _tagObj.index + ' is not closed.');
  }

  return body ? pointer.content : external___amd___react___commonjs___react___commonjs2___react___root___React___default.a.Children.toArray(pointer.content);
};

Tools.execMetaTag = function (tag, args) {
  //TODO implement each metaTag as separate function, call functions dynamically (witch safety keyword guard)
  var metaTag = tag.slice(10);
  var r = [];
  switch (metaTag) {
    case 'now':
      r.push(Tools.toLocaleString(new Date(Date.now())));
      break;
    case 'codeHex32':
      r.push(Tools.generateUUID());
      break;
    case 'codeHex64':
      r.push(Tools.generateUUID() + Tools.generateUUID());
      break;
    default:
      r.push(null);
  }
  return r;
};

Tools.parseFromUu5JSON = function (uu5Json) {
  uu5Json = uu5Json.replace(REGEXP.uu5json, '');
  var value = null;
  try {
    value = JSON.parse(uu5Json);
  } catch (err) {
    Tools.error('Error uu5JSON parse.', {
      uu5String: uu5Json,
      cause: err
    });
  }
  return value;
};

Tools.parseFromUu5Data = function (uu5data) {
  uu5data = uu5data.replace(REGEXP.uu5data, '');
  var data = UU5.Environment.uu5DataMap && UU5.Environment.uu5DataMap[uu5data]; // eslint-disable-line no-undef
  typeof data === "undefined" && Tools.warning('There is no component data in UU5.Environment.uu5DataMap for uu5Data: ' + uu5data + ' !', {
    string: uu5data
  });
  return data;
};

Tools.replaceTextEntity = function (text) {
  return environment.textEntityReplace ? environment.textEntityMap.replace(text) : text; // eslint-disable-line no-undef
};

Tools.pad = function (n, width, z) {
  //return width times leading z for n ... pad(99,5,'-') -> '---99'
  z = z || '0';
  n = n + '';
  return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;
};

Tools.getServerRequest = function (src, parameters, contentType, done, fail) {
  var request = new XMLHttpRequest();
  request.open('GET', src, true);

  contentType && request.setRequestHeader("Content-type", contentType);
  parameters && request.setRequestHeader("Content-length", parameters.length);

  request.onload = function () {
    if (request.status >= 200 && request.status < 300) {
      typeof done === 'function' && done(request.response);
    } else if (typeof fail === 'function') {
      fail(request);
    }
  };

  request.onerror = function () {
    if (typeof fail === 'function') {
      fail(request);
    }
  };

  request.send(parameters);
};

Tools._merge = function (args, deep) {
  //   var result;
  //   if(args.length){
  //     result = window.Immutable.fromJS(args[0]);
  //
  //     for(var i = 1; i < args.length; i++){
  //       result = deep ? result.mergeDeep(args[i]) : result.merge(args[i]);
  //     }
  //
  //     result = result.toJS();
  //   }
  //   return result;

  var result;
  if (args.length) {
    var data = deep ? [true, {}] : [{}];

    for (var i = 0; i < args.length; i++) {
      data.push(args[i]);
    }

    result = Tools.extend.apply(null, data);
  }
  return result;
};

Tools.mergeDeep = function () {
  return Tools._merge(arguments, true);
};

Tools.merge = function () {
  return Tools._merge(arguments);
};

Tools.mergeEnvironmentUu5DataMap = function (uu5DataMap) {
  environment.uu5DataMap = UU5.Common.Tools.merge(environment.uu5DataMap || {}, uu5DataMap); // eslint-disable-line no-undef
};

Tools.getUrlParam = function (name) {
  var results = new RegExp('[\?&]' + name + '=([^&#]*)').exec(window.location.href);
  return results ? results[1] : null;
};

// used for error context which is sent to server
Tools.getBasicObject = function (object) {
  var result = {};

  if (object['$$typeof']) {
    result = typeof object.type === 'function' ? object.type.tagName : object.type;
  } else if (object['updater']) {
    result = object['getTagName'] ? object.getTagName() : '[React.element]';
  } else {
    for (var key in object) {
      if (key !== '__proto__') {
        var value = object[key];

        if (value && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object') {
          value = this.getBasicObject(value);
        } else if (typeof value === 'function') {
          value = '[function]';
        }

        result[key] = value;
      }
    }
  }
  return result;
};

Tools.getNavigator = function () {
  var navigator = window.navigator;
  return {
    vendor: navigator.vendor,
    maxTouchPoints: navigator.maxTouchPoints,
    hardwareConcurrency: navigator.hardwareConcurrency,
    appCodeName: navigator.appCodeName,
    appName: navigator.appName,
    appVersion: navigator.appVersion,
    platform: navigator.platform,
    product: navigator.product,
    userAgent: navigator.userAgent,
    language: navigator.language,
    languages: navigator.languages,
    onLine: navigator.onLine,
    cookieEnabled: navigator.cookieEnabled,
    doNotTrack: navigator.doNotTrack
  };
};

// Tools.logError = function (data) {
//   $.ajax(
//     {
//       url: Environment.logErrorUrl,
//       type: 'post',
//       cache: false,
//       contentType: 'application/json',
//       data: JSON.stringify(
//         {
//           uri: Environment.logErrorUrl,
//           data: data
//         }
//       )
//     }
//   ).fail(
//     function (failDtoIn) {
//       Tools.error('Cannot send error to server', {failDtoIn: failDtoIn});
//     }
//   );
// };

Tools.getFileName = function (path) {
  return path.replace(REGEXP.slashes, '');
};

Tools.getCamelCase = function (string) {
  var camelCase = '';
  if (string) {
    camelCase = string.charAt(0).toUpperCase() + string.slice(1);
    camelCase = camelCase.replace(REGEXP.char, function ($1) {
      return $1.toUpperCase().replace('-', '');
    });
  }
  return camelCase;
};

// Element
Tools.getDocumentHeight = function () {
  var body = document.body;
  var html = document.documentElement;

  return Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight);
};

Tools.getDocumentWidth = function () {
  var body = document.body;
  var html = document.documentElement;

  return Math.max(body.scrollWidth, body.offsetWidth, html.clientWidth, html.scrollWidth, html.offsetWidth);
};

Tools.getWidth = function (element) {
  var paddingLeft = parseInt(window.getComputedStyle(external___amd___react_dom___commonjs___react_dom___commonjs2___react_dom___root___ReactDOM___default.a.findDOMNode(element), null).getPropertyValue('padding-left').replace('px', ''));
  var paddingRight = parseInt(window.getComputedStyle(external___amd___react_dom___commonjs___react_dom___commonjs2___react_dom___root___ReactDOM___default.a.findDOMNode(element), null).getPropertyValue('padding-right').replace('px', ''));
  return external___amd___react_dom___commonjs___react_dom___commonjs2___react_dom___root___ReactDOM___default.a.findDOMNode(element).clientWidth - paddingLeft - paddingRight;
};

Tools.getInnerWidth = function (element) {
  return external___amd___react_dom___commonjs___react_dom___commonjs2___react_dom___root___ReactDOM___default.a.findDOMNode(element).clientWidth;
};

Tools.getOuterWidth = function (element, withMargin) {
  var result = external___amd___react_dom___commonjs___react_dom___commonjs2___react_dom___root___ReactDOM___default.a.findDOMNode(element).offsetWidth;
  if (withMargin) {
    var marginLeft = parseInt(window.getComputedStyle(external___amd___react_dom___commonjs___react_dom___commonjs2___react_dom___root___ReactDOM___default.a.findDOMNode(element), null).getPropertyValue('margin-left').replace('px', ''));
    var marginRight = parseInt(window.getComputedStyle(external___amd___react_dom___commonjs___react_dom___commonjs2___react_dom___root___ReactDOM___default.a.findDOMNode(element), null).getPropertyValue('margin-right').replace('px', ''));
    result += marginLeft + marginRight;
  }
  return result;
};

Tools.getHeight = function (element) {
  var paddingTop = parseInt(window.getComputedStyle(external___amd___react_dom___commonjs___react_dom___commonjs2___react_dom___root___ReactDOM___default.a.findDOMNode(element), null).getPropertyValue('padding-top').replace('px', ''));
  var paddingBottom = parseInt(window.getComputedStyle(external___amd___react_dom___commonjs___react_dom___commonjs2___react_dom___root___ReactDOM___default.a.findDOMNode(element), null).getPropertyValue('padding-bottom').replace('px', ''));
  return external___amd___react_dom___commonjs___react_dom___commonjs2___react_dom___root___ReactDOM___default.a.findDOMNode(element).clientHeight - paddingTop - paddingBottom;
};

Tools.getInnerHeight = function (element) {
  return external___amd___react_dom___commonjs___react_dom___commonjs2___react_dom___root___ReactDOM___default.a.findDOMNode(element).clientHeight;
};

Tools.getOuterHeight = function (element, withMargin) {
  var result = external___amd___react_dom___commonjs___react_dom___commonjs2___react_dom___root___ReactDOM___default.a.findDOMNode(element).offsetHeight;
  if (withMargin) {
    var marginTop = parseInt(window.getComputedStyle(external___amd___react_dom___commonjs___react_dom___commonjs2___react_dom___root___ReactDOM___default.a.findDOMNode(element), null).getPropertyValue('margin-top').replace('px', ''));
    var marginBottom = parseInt(window.getComputedStyle(external___amd___react_dom___commonjs___react_dom___commonjs2___react_dom___root___ReactDOM___default.a.findDOMNode(element), null).getPropertyValue('margin-bottom').replace('px', ''));
    result += marginTop + marginBottom;
  }
  return result;
};

Tools.getOffsetTop = function (element) {
  var offsetTop = 0;
  do {
    if (!isNaN(element.offsetTop)) {
      offsetTop += element.offsetTop;
    }
  } while (element = element.offsetParent);
  return offsetTop;
};

Tools.getOffsetLeft = function (element) {
  var offsetLeft = 0;
  do {
    if (!isNaN(element.offsetLeft)) {
      offsetLeft += element.offsetLeft;
    }
  } while (element = element.offsetParent);
  return offsetLeft;
};

Tools.getChildTag = function (child) {
  // react child type
  return child.type;
};

Tools.getChildDisplayName = function (child) {
  var tag = Tools.getChildTag(child);
  return typeof tag === 'function' ? tag.displayName : tag;
};

Tools.getChildTagName = function (child) {
  // UU5 tagNames or standard DOM tags ('div', 'span',...)
  var tag = Tools.getChildTag(child);
  return typeof tag === 'function' ? tag.tagName : tag;
};

// Environment
Tools.isMobileOrTablet = function () {
  var check = false;
  (function (a) {
    if (REGEXP.mobile1.test(a) || REGEXP.mobile2.test(a.substr(0, 4))) check = true;
  })(navigator.userAgent || navigator.vendor || window.opera);
  return check;
}();

// Cookies
Tools.setCookie = function (cookieName, cookieValue, expireDays) {
  var d = new Date();
  d.setTime(d.getTime() + expireDays * 24 * 60 * 60 * 1000);
  var expires = 'expires=' + d.toUTCString();
  document.cookie = cookieName + '=' + cookieValue + '; ' + expires;
};

Tools.getCookie = function (cookieName) {
  var name = cookieName + '=';
  var ca = document.cookie.split(';');
  for (var i = 0; i < ca.length; i++) {
    var c = ca[i];
    while (c.charAt(0) == ' ') {
      c = c.substring(1);
    }
    if (c.indexOf(name) == 0) {
      return c.substring(name.length, c.length);
    }
  }
  return '';
};

// languagesString = 'cs-CZ,en;q=0.6,sk;q=0.8' => [{language: 'cs', location: 'cs-cz', q: 1.0}, {language: 'sk', q:
// 0.8}, {language: 'en', q: 0.6}] languagesString = 'cs' => [{language: 'cs', q: 1.0}] languagesString =
// 'en;q=0.6,sk;q=0.8' => [{language: 'sk', q: 0.8}, {language: 'en', q: 0.6}]
Tools.sortLanguages = function (languagesString) {
  // languagesString = 'cs-CZ,en;q=0.6,sk;q=0.8' => languagesSplitter = ['cs-CZ', 'en;q=0.6', 'sk;q=0.8']
  var languagesSplitter = languagesString.toLowerCase().split(',');

  var languages = {};
  languagesSplitter.forEach(function (lang) {
    var language = {};

    var langOpt = lang.split(';');
    var langStr = langOpt[0];
    var q = 1; // quality factor
    if (langOpt.length > 1) {
      langStr = langOpt[0];
      q = parseFloat(langOpt[1].split('=')[1]);
    }

    var langStrSplitter = langStr.split('-');
    language.language = langStrSplitter[0];
    langStrSplitter[1] && (language.location = langStr);

    if (languages[lang]) {
      languages[lang].q < q && (languages[lang].q = q);
    } else {
      language.q = q;
      languages[lang] = language;
    }
  });

  // languagesArray = [{language: 'cs', location: 'cs-CZ', q: 1.0}, {language: 'en', q: 0.6}, {language: 'sk', q:
  // 0.8}]
  var languagesArray = Object.keys(languages).map(function (lang) {
    return languages[lang];
  }).sort(function (langA, langB) {
    if (langA.q < langB.q) {
      return -1;
    }
    if (langA.q > langB.q) {
      return 1;
    }
    return 0;
  });

  // [{language: 'cs', location: 'cs-CZ', q: 1.0}, {language: 'sk', q: 0.8}, {language: 'en', q: 0.6}]
  return languagesArray.sort(function (lang1, lang2) {
    var result = 0;
    if (lang1.q < lang2.q) {
      result = 1;
    } else if (lang1.q > lang2.q) {
      result = -1;
    }
    return result;
  });
};

Tools.generateUUID = function () {
  var d = new Date().getTime();
  if (window.performance && typeof window.performance.now === 'function') {
    d += performance.now(); //use high-precision timer if available
  }
  return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(REGEXP.xy, function (c) {
    var r = (d + Math.random() * 16) % 16 | 0;
    d = Math.floor(d / 16);
    return (c == 'x' ? r : r & 0x3 | 0x8).toString(16);
  });
};

Tools.joinClassNames = function (className1, className2) {
  return [className1, className2].join(' ').replace(REGEXP.whiteSpaces, ' ').trim();
};

Tools.buildClasses = function (classes, keys) {
  var className = '';
  classes && keys.forEach(function (v) {
    classes[v] && (className += ' ' + classes[v]);
  });
  return className.trim();
};

Tools.isInClasses = function (classes, regExp) {
  var classesArray = classes ? classes.split(' ') : [];
  var result = false;
  while (!result && classesArray.length) {
    classesArray[0].match(regExp) && (result = true);
    classesArray.shift();
  }
  return result;
};

Tools.buildCounterCallback = function (callback, count) {
  /*
   Method wrap (function) callback by newCallBack.
   If newCallBack is used, increase closureCounter
   but call callback just if closureCounter === count.
   You can use this 'tricky' method, when you want to call callback
   just once but you have to send it to several methods.
   See examples!!!
   */
  var newCallback = null;
  if (typeof callback === 'function') {
    var closureCounter = 0;
    newCallback = function newCallback() {
      closureCounter++;
      closureCounter === count && callback.apply(null, arguments);
    };
  }
  return newCallback;
};

Tools._replaceParamsInString = function (string, stringParams) {
  var i = 0;
  return string.replace(REGEXP.stringParams, function (match) {
    // match is the matched format, e.g. %s, %d
    var val = null;
    if (match[2]) {
      val = match[2];
    } else if (stringParams) {
      val = stringParams[i];
      // A switch statement so that the formatter can be extended. Default is %s
      switch (match) {
        case '%d':
          var parsedVal = parseFloat(val);
          if (isNaN(parsedVal)) {
            // cannot use showWarning because of this method is used in showWarning !!!
            Tools.warning('Value ' + val + ' is not number!', {
              string: string,
              stringParams: stringParams
            });
            val = '%d';
          }
          break;
      }
      i++;
    }
    return val;
  });
};

Tools._setParamsToString = function (string, stringParams) {
  return string.replace(REGEXP.digitInBracket, function (match, number) {
    return stringParams && typeof stringParams[number] != 'undefined' ? stringParams[number] : match;
  });
};

Tools.formatString = function (string, stringParams) {
  var result;
  stringParams = stringParams && !Array.isArray(stringParams) ? [stringParams] : stringParams;

  if (string.indexOf('%s') > -1 || string.indexOf('%d') > -1) {
    result = Tools._replaceParamsInString(string, stringParams);
  } else {
    result = Tools._setParamsToString(string, stringParams);
  }
  return result;
};

Tools.scrollToTarget = function (id, smoothScroll, offset) {

  //stop scroll on this events: scroll mousedown wheel DOMMouseScroll mousewheel keyup touchmove
  var html = document.documentElement;
  window.UU5.Environment.EventListener.addEvent(html, 'scroll', id, cancel);
  window.UU5.Environment.EventListener.addEvent(html, 'mousedown', id, cancel);
  window.UU5.Environment.EventListener.addEvent(html, 'wheel', id, cancel);
  window.UU5.Environment.EventListener.addEvent(html, 'DOMMouseScroll', id, cancel);
  window.UU5.Environment.EventListener.addEvent(html, 'mousewheel', id, cancel);
  window.UU5.Environment.EventListener.addEvent(html, 'keyup', id, cancel);
  window.UU5.Environment.EventListener.addEvent(html, 'touchmove', id, cancel);

  var element = id ? document.getElementById(id.replace('#', '')) : document.body;
  var y = (Tools.getOffsetTop(element) || 0) + (offset || 0);

  var _update = void 0;
  var _from = scroll();
  var _duration = smoothScroll || 1000;
  var _curr = _from; //Tools merge
  var _done = false;
  var _start = Date.now();

  // x, y coordinates
  var _to = { top: y, left: 0 };

  var _ease = function _ease(n) {
    n *= 2;
    if (n < 1) return 0.5 * n * n;
    return -0.5 * (--n * (n - 2) - 1);
  };

  update(function (o) {
    window.scrollTo(o.left | 0, o.top | 0);
  });

  function cancel() {
    _done = true;
    window.UU5.Environment.EventListener.removeEvent(html, 'scroll', id);
    window.UU5.Environment.EventListener.removeEvent(html, 'mousedown', id);
    window.UU5.Environment.EventListener.removeEvent(html, 'wheel', id);
    window.UU5.Environment.EventListener.removeEvent(html, 'DOMMouseScroll', id);
    window.UU5.Environment.EventListener.removeEvent(html, 'mousewheel', id);
    window.UU5.Environment.EventListener.removeEvent(html, 'keyup', id);
    window.UU5.Environment.EventListener.removeEvent(html, 'touchmove', id);
    return this;
  }

  function step() {
    if (!_done) {

      // duration
      var duration = _duration;
      var now = Date.now();
      var delta = now - _start;
      var done = delta >= duration;

      // complete
      if (done) {
        _from = _to;
        _update(_to);
        _done = true;
        return this;
      }

      var from = _from;
      var to = _to;
      var curr = _curr;
      var fn = _ease;
      var p = (now - _start) / duration;
      var n = fn(p);

      for (var k in from) {
        curr[k] = from[k] + (to[k] - from[k]) * n;
      }

      _update(curr);
    }
    return this;
  }

  function update(fn) {
    if (0 == arguments.length) return step();
    _update = fn;
    return this;
  }

  function scroll() {
    var y = window.pageYOffset || document.documentElement.scrollTop;
    var x = window.pageXOffset || document.documentElement.scrollLeft;
    return { top: y, left: x };
  }

  function animate() {
    var raf = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || fallback;
    raf(animate);
    update();
  }

  function fallback(fn) {
    var prev = new Date().getTime();
    var curr = new Date().getTime();
    var ms = Math.max(0, 16 - (curr - prev));
    var req = setTimeout(fn, ms);
    prev = curr;
    return req;
  }

  animate();

  return tools__this;
};

Tools.error = function (msg, context) {
  // if (Environment.isProduction()) {
  //   console.error('For debugging use development mode.');
  // } else {
  console.error(msg, context);
  // }

  if (environment.logErrorFunction) {
    var data = {
      message: msg,
      context: Tools.getBasicObject(context),
      navigator: Tools.getNavigator(),
      stackTrace: new Error().stack
    };

    if (typeof environment.logErrorFunction === 'function') {
      environment.logErrorFunction(data);
    } else {
      //Tools.logError(data);
      console.error('Please add to "UU5.Environment.logErrorFunction" your own function as:\n      function (data) {\n        $.ajax(\n          {\n            url: \'...\',\n            type: \'post\',\n            cache: false,\n            contentType: \'application/json\',\n            data: JSON.stringify(\n              {\n                data: data\n              }\n            )\n          }\n        ).fail(\n          function (failDtoIn) {\n            UU5.Common.Tools.error(\'Cannot send error to server\', {failDtoIn: failDtoIn});\n          }\n        );\n      }', context);
    }
  }
};

Tools.warning = function (msg) {
  var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  // if (!Environment.isProduction()) {
  console.warn(msg, context);
  // }
};

Tools.repeat = function (value, count) {
  var rpt = '';
  var str = value + '';

  for (;;) {
    if ((count & 1) == 1) {
      rpt += str;
    }
    count >>>= 1;
    if (count == 0) {
      break;
    }
    str += str;
  }

  return rpt;
};

Tools.rjust = function (string, length, padding) {
  string = '' + string;
  padding = padding || ' ';
  var newString = string;

  if (string.length < length) {
    newString = Tools.repeat(padding, length).substr(0, length - string.length) + newString;
  }

  return newString;
};

Tools.ljust = function (string, length, padding) {
  string = '' + string;
  padding = padding || ' ';
  var newString = string;

  if (string.length < length) {
    newString += Tools.repeat(padding, length).substr(0, length - string.length);
  }
  return newString;
};

// TODO: nezaokrouhluje jen desetinná místa -> není to decimalAdjust, ale numberAdjust
Tools.decimalAdjust = function (type, value, exp) {
  // If the exp is undefined or zero...
  if (typeof exp === 'undefined' || +exp === 0) {
    return Math[type](value);
  }
  value = +value;
  exp = +exp;
  // If the value is not a number or the exp is not an integer...
  if (isNaN(value) || !(typeof exp === 'number' && exp % 1 === 0)) {
    return NaN;
  }
  // Shift
  value = value.toString().split('e');
  value = Math[type](+(value[0] + 'e' + (value[1] ? +value[1] - exp : -exp)));
  // Shift back
  value = value.toString().split('e');
  return +(value[0] + 'e' + (value[1] ? +value[1] + exp : exp));
};

// Decimal round
Tools.round10 = function (value, exp) {
  return Tools.decimalAdjust('round', value, exp);
};
// Decimal floor
Tools.floor10 = function (value, exp) {
  return Tools.decimalAdjust('floor', value, exp);
};
// Decimal ceil
Tools.ceil10 = function (value, exp) {
  return Tools.decimalAdjust('ceil', value, exp);
};

Tools.encodeValue = function (value) {
  var result = value + '';

  if (value && (Array.isArray(value) || (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object')) {
    result = JSON.stringify(value);
  }

  return encodeURIComponent(result);
};

Tools.encodeQuery = function (params) {
  var query = '?';

  for (var name in params) {
    query += name + '=' + Tools.encodeValue(params[name]) + '&';
  }

  return query.substr(0, query.length - 1);
};

Tools.isJson = function (str) {
  try {
    return JSON.parse(str);
  } catch (e) {
    return false;
  }
};

Tools.decodeValue = function (value) {
  value = decodeURIComponent(value);
  var result = value;

  if (!isNaN(value)) {
    result = +value;
  } else if (value === 'true') {
    result = true;
  } else if (value === 'false') {
    result = false;
  } else {
    var json = Tools.isJson(value);

    if (json) {
      result = json;
    }
  }

  return result;
};

Tools.decodeQuery = function (query) {
  var params = {};

  query.substr(1, query.length - 1).split('&').forEach(function (value) {
    var valueSplitter = value.split('=');
    params[valueSplitter[0]] = Tools.decodeValue(valueSplitter[1]);
  });

  return params;
};

Tools.copyToClipboard = function (content) {
  var tempElement = document.createElement('textarea');
  tempElement.innerText = content;
  document.body.appendChild(tempElement);
  tempElement.select();
  document.execCommand('copy');
  tempElement.remove();
};

Tools.getWeekNumber = function (date) {
  var d = new Date(+date);
  d.setHours(0, 0, 0);
  d.setDate(d.getDate() + 4 - (d.getDay() || 7));
  return Math.ceil(((d - new Date(d.getFullYear(), 0, 1)) / 8.64e7 + 1) / 7);
};

Tools.formatDate = function (date, format, timeZone) {
  if (timeZone) {
    var utc = new Date(date.getTime() + date.getTimezoneOffset() * 60000);
    date = new Date(utc.getTime() + timeZone * 60 * 60000);
  }

  var config = {
    'd+': date.getDate(), //day
    'm+': date.getMonth() + 1, //month
    'y': (date.getFullYear() + '').substr(2, 2), // year end
    'Y': date.getFullYear(), // year full
    'h+': date.getHours() > 12 ? date.getHours() - 12 : date.getHours() === 0 ? 12 : date.getHours(), //hour 1 - 12
    'H+': date.getHours(), //hour
    'M+': date.getMinutes(), //minute
    'S+': date.getSeconds(), //second
    's+': date.getMilliseconds(), //millisecond
    't': date.getHours() > 12 || date.getHours() < 1 ? 'p.m.' : 'a.m.',
    'T': date.getHours() > 12 || date.getHours() < 1 ? 'PM' : 'AM',
    'w+': Tools.getWeekNumber(date),
    'q': Math.floor((date.getMonth() + 3) / 3), //quarter
    'Z': typeof timeZone === "number" ? timeZone * 60 : -date.getTimezoneOffset()
  };

  for (var k in config) {
    if (new RegExp('(' + k + ')').test(format)) {
      var _formatValue = function _formatValue(chars, value) {
        var result = value;

        if (chars === 'Z') {
          if (value > 0) {
            result = '+';
          } else {
            result = '-';
            value *= -1;
          }
          result += Tools.rjust(Math.floor(value / 60), 2, '0') + ':' + Tools.rjust(Math.floor(value % 60), 2, '0');
        } else if (chars.length === 2) {
          if (chars === 'ss') {
            result = Tools.rjust(value, 3, '0');
          } else {
            result = Tools.rjust(value, 2, '0');
          }
        }
        return result;
      };

      format = format.replace(RegExp.$1, _formatValue(RegExp.$1, config[k]));
    }
  }
  return format;
};

Tools.extend = function () {
  var src = void 0,
      copyIsArray = void 0,
      copy = void 0,
      name = void 0,
      options = void 0,
      clone = void 0,
      target = arguments[0] || {},
      i = 1,
      length = arguments.length,
      deep = false;

  // Handle a deep copy situation
  if (typeof target === "boolean") {
    deep = target;

    // skip the boolean and the target
    target = arguments[i] || {};
    i++;
  }

  // Handle case when target is a string or something (possible in deep copy)
  if ((typeof target === 'undefined' ? 'undefined' : _typeof(target)) !== "object" && typeof target !== "function") {
    target = {};
  }

  // extend jQuery itself if only one argument is passed
  if (i === length) {
    target = this;
    i--;
  }

  for (; i < length; i++) {
    // Only deal with non-null/undefined values
    if ((options = arguments[i]) != null) {
      // Extend the base object
      for (name in options) {
        src = target[name];
        copy = options[name];

        // Prevent never-ending loop
        if (target === copy) {
          continue;
        }

        // Recurse if we're merging plain objects or arrays
        if (deep && copy && (Tools.isPlainObject(copy) || (copyIsArray = Array.isArray(copy)))) {
          if (copyIsArray) {
            copyIsArray = false;
            clone = src && Array.isArray(src) ? src : [];
          } else {
            clone = src && Tools.isPlainObject(src) ? src : {};
          }

          // Never move original objects, clone them
          target[name] = Tools.extend(deep, clone, copy);

          // Don't bring in undefined values
        } else if (copy !== undefined) {
          target[name] = copy;
        }
      }
    }
  }

  // Return the modified object
  return target;
};

Tools.isPlainObject = function (obj) {
  var result = false;
  if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) == 'object' && obj !== null) {
    if (typeof Object.getPrototypeOf == 'function') {
      var proto = Object.getPrototypeOf(obj);
      result = proto === Object.prototype || proto === null;
    } else {
      result = Object.prototype.toString.call(obj) === '[object Object]';
    }
  }
  return result;
};

Tools.isSame = function (x, y) {
  if (x === y) {
    return x !== 0 || y !== 0 || 1 / x === 1 / y;
  } else {
    return x !== x && y !== y;
  }
};

// TODO: deprecated
Tools.shallowEqual = function (objA, objB) {
  Tools.warning("Method UU5.Common.Tools.shallowEqual is deprecated. Use UU5.Common.Tools.deepEqual instead.");
  return Tools.deepEqual(objA, objB);
};

Tools.deepEqual = function (objA, objB) {
  if (Tools.isSame(objA, objB)) {
    return true;
  }

  if ((typeof objA === 'undefined' ? 'undefined' : _typeof(objA)) !== 'object' || objA === null || (typeof objB === 'undefined' ? 'undefined' : _typeof(objB)) !== 'object' || objB === null) {
    return false;
  }

  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);

  if (keysA.length !== keysB.length) {
    return false;
  }

  for (var i = 0; i < keysA.length; i++) {
    if (!Object.prototype.hasOwnProperty.call(objB, keysA[i])) {
      return false;
    }

    if (objA[keysA[i]] && objB[keysA[i]] && _typeof(objA[keysA[i]]) === 'object' && _typeof(objB[keysA[i]]) === 'object') {
      // must be condition because in React 16 _owner is FiberNode which is recursive
      if ((!objA.$$typeof || keysA[i] !== "_owner") && !Tools.deepEqual(objA[keysA[i]], objB[keysA[i]])) {
        return false;
      }
    } else if (keysA[i] !== 'ref_' && !Tools.isSame(objA[keysA[i]], objB[keysA[i]])) {
      return false;
    }
  }

  return true;
};

Tools.prettyJson = function (object, space) {
  return JSON.stringify(typeof object === 'string' ? JSON.parse(object) : object, null, space || 2);
};

Tools.childToBodyItem = function (child) {
  return { tag: Tools.getChildTagName(child), props: Tools.mergeDeep({}, child.props) };
};

Tools.getElementByComputedStyle = function (element, styleProperty, value) {
  var result = void 0;
  var parent = element.parentElement;
  if (parent) {
    var style = window.getComputedStyle(parent);
    if (Array.isArray(value) ? value.indexOf(style.getPropertyValue(styleProperty)) > -1 : style.getPropertyValue(styleProperty) === value) {
      result = parent;
    } else {
      result = Tools.getElementByComputedStyle(parent, styleProperty, value);
    }
  }

  return result;
};

Tools.hasProfile = function (sourceProfileList, requestedProfile) {
  return sourceProfileList ? sourceProfileList.indexOf(requestedProfile) > -1 : false;
};

Tools.hasProfileOnly = function (sourceProfileList, requestedProfile) {
  return sourceProfileList ? sourceProfileList.indexOf(requestedProfile) > -1 && sourceProfileList.length === 1 : false;
};

Tools.hasSomeProfiles = function (sourceProfileList, requestedProfileList) {
  return requestedProfileList ? requestedProfileList.some(function (v) {
    return Tools.hasProfile(sourceProfileList, v);
  }) : false;
};

Tools.hasEveryProfiles = function (sourceProfileList, requestedProfileList) {
  return requestedProfileList ? requestedProfileList.every(function (v) {
    return Tools.hasProfile(sourceProfileList, v);
  }) : false;
};

Tools.getScreenSize = function () {
  var result = void 0;
  var screenWidth = window.innerWidth;

  if (screenWidth <= Tools.screenSize.xs) {
    result = 'xs';
  } else if (screenWidth <= Tools.screenSize.s) {
    result = 's';
  } else if (screenWidth <= Tools.screenSize.m) {
    result = 'm';
  } else if (screenWidth <= Tools.screenSize.l) {
    result = 'l';
  } else {
    result = 'xl';
  }

  return result;
};

Tools.getLanguages = function (language) {
  return language ? Tools.sortLanguages(language) : environment.languages;
};

Tools.getLanguage = function () {
  return environment.languages[0] ? environment.languages[0].location || environment.languages[0].language : navigator.language;
};

Tools.setLanguage = function (language) {
  Tools.setLanguages(language);
  window.UU5.Environment.EventListener.triggerLsi(language);

  var lang = environment.languages[0];
  lang && environment.setDateTimeCountry(lang.language);
  return tools__this;
};

Tools.setLanguages = function (languages) {
  if (typeof languages === 'string') {
    environment.languages = Tools.sortLanguages(languages);
  } else if ((typeof languages === 'undefined' ? 'undefined' : _typeof(languages)) === 'object') {
    languages.forEach(function (language) {
      if (!(typeof language.language === 'string') && !(0 < language.q < 1)) {
        Tools.error('The provided language array is not allowed.');
        return tools__this;
      }
    });
    environment.languages = languages;
  }
  return tools__this;
};

Tools.getLsiKey = function (lsi, languages, language, defaultLanguage) {
  var lsiKey = null;
  languages = languages || Tools.getLanguages(language);

  if (lsi) {
    var keys = Object.keys(lsi);
    var resLang = keys[0];

    var _loop = function _loop(i) {
      var lang = languages[i];

      if (lsi[lang.location]) {
        resLang = lang.location;
        return 'break';
      } else if (lsi[lang.language]) {
        resLang = lang.language;
        return 'break';
      } else {
        var lsiKeys = keys.filter(function (key) {
          return key.match("^" + lang.language);
        });

        if (lsiKeys.length) {
          resLang = lsiKeys[0];
          return 'break';
        } else {
          defaultLanguage = defaultLanguage || environment.defaultLanguage;
          if (defaultLanguage) {
            if (lsi[defaultLanguage]) {
              resLang = defaultLanguage;
              return 'break';
            } else if (lsi[defaultLanguage.split('-')[0]]) {
              resLang = defaultLanguage.split('-')[0];
              return 'break';
            }
          }
        }
      }
    };

    for (var i = 0; i < languages.length; i++) {
      var _ret = _loop(i);

      if (_ret === 'break') break;
    }

    lsiKey = lsi[resLang] ? resLang : lsi[keys[0]] ? keys[0] : null;
  }

  return lsiKey;
};

Tools.getLsiItemByLanguage = function (lsi, params, languages) {
  var lsiKey = Tools.getLsiKey(lsi, languages);
  var result = lsiKey ? lsi[lsiKey] : null;

  if (result && params) {
    result = Tools.formatString(result, params);
  }

  return result;
};

Tools.toLocaleDateString = function (date, country, opt) {
  // because of IE
  return date.toLocaleDateString(country, opt).replace(/\u200E/g, '');
};

Tools.toLocaleTimeString = function (date, country, opt) {
  // because of IE
  return date.toLocaleTimeString(country, opt).replace(/\u200E/g, '');
};

Tools.toLocaleString = function (date, country, opt) {
  // because of IE
  return date.toLocaleString(country, opt).replace(/\u200E/g, '');
};

// TODO: deprecated
Tools.getLSIItemByLanguage = function (lsi, params, languages) {
  Tools.warning("Method UU5.Common.Tools.getLSIItemByLanguage is deprecated. Use UU5.Common.Tools.getLsiItemByLanguage instead.");
  return Tools.getLsiItemByLanguage(lsi, params, languages);
};

// userLanguage for IE
var tools_lang = window.navigator.userLanguage || window.navigator.language;
tools_lang && Tools.setLanguages(tools_lang);

/* harmony default export */ var tools = (Tools);
// EXTERNAL MODULE: external {"amd":"prop-types","commonjs":"prop-types","commonjs2":"prop-types","root":"PropTypes"}
var external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes__ = __webpack_require__(1);
var external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default = /*#__PURE__*/__webpack_require__.n(external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes__);

// CONCATENATED MODULE: ./core/common/base-mixin.js
var base_mixin__typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };







var BaseMixin = {

  //@@viewOn:statics
  statics: {
    "UU5.Common.BaseMixin": {
      warnings: {
        colWidthNotUsed: 'Property colWidth was not used. Component was not covered itself by column.',
        overflowNotUsed: 'Property overflow was not used. Component was not covered itself by flc.'
      },
      errors: {
        idMissing: 'Id %s was not set.',
        parentMissing: 'Parent was not found in props.',
        childrenAreNotIndexedByParent: 'Children are not indexed by parent %s.',
        tagIsWrong: 'Wrong tag %s - element was not found.',
        notRequiredMixin: 'Registered mixin %s needs to require mixin %s in component %s!',
        invalidParentTagName: 'Parent %s is not %s.',
        invalidParentType: 'Parent %s has not function %s.'
      },
      defaults: {
        regexpChars: /([ '"{}])/g
      }
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    id: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.string,
    name: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.string,
    tooltip: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.any, // content - for now just string is valid
    className: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.string,
    style: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.oneOfType([external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.object, external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.string]),
    mainAttrs: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.object,
    parent: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.object,
    ref_: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.func,
    noIndex: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.bool
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      id: null,
      name: null,
      tooltip: null,
      className: null,
      style: null,
      mainAttrs: null,
      parent: null,
      ref_: null,
      noIndex: false
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  getInitialState: function getInitialState() {
    // initialize
    this._isMounted = true;
    this.registerMixin("UU5.Common.BaseMixin");
    this.id = this.props.id === null ? tools.generateUUID() : this.props.id;
    // state
    return null;
  },

  componentDidMount: function componentDidMount() {
    if (typeof this.props.ref_ === 'function' && (!this.constructor.opt || !this.constructor.opt.hoc)) {
      this.props.ref_(this);
    }
  },

  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    // set id only if it was set in nextProps
    if (nextProps.id !== undefined && nextProps.id !== null && nextProps.id !== this.getId()) {
      var parent = this.getParent();
      // if parent support rendered children register - methods unregisterRenderedChild, registerRenderedChild
      if (parent && parent.unregisterRenderedChild) {
        var index = this.getIndex();
        parent.unregisterRenderedChild(this);
        this.id = nextProps.id;
        parent.registerRenderedChild && parent.registerRenderedChild(this, index);
      } else {
        this.id = nextProps.id;
      }
    }
  },

  componentWillUnmount: function componentWillUnmount() {
    // if parent support rendered children register - unregisterRenderedChild
    var parent = this.getParent();
    parent && parent.unregisterRenderedChild && parent.unregisterRenderedChild(this);
    this._isMounted = false;
  },
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  hasUU5CommonBaseMixin: function hasUU5CommonBaseMixin() {
    return this.hasMixin("UU5.Common.BaseMixin");
  },

  getTagName: function getTagName() {
    return this.constructor.tagName || 'unknownTagName';
  },

  getMixinRegister: function getMixinRegister() {
    return this.mixinRegister = this.mixinRegister || [];
  },

  registerMixin: function registerMixin(mixinName) {
    this.getMixinRegister().push(mixinName);

    var component = this;
    var requiredMixins = this.constructor[mixinName].requiredMixins;
    if (requiredMixins && requiredMixins.length) {
      requiredMixins.forEach(function (mixin) {
        if (!component.hasMixin(mixin)) {
          component.showError('notRequiredMixin', [mixinName, mixin, component.getTagName()], {
            mixinName: "UU5.Common.BaseMixin",
            context: { requiredMixins: requiredMixins }
          });
        }
      });
    }

    return this;
  },

  hasMixin: function hasMixin(mixinName) {
    return this.getMixinRegister().indexOf(mixinName) !== -1;
  },

  getClassName: function getClassName(item, mixinName) {
    var classNames = mixinName ? this.constructor[mixinName] ? this.constructor[mixinName].classNames : null : this.constructor.classNames;
    var resultValue = classNames && item ? classNames[item] : null;
    if (typeof this[resultValue] === 'function') {
      resultValue = this[resultValue]();
    }
    return classNames && item ? resultValue : classNames;
  },

  getDefault: function getDefault(item, mixinName) {
    var defaults = mixinName ? this.constructor[mixinName] ? this.constructor[mixinName].defaults : null : this.constructor.defaults;
    return defaults && item ? defaults[item] : defaults;
  },

  getOpt: function getOpt(item, mixinName) {
    var opt = mixinName ? this.constructor[mixinName] ? this.constructor[mixinName].opt : null : this.constructor.opt;
    return opt && item ? opt[item] : opt;
  },

  getLsi: function getLsi(item, mixinName) {
    var lsi = void 0;
    if (mixinName) {
      lsi = this.constructor[mixinName] ? this.constructor[mixinName].lsi : null;
      typeof lsi === 'function' && (lsi = lsi());
    } else {
      lsi = typeof this.constructor.lsi === 'function' ? this.constructor.lsi() : this.constructor.lsi;
    }
    return lsi && item ? lsi[item] : lsi;
  },


  // TODO: deprecated
  getLSI: function getLSI(item, mixinName) {
    tools.warning("Method this.getLSI is deprecated. Use this.getLsi instead.");
    return this.getLsi(item, mixinName);
  },
  getLsiComponent: function getLsiComponent(item, mixin, params) {
    return tools.findComponent('UU5.Bricks.Lsi', { lsi: this.getLsi(item, mixin), params: params });
  },


  // TODO: deprecated
  getLSIComponent: function getLSIComponent(item, mixin, params) {
    tools.warning("Method this.getLSIComponent is deprecated. Use this.getLsiComponent instead.");
    return this.getLsiComponent(item, mixin, params);
  },
  getLsiValue: function getLsiValue(item, mixin, params) {
    return tools.getLsiItemByLanguage(this.getLsi(item, mixin), params);
  },


  // TODO: deprecated
  getLSIValue: function getLSIValue(item, mixin, params) {
    tools.warning("Method this.getLSIValue is deprecated. Use this.getLsiValue instead.");
    return this.getLsiValue(item, mixin, params);
  },
  getLsiItem: function getLsiItem(value, params) {
    return (typeof value === 'undefined' ? 'undefined' : base_mixin__typeof(value)) === 'object' ? tools.getLsiItemByLanguage(value, params) : value;
  },


  // TODO: deprecated
  getLSIItem: function getLSIItem(value, params) {
    tools.warning("Method this.getLSIItem is deprecated. Use this.getLsiItem instead.");
    return this.getLsiItem(value, params);
  },


  isRendered: function isRendered() {
    return this._isMounted;
  },

  setAsyncState: function setAsyncState(newState, setStateCallback) {
    if (this.isRendered()) {
      this.setState(newState, setStateCallback);
    }
    return this;
  },


  getLimit: function getLimit(item, mixinName) {
    var limits = mixinName ? environment.limits[mixinName] : this.constructor[mixinName] ? this.constructor[mixinName].limits : this.constructor.limits;
    return limits && item ? limits[item] : limits;
  },

  getError: function getError(item, mixinName) {
    var errors = mixinName ? this.constructor[mixinName] ? this.constructor[mixinName].errors || {} : {} : this.constructor.errors || {};
    return item ? errors[item] || item : errors;
  },

  getWarning: function getWarning(item, mixinName) {
    var warnings = mixinName ? this.constructor[mixinName] ? this.constructor[mixinName].warnings || {} : {} : this.constructor.warnings || {};
    return item ? warnings[item] || item : warnings;
  },

  getCallName: function getCallName(item, mixinName) {
    var calls = mixinName ? this.constructor[mixinName] ? this.constructor[mixinName].calls || {} : {} : this.constructor.calls || {};
    return item ? calls[item] || null : calls;
  },

  getId: function getId() {
    var id = this.id;
    !id && this.showError('idMissing', id, {
      mixinName: "UU5.Common.BaseMixin"
    });
    return id;
  },

  getName: function getName() {
    return this.props.name;
  },

  getTooltip: function getTooltip() {
    return this.props.tooltip;
  },

  getProps: function getProps(prop) {
    return this.props ? prop ? this.props[prop] : this.props : null;
  },

  getUU5CommonBaseMixinProps: function getUU5CommonBaseMixinProps() {
    return {
      id: this.getId(),
      name: this.getName(),
      tooltip: this.getTooltip(),
      className: this.props.className,
      style: this.props.style,
      mainAttrs: this.props.mainAttrs,
      parent: this.getParent()
    };
  },

  getUU5CommonBaseMixinPropsToPass: function getUU5CommonBaseMixinPropsToPass(suffix) {
    suffix = suffix || 'inner';

    var props = {
      id: this.getId() + '-' + suffix,
      name: this.getName() ? this.getName() + '-' + suffix : null,
      tooltip: this.getTooltip(),
      className: this.getFullClassName(),
      style: this.props.style && this.props.mainAttrs && this.props.mainAttrs.style ? tools.mergeDeep(this.props.mainAttrs.style, this.props.style) : this.props.style || this.props.mainAttrs && this.props.mainAttrs.style,
      parent: this
    };

    var mainAttrs = this.props.mainAttrs || {};
    var extend = true;
    if (mainAttrs && mainAttrs.className) {
      extend && (mainAttrs = tools.mergeDeep({}, mainAttrs)) && (extend = false);
      delete mainAttrs.className;
    }
    if (mainAttrs && mainAttrs.style) {
      extend && (mainAttrs = tools.mergeDeep({}, mainAttrs)) && (extend = false);
      delete mainAttrs.style;
    }
    if (this.getTooltip()) {
      extend && (mainAttrs = tools.mergeDeep({}, mainAttrs));
      mainAttrs.title = this.getTooltip() || mainAttrs.title;
    }

    props.mainAttrs = mainAttrs;

    return props;
  },

  // mixinNames = mixins to choose from
  getMainPropsToPass: function getMainPropsToPass(mixinNames) {
    var params = [{}];

    var component = this;
    mixinNames = mixinNames || this.getMixinRegister();
    mixinNames.forEach(function (mixinName) {
      var propsToPassFunction = component['get' + mixinName.replace(/\./g, "") + 'PropsToPass'];
      typeof propsToPassFunction === 'function' && params.push(propsToPassFunction());
    });

    return tools.mergeDeep.apply(null, params);
  },

  getMainAttrs: function getMainAttrs() {
    var newMainAttrs = tools.mergeDeep({}, this.getUU5CommonBaseMixinProps().mainAttrs, {
      className: this.getFullClassName()
    });

    if (this.getTooltip()) newMainAttrs.title = this.getTooltip();
    if (this.props.style) {
      var style = typeof this.props.style === 'string' ? this.__styleStringToObject(this.props.style) : this.props.style;

      newMainAttrs.style = tools.mergeDeep({}, newMainAttrs.style, style);
    }
    if (this.props.id) newMainAttrs.id = this.props.id;
    if (this.getName()) newMainAttrs.name = this.getName();

    if (this.buildMainAttrs) newMainAttrs = this.buildMainAttrs(newMainAttrs);
    return newMainAttrs;
  },

  getParent: function getParent() {
    return this.props.parent;
  },

  getParentByType: function getParentByType(typeFunction) {
    var parent = this.getParent && this.getParent();
    while (parent && (typeof parent[typeFunction] !== 'function' || !parent[typeFunction]())) {
      parent = parent.getParent && parent.getParent();
    }
    return parent;
  },

  checkParentTagName: function checkParentTagName(parentTagNames) {
    parentTagNames = Array.isArray(parentTagNames) ? parentTagNames : [parentTagNames];
    var parent = this.getParent();
    var currentParentTagName = parent && parent.getTagName();
    var result = !currentParentTagName || parentTagNames.indexOf(currentParentTagName) == -1;
    if (result) {
      this.showError('invalidParentTagName', [currentParentTagName, parentTagNames.join(' or ')], {
        mixinName: "UU5.Common.BaseMixin"
      });
    }
    return result;
  },

  checkParentType: function checkParentType(typeFunction) {
    var parent = this.getParent();
    var parentTypeFunction = parent && parent[typeFunction];
    var result = parentTypeFunction !== 'function' || !parentTypeFunction();
    if (result) {
      this.showError('invalidParentType', [parent ? parent.getTagName() : null, typeFunction], {
        mixinName: "UU5.Common.BaseMixin"
      });
    }
    return result;
  },

  getIndex: function getIndex() {
    var parent = this.getParent();
    var index = null;
    // parent should support children index - method getChildIndexById
    if (parent && parent.getChildIndexById) {
      index = parent.getChildIndexById(this.getId());
    } else {
      this.showError('childrenAreNotIndexedByParent', parent ? parent.getTagName() : null, {
        mixinName: "UU5.Common.BaseMixin",
        context: { parent: parent }
      });
    }
    return index;
  },

  // Component helpers for React
  getFullClassName: function getFullClassName(className) {
    var component = this;
    var myClassName = className || 'main';
    var classArray = [];
    var classes = {
      main: this.getClassName(myClassName),
      props: this.props.className,
      mainAttrs: this.props.mainAttrs && this.props.mainAttrs.className
    };

    if (this.props.noIndex) {
      classes.main += " uu5-noindex";
    }

    this.getMixinRegister().forEach(function (v) {
      var mixinClassName = v + '_' + myClassName;
      classes[mixinClassName] = component.getClassName(myClassName, v);
      classArray.push(mixinClassName);
    });
    classArray.push(myClassName);
    classArray.push('props');
    classArray.push('mainAttrs');

    return tools.buildClasses(classes, classArray);
  },

  stringToObjectType: function stringToObjectType(string, type, prefix) {
    var calculated = prefix || window;
    if (typeof string === 'string') {
      var sArray = string.split('.');
      while (calculated && sArray.length > 0) {
        calculated = calculated[sArray.shift()];
      }
    }
    if ((typeof calculated === 'undefined' ? 'undefined' : base_mixin__typeof(calculated)) !== type) {
      this.showError('tagIsWrong', string, {
        mixinName: "UU5.Common.BaseMixin",
        context: {
          notFoundObject: calculated,
          notFoundObjectType: typeof calculated === 'undefined' ? 'undefined' : base_mixin__typeof(calculated),
          checkedType: type,
          prefix: prefix
        }
      });
      calculated = null;
    }
    return calculated;
  },

  switchChildrenToBody: function switchChildrenToBody(props) {
    var newProps = tools.mergeDeep({}, props || this.props);
    var children = newProps.children;
    newProps.children = null;
    newProps.body = external___amd___react___commonjs___react___commonjs2___react___root___React___default.a.Children.map(children, tools.childToBodyItem());
    return newProps;
  },

  findDOMNode: function findDOMNode() {
    return external___amd___react_dom___commonjs___react_dom___commonjs2___react_dom___root___ReactDOM___default.a.findDOMNode(this);
  },

  exportToObject: function exportToObject() {
    return {
      tag: this.getTagName(),
      props: tools.mergeDeep({}, this.props),
      state: tools.mergeDeep({}, this.state)
    };
  },

  // msgParams could be array of params or just one param
  showError: function showError(msgKey, msgParams, opt) {
    opt = opt || {};
    var msg = this.getError(msgKey, opt.mixinName);
    tools.error.apply(null, this.__getLogParams(msg, msgParams, opt.context));
    return this;
  },

  // msgParams could be array of params or just one param
  showWarning: function showWarning(msgKey, msgParams, opt) {
    opt = opt || {};
    var msg = this.getWarning(msgKey, opt.mixinName);
    tools.warning.apply(null, this.__getLogParams(msg, msgParams, opt.context));
    return this;
  },

  replaceByHardSpace: function replaceByHardSpace(text, language) {
    var replacer = language ? environment.hardSpace.lsiReplacer[language] : null;
    replacer = replacer || tools.getLsiItemByLanguage(environment.hardSpace.lsiReplacer);
    return replacer ? replacer(text) : text;
  },

  shouldRender: function shouldRender(nextProps, nextState, thisProps, thisState) {
    var props = thisProps || this.props;
    var state = thisState || this.state;
    var oldProps = tools.merge({}, props);
    var newProps = tools.merge({}, nextProps);
    return !tools.deepEqual(oldProps, newProps) || !tools.deepEqual(state, nextState);
  },

  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  __getLogParams: function __getLogParams(msg, msgParams, context) {
    var title = this.getTagName() + ' [' + this.getId() + ']: ';
    var msgWithParams = msg ? tools.formatString(msg, msgParams) : msgParams || null;

    context = context || {};
    context.thisTagName = this.getTagName();
    context.this = this;
    context.thisProps = this.props;
    context.thisState = this.state;

    return [title + msgWithParams, context];
  },

  __styleStringToObject: function __styleStringToObject(style) {
    if (typeof style !== 'string') return;

    var obj = {};
    var formattedString = style.replace(this.getDefault('regexpChars', "UU5.Common.BaseMixin"), '');
    var properties = formattedString.split(';');

    properties.forEach(function (item) {
      var keysAndValues = item.split(':');
      if (keysAndValues.length > 1) {
        obj[keysAndValues[0]] = keysAndValues[1];
      }
    });

    return obj;
  }
  //@@viewOff:componentSpecificHelpers

};

/* harmony default export */ var base_mixin = (BaseMixin);
// EXTERNAL MODULE: external {"amd":"create-react-class","commonjs":"create-react-class","commonjs2":"create-react-class","root":"createReactClass"}
var external___amd___create_react_class___commonjs___create_react_class___commonjs2___create_react_class___root___createReactClass__ = __webpack_require__(22);
var external___amd___create_react_class___commonjs___create_react_class___commonjs2___create_react_class___root___createReactClass___default = /*#__PURE__*/__webpack_require__.n(external___amd___create_react_class___commonjs___create_react_class___commonjs2___create_react_class___root___createReactClass__);

// CONCATENATED MODULE: ./create-react-class.js


/* harmony default export */ var create_react_class = (function (cmp) {
  var reactCmp = external___amd___create_react_class___commonjs___create_react_class___commonjs2___create_react_class___root___createReactClass___default()(cmp);
  // fix warning
  if (reactCmp.getDefaultProps) {
    reactCmp.getDefaultProps.isReactClassApproved = true;
  }
  return reactCmp;
});
// CONCATENATED MODULE: ./core/common/common-ns.js
var ns = {
  NAME: "UU5.Common",
  CSS: "uu5-common",
  name: function name(_name) {
    return ns.NAME + "." + _name;
  },
  css: function css() {
    return Array.prototype.slice.call(arguments).map(function (name) {
      return ns.CSS + "-" + name;
    }).join(" ");
  }
};

/* harmony default export */ var common_ns = (ns);
// CONCATENATED MODULE: ./core/common/elementary-mixin.js





var ElementaryMixin = {

  //@@viewOn:statics
  statics: {
    "UU5.Common.ElementaryMixin": {
      requiredMixins: ["UU5.Common.BaseMixin"],
      classNames: {
        hidden: common_ns.css("hidden"),
        selected: common_ns.css("selected"),
        disabled: common_ns.css("disabled"),
        disabledCover: common_ns.css("disabled-cover"),
        disabledCoverTransparent: common_ns.css("disabled-cover-transparent")
      }
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    hidden: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.bool,
    disabled: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.bool,
    selected: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.bool,
    controlled: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.bool
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      hidden: false,
      disabled: false,
      selected: false,
      controlled: true
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  getInitialState: function getInitialState() {
    // initialize
    this.registerMixin("UU5.Common.ElementaryMixin");
    // state
    return {
      hidden: this.props.hidden,
      disabled: this.props.disabled,
      selected: this.props.selected
    };
  },

  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    if (nextProps.controlled) {
      this.setState({
        hidden: nextProps.hidden,
        disabled: nextProps.disabled,
        selected: nextProps.selected
      });
    }
  },
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  hasUU5CommonElementaryMixin: function hasUU5CommonElementaryMixin() {
    return this.hasMixin("UU5.Common.ElementaryMixin");
  },

  getUU5CommonElementaryMixinProps: function getUU5CommonElementaryMixinProps() {
    return {
      hidden: this.isHidden(),
      disabled: this.isDisabled(),
      selected: this.isSelected()
    };
  },

  getUU5CommonElementaryMixinPropsToPass: function getUU5CommonElementaryMixinPropsToPass() {
    return {
      hidden: this.isHidden(),
      disabled: this.isDisabled(),
      selected: this.isSelected(),
      controlled: true
    };
  },

  setHiddenValue: function setHiddenValue(value, setStateCallback) {
    this.setState({ hidden: value }, setStateCallback);
    return this;
  },

  hide: function hide(setStateCallback) {
    if (typeof this.hide_ === 'function') {
      this.hide_(setStateCallback);
    } else {
      this.setHiddenValue(true, setStateCallback);
    }
    return this;
  },

  show: function show(setStateCallback) {
    if (typeof this.show_ === 'function') {
      this.show_(setStateCallback);
    } else {
      this.setHiddenValue(false, setStateCallback);
    }
    return this;
  },

  isHidden: function isHidden() {
    return this.state.hidden;
  },

  toggleHidden: function toggleHidden(setStateCallback) {
    if (typeof this.toggleHidden_ === 'function') {
      this.toggleHidden_(setStateCallback);
    } else {
      this.setState(function (state) {
        return { hidden: !state.hidden };
      }, setStateCallback);
    }
    return this;
  },

  setDisabledValue: function setDisabledValue(value, setStateCallback) {
    this.setState({ disabled: value }, setStateCallback);
    return this;
  },

  disable: function disable(setStateCallback) {
    if (typeof this.disable_ === 'function') {
      this.disable_(setStateCallback);
    } else {
      this.setDisabledValue(true, setStateCallback);
    }
    return this;
  },

  enable: function enable(setStateCallback) {
    if (typeof this.enable_ === 'function') {
      this.enable_(setStateCallback);
    } else {
      this.setDisabledValue(false, setStateCallback);
    }
    return this;
  },

  isDisabled: function isDisabled() {
    return this.state.disabled;
  },

  toggleDisabled: function toggleDisabled(setStateCallback) {
    if (typeof this.toggleDisabled_ === 'function') {
      this.toggleDisabled_(setStateCallback);
    } else {
      this.setState(function (state) {
        return { disabled: !state.disabled };
      }, setStateCallback);
    }
    return this;
  },

  setSelectedValue: function setSelectedValue(value, setStateCallback) {
    this.setState({ selected: value }, setStateCallback);
    return this;
  },

  select: function select(setStateCallback) {
    if (typeof this.select_ === 'function') {
      this.select_(setStateCallback);
    } else {
      this.setSelectedValue(true, setStateCallback);
    }
    return this;
  },

  deselect: function deselect(setStateCallback) {
    if (typeof this.deselect_ === 'function') {
      this.deselect_(setStateCallback);
    } else {
      this.setSelectedValue(false, setStateCallback);
    }
    return this;
  },

  isSelected: function isSelected() {
    return this.state.selected;
  },

  toggleSelected: function toggleSelected(setStateCallback) {
    if (typeof this.toggleSelected_ === 'function') {
      this.toggleSelected_(setStateCallback);
    } else {
      this.setState(function (state) {
        return { selected: !state.selected };
      }, setStateCallback);
    }
    return this;
  },

  buildMainAttrs: function buildMainAttrs(mainAttrs) {
    var newMainAttrs = tools.mergeDeep({}, mainAttrs || this.getUU5CommonBaseMixinProps && this.getUU5CommonBaseMixinProps().mainAttrs, {
      title: this.getTooltip(),
      className: this.getFullClassName()
    });
    newMainAttrs.className = this.getHiddenClassName(newMainAttrs.className);
    newMainAttrs.className = this.getDisabledClassName(newMainAttrs.className);
    newMainAttrs.className = this.getSelectedClassName(newMainAttrs.className);

    var style = typeof this.props.style === 'string' ? this.__styleStringToObject(this.props.style) : this.props.style;

    newMainAttrs.style = tools.mergeDeep({}, newMainAttrs.style, style);
    return newMainAttrs;
  },

  getHiddenClassName: function getHiddenClassName(className) {
    var hiddenClassName = '';
    if (this.isHidden()) {
      hiddenClassName = this.getClassName('hidden') || this.getClassName(null, "UU5.Common.ElementaryMixin").hidden;
    }
    return className ? (className + ' ' + hiddenClassName).trim() : hiddenClassName;
  },

  getDisabledClassName: function getDisabledClassName(className) {
    var disabledClassName = '';
    if (this.isDisabled()) {
      disabledClassName = this.getClassName('disabled') || this.getClassName(null, "UU5.Common.ElementaryMixin").disabled;
    }
    return className ? (className + ' ' + disabledClassName).trim() : disabledClassName;
  },

  getSelectedClassName: function getSelectedClassName(className) {
    var selectedClassName = '';
    if (this.isSelected()) {
      selectedClassName = this.getClassName('selected') || this.getClassName(null, "UU5.Common.ElementaryMixin").selected;
    }
    return className ? (className + ' ' + selectedClassName).trim() : selectedClassName;
  },

  getDisabledCover: function getDisabledCover() {
    var className = this.getClassName('disabledCover') || this.getClassName(null, "UU5.Common.ElementaryMixin").disabledCover;
    return this.isDisabled() ? external___amd___react___commonjs___react___commonjs2___react___root___React___default.a.createElement('span', { className: className }) : null;
  },

  getDisabledCoverTransparent: function getDisabledCoverTransparent() {
    var className = this.getClassName('disabledCoverTransparent') || this.getClassName(null, "UU5.Common.ElementaryMixin").disabledCoverTransparent;
    return this.isDisabled() ? external___amd___react___commonjs___react___commonjs2___react___root___React___default.a.createElement('span', { className: className }) : null;
  }
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  //@@viewOff:componentSpecificHelpers

};

/* harmony default export */ var elementary_mixin = (ElementaryMixin);
// CONCATENATED MODULE: ./core/common/content-mixin.js
var content_mixin__typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };






var ContentMixin = {

  //@@viewOn:statics
  statics: {
    "UU5.Common.ContentMixin": {
      requiredMixins: ["UU5.Common.BaseMixin"],
      defaults: {
        standardMode: 'standard',
        outlineMode: 'outline',
        regexpUu5: /^\s*<(uu5json|uu5string|uu5data)\s*\/>/
      },
      errors: {
        unexpectedContentType: 'Type "%s" of content property is unexpected.',
        dynamicOnly: 'Method %s can be used just for dynamic content.',
        insertedchildIdNotExists: 'Child with ID %s does not exist.',
        childIdNotExists: 'Child with ID %s does not exist.',
        indexNotSet: 'In this case index has to be specified.',
        addRenderedChildToIdList_IdDuplicity: 'There is duplicity ID %s in adding rendered child to the list of children by ID.',
        addRenderedChildToNameList_IdDuplicity: 'There is Name duplicity in adding rendered child to the list children by Name.'
      }
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    content: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.oneOfType([
    // content array:[bodyItem, items, node, number, bool, string]
    external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.array,
    // content bodyItem:{tag:'',props{}}
    external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.shape({
      tag: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.oneOfType([external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.string, external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.func]),
      props: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.arrayOf(external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.object)
    }),
    // content items:{tag:'',propsArray:[{},{},{},...]}
    external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.shape({
      tag: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.oneOfType([external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.string, external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.func]),
      propsArray: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.arrayOf(external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.object)
    }),
    // content node
    external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.node,
    // number
    external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.number,
    // bool
    external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.bool]),
    ignoreInnerHTML: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.bool,
    checkSpaces: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.bool,
    checkGrammar: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.bool,
    checkHighlight: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.bool,
    textCorrector: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.bool,
    dynamic: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.bool,
    mode: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.oneOf(['standard', 'outline'])
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      content: null,
      ignoreInnerHTML: false,
      checkSpaces: false,
      checkGrammar: false,
      checkHighlight: false,
      textCorrector: false,
      dynamic: false,
      mode: 'standard'
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  getInitialState: function getInitialState() {
    // initialize
    this.registerMixin("UU5.Common.ContentMixin");

    this.renderedChildren = []; // [renderedChild,renderedChild,...]
    this.renderedChildrenIdList = {}; // {id:renderedChild,id:renderedChild,...}
    this.renderedChildrenNameList = {}; // {name:renderedChild,name:renderedChild,...}

    // state
    var state = {
      mode: this.props.mode
    };

    if (this.isDynamic()) {
      state.children = this.buildChildren(this.props);
      state.filter = null;
      state.filteredProps = null;
      state.sorter = null;
      state.sortedIds = null;
    }

    return state;
  },

  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    if (nextProps.controlled) {
      this.isDynamic() && this.setChildren(this.buildChildren(nextProps));
      nextProps.mode !== this.props.mode && this.setState({ mode: nextProps.mode });
    }
  },
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  hasUU5CommonContentMixin: function hasUU5CommonContentMixin() {
    return this.hasMixin("UU5.Common.ContentMixin");
  },

  isDynamic: function isDynamic() {
    return this.props.dynamic;
  },

  getContent: function getContent() {
    return this.props.content;
  },

  getUU5CommonContentMixinProps: function getUU5CommonContentMixinProps() {
    return {
      content: this.getContent(),
      dynamic: this.isDynamic(),
      ignoreInnerHTML: this.props.ignoreInnerHTML,
      checkSpaces: this.props.checkSpaces,
      checkGrammar: this.props.checkGrammar,
      checkHighlight: this.props.checkHighlight,
      mode: this.props.mode
    };
  },

  getUU5CommonContentMixinPropsToPass: function getUU5CommonContentMixinPropsToPass() {
    return this.getUU5CommonContentMixinProps();
  },

  expandChildProps: function expandChildProps(prevChild, childIndex) {
    var newChildProps = prevChild.props;
    newChildProps = tools.mergeDeep({}, newChildProps);

    // key is id if id is set, or it is childIndex
    // Key can not be generated because of in each render the child has new key and child is unmounted and mounted again
    var key = newChildProps.id || childIndex;

    var isUU5Child = typeof prevChild.type === 'function' && prevChild.type.tagName;

    if (isUU5Child) {
      newChildProps.parent = newChildProps.parent || this;
      //newChildProps.parent = this;

      this.isDynamic() && (newChildProps.id = newChildProps.id || tools.generateUUID());

      if (typeof this.expandChildProps_ === 'function') {
        var tempChild = external___amd___react___commonjs___react___commonjs2___react___root___React___default.a.cloneElement(prevChild, newChildProps);
        newChildProps = this.expandChildProps_(tempChild, childIndex);
      }
    }

    newChildProps.key = newChildProps.key || key;

    if (isUU5Child) {
      newChildProps.ref = function (renderedChild) {
        renderedChild && this.registerRenderedChild(renderedChild, childIndex);
      }.bind(this);
    }

    return newChildProps;
  },

  buildChild: function buildChild(childTag, childProps, children) {
    if (childProps && childProps.href && childProps.href.match(/^javascript:/i)) {
      childProps = tools.merge({}, childProps);
      childProps.href = childProps.href.replace(REGEXP.jsCode, "");
    }
    return tools.findComponent(childTag, childProps, children);
  },

  cloneChild: function cloneChild(child, props) {
    var clonedChild = void 0;
    if (this.expandChild_) {
      clonedChild = this.expandChild_(external___amd___react___commonjs___react___commonjs2___react___root___React___default.a.cloneElement(child, props), props.key);
    }

    return clonedChild || external___amd___react___commonjs___react___commonjs2___react___root___React___default.a.cloneElement(child, props);
  },

  buildNodeChildren: function buildNodeChildren(children, childPropsExpander) {
    var content = this;
    var newChildren = [];
    external___amd___react___commonjs___react___commonjs2___react___root___React___default.a.Children.forEach(children, function (child, i) {
      if (child !== undefined && child !== null) {
        if (content.shouldChildRender(child)) {
          if ((typeof child === 'undefined' ? 'undefined' : content_mixin__typeof(child)) === 'object') {
            var newChildProps = childPropsExpander(child, i);
            var newChild = content.cloneChild(child, newChildProps);

            // text
          } else {
            // it does not need to cover just spaces by textCorrector
            if (typeof child === 'number' || child.trim() === '' || !environment.textCorrector && !content.props.textCorrector || !content.props.checkSpaces && !content.props.checkGrammar && !content.props.checkHighlight) {
              newChild = child;
              if (content.expandChild_) {
                newChild = content.expandChild_(newChild, i);
              }
            } else {
              var props = {
                text: child,
                checkSpaces: content.props.textCorrector || content.props.checkSpaces,
                checkGrammar: content.props.textCorrector || content.props.checkGrammar,
                checkHighlight: content.props.textCorrector || content.props.checkHighlight,
                language: content.props.language,
                key: i
              };
              newChild = content.cloneChild(tools.findComponent('UU5.Common.TextCorrector', props), props);

              if (content.expandChild_) {
                newChild = content.expandChild_(newChild, i);
              }
            }
          }
          newChildren.push(newChild);
        }
      }
    });

    return newChildren;
  },

  shouldChildRender: function shouldChildRender(child) {
    var childTag = tools.getChildTag(child);
    var result = environment.nestingLevelStrict ? childTag && !!childTag["UU5.Common.NestingLevelMixin"] : true;

    if (result && typeof this.shouldChildRender_ === 'function') {
      result = this.shouldChildRender_(child);
    }
    return result;
  },

  buildChildren: function buildChildren(contentProps, childPropsExpander, childIndex) {
    var _this = this;

    var children = null;

    if (typeof this.buildChildren_ === 'function') {
      children = this.buildChildren_(contentProps, childPropsExpander);
    } else {
      contentProps = contentProps || this.props;
      childPropsExpander = childPropsExpander || this.expandChildProps;
      childIndex = childIndex || 0;

      var contentValue = contentProps.content;
      var contentType = this._getContentType(contentValue);

      if (contentType === 'uu5json') {
        contentValue = tools.parseFromUu5JSON(contentValue);
        contentType = this._getContentType(contentValue);
      } else if (contentType === 'uu5data') {
        contentValue = tools.parseFromUu5Data(contentValue);
        contentType = this._getContentType(contentValue);
      }

      switch (contentType) {
        case 'bodyItem':
          var bodyItemChild = this.buildChild(contentValue.tag, contentValue.props);
          this.shouldChildRender(bodyItemChild) && (children = [this.cloneChild(bodyItemChild, childPropsExpander(bodyItemChild, childIndex))]);
          break;
        case 'array':
          children = contentValue.map(function (bodyItem, i) {
            return _this.buildChildren({ content: bodyItem }, childPropsExpander, i);
          });
          break;
        case 'items':
          var tag = tools.checkTag(contentValue.tag, true);
          children = [];
          contentValue.propsArray.forEach(function (props, i) {
            var child = tag ? _this.buildChild(tag, props) : tools.findComponent(contentValue.tag, props);
            child = _this.cloneChild(child, childPropsExpander(child, i));
            _this.shouldChildRender(child) && children.push(child);
          });
          break;
        case 'string':
          if (contentValue.trim() === '' || !environment.textCorrector && !this.props.textCorrector && !this.props.checkSpaces && !this.props.checkGrammar && !this.props.checkHighlight) {
            children = contentValue;
          } else {
            children = tools.findComponent('UU5.Common.TextCorrector', {
              parent: this,
              text: contentValue,
              checkSpaces: this.props.textCorrector || this.props.checkSpaces,
              checkGrammar: this.props.textCorrector || this.props.checkGrammar,
              checkHighlight: this.props.textCorrector || this.props.checkHighlight,
              language: this.props.language
            });
          }
          break;
        case 'number':
          children = contentValue;
          break;
        case 'element':
          children = this.cloneChild(contentValue, childPropsExpander(contentValue, childIndex));
          break;
        case 'bool':
          children = contentValue ? 'true' : 'false';
          break;
        case 'uu5string':
          var stringChildren = tools.getChildrenFromUu5String(contentValue);
          children = this.buildNodeChildren(stringChildren, childPropsExpander);
          break;
        case 'children':
        default:
          if (contentProps.children) {
            children = this.buildNodeChildren(contentProps.children, childPropsExpander);
          }
      }
    }

    return children;
  },

  getStandardChildren: function getStandardChildren() {
    return this.isDynamic() ? this.state.children : this.buildChildren();
  },

  getOutlineChildren: function getOutlineChildren() {
    return tools.findComponent('UU5.Common.Outline', { element: this, key: 0 });
  },

  getChildren: function getChildren() {
    var children = null;

    switch (this.getMode()) {
      case this.getDefault('standardMode', "UU5.Common.ContentMixin"):
        children = this.getStandardChildren();
        break;
      case this.getDefault('outlineMode', "UU5.Common.ContentMixin"):
        children = this.getOutlineChildren();
        break;
    }

    return children;
  },

  getRenderedChildren: function getRenderedChildren() {
    return this.renderedChildren;
  },

  setRenderedChildren: function setRenderedChildren(childrenIndexList) {
    this.renderedChildren = childrenIndexList;
    return this;
  },

  addRenderedChild: function addRenderedChild(renderedChild, index) {
    if (index === undefined || index === null) {
      this.showError('indexNotSet', null, {
        mixinName: "UU5.Common.ContentMixin",
        context: {
          index: index,
          renderedChild: {
            tagName: renderedChild.getTagName(),
            id: renderedChild.getId(),
            component: renderedChild
          }
        }
      });
    } else {
      this.getRenderedChildren().splice(index, 0, renderedChild);
    }
    return this;
  },

  removeRenderedChild: function removeRenderedChild(renderedChild) {
    this.getRenderedChildren().splice(renderedChild.getIndex(), 1);
    return this;
  },

  getRenderedChildrenIdList: function getRenderedChildrenIdList() {
    return this.renderedChildrenIdList;
  },

  setRenderedChildrenIdList: function setRenderedChildrenIdList(childrenIdList) {
    this.renderedChildrenIdList = childrenIdList;
    return this;
  },

  addRenderedChildToIdList: function addRenderedChildToIdList(renderedChild) {
    var id = renderedChild.getId();
    if (!this.getRenderedChildById(id)) {
      this.getRenderedChildrenIdList()[id] = renderedChild;
    } else if (this.getRenderedChildById(id) !== renderedChild) {
      this.showError('addRenderedChildToIdList_IdDuplicity', id, {
        mixinName: "UU5.Common.ContentMixin",
        context: {
          renderedChildrenIdList: this.getRenderedChildrenIdList(),
          renderedChild: {
            tagName: renderedChild.getTagName(),
            id: renderedChild.getId(),
            component: renderedChild
          }
        }
      });
    }
    return this;
  },

  removeRenderedChildFromIdList: function removeRenderedChildFromIdList(renderedChild) {
    delete this.getRenderedChildrenIdList()[renderedChild.getId()];
    return this;
  },

  getRenderedChildrenNameList: function getRenderedChildrenNameList() {
    return this.renderedChildrenNameList;
  },

  setRenderedChildrenNameList: function setRenderedChildrenNameList(childrenNameList) {
    this.renderedChildrenNameList = childrenNameList;
    return this;
  },

  addRenderedChildToNameList: function addRenderedChildToNameList(renderedChild) {
    var name = renderedChild.getName();
    if (name) {
      var nameList = this.getRenderedChildrenNameList();
      if (!nameList[name] || nameList[name].map(function (rChild) {
        return rChild.getId();
      }).indexOf(renderedChild.getId()) === -1) {

        nameList[name] = nameList[name] || [];
        nameList[name].push(renderedChild);
      }
    }
    return this;
  },

  removeRenderedChildFromNameList: function removeRenderedChildFromNameList(renderedChild) {
    var nameChildren = this.getRenderedChildrenByName(renderedChild.getName());
    if (nameChildren) {
      var childIndex = nameChildren.map(function (rChild) {
        return rChild.getId();
      }).indexOf(renderedChild.getId());

      childIndex > -1 && nameChildren.splice(childIndex, 1);
    }
    return this;
  },

  getChildIndexById: function getChildIndexById(childId) {
    var childIndex;

    if (typeof this.getChildIndexById_ === 'function') {
      childIndex = this.getChildIndexById_(childId);
    } else {
      var children = this.getRenderedChildren();

      var index = childId && children.map(function (child) {
        return child.getId() === childId;
      }).indexOf(true);

      childIndex = index === -1 ? null : index;
    }

    return childIndex;
  },

  getRenderedChildById: function getRenderedChildById(childId) {
    var renderedChild;

    if (typeof this.getRenderedChildById_ === 'function') {
      renderedChild = this.getRenderedChildById_(childId);
    } else {
      renderedChild = this.getRenderedChildrenIdList()[childId] || null;
    }

    return renderedChild;
  },

  getRenderedChildrenByName: function getRenderedChildrenByName(childName) {
    return this.getRenderedChildrenNameList()[childName] || null;
  },

  getRenderedChildByName: function getRenderedChildByName(childName) {
    var renderedChild;

    if (typeof this.getRenderedChildByName_ === 'function') {
      renderedChild = this.getRenderedChildByName_(childName);
    } else {
      var nameChildren = this.getRenderedChildrenByName(childName);
      renderedChild = nameChildren ? nameChildren[0] : null;
    }

    return renderedChild;
  },

  getRenderedChildByIndex: function getRenderedChildByIndex(index) {
    var renderedChild;

    if (typeof this.getRenderedChildByIndex_ === 'function') {
      renderedChild = this.getRenderedChildByIndex_(index);
    } else {
      renderedChild = this.getRenderedChildren()[index] || null;
    }

    return renderedChild;
  },

  getRenderedChildByTagName: function getRenderedChildByTagName(tagName) {
    var foundChild = null;

    if (typeof this.getRenderedChildByTagName_ === 'function') {
      foundChild = this.getRenderedChildByTagName_(tagName);
    } else {
      this.eachRenderedChild(function (renderedChild) {
        var condition = renderedChild.getTagName() === tagName;
        condition && (foundChild = renderedChild);
        return !condition; // false <=> end of cycle
      });
    }

    return foundChild;
  },

  getFirstRenderedChild: function getFirstRenderedChild() {
    var renderedChild = null;

    if (typeof this.getFirstRenderedChild_ === 'function') {
      renderedChild = this.getFirstRenderedChild_();
    } else {
      renderedChild = this.getRenderedChildByIndex(0);
    }

    return renderedChild;
  },

  getLastRenderedChild: function getLastRenderedChild() {
    var renderedChild = null;

    if (typeof this.getLastRenderedChild_ === 'function') {
      renderedChild = this.getLastRenderedChild_();
    } else {
      renderedChild = this.getRenderedChildByIndex(this.getRenderedChildren().length - 1);
    }

    return renderedChild;
  },

  eachRenderedChild: function eachRenderedChild(callback) {
    // function callbackFunction( renderedChild, renderedChildIndex );
    if (typeof this.eachRenderedChild_ === 'function') {
      this.eachRenderedChild_(callback);
    } else {
      var renderedChildren = this.getRenderedChildren();

      // same as: for(var i = 0; i < renderedChildren.length; i++) {
      //          var renderedChild = renderedChildren[i];
      for (var i = 0, renderedChild; renderedChild = renderedChildren[i]; ++i) {
        var result = callback(renderedChild, i);
        if (result === false) {
          break;
        }
      }
    }
    return this;
  },

  registerRenderedChild: function registerRenderedChild(renderedChild, index) {
    if (renderedChild.hasUU5CommonBaseMixin && !this.getRenderedChildById(renderedChild.getId())) {
      this.addRenderedChild(renderedChild, index);
      this.addRenderedChildToIdList(renderedChild);
      this.addRenderedChildToNameList(renderedChild);
    }
    return this;
  },

  unregisterRenderedChild: function unregisterRenderedChild(renderedChild) {
    this.removeRenderedChild(renderedChild);
    this.removeRenderedChildFromIdList(renderedChild);
    this.removeRenderedChildFromNameList(renderedChild);
    return this;
  },

  // dynamic functions

  setChildren: function setChildren(newChildren, setStateCallback) {
    if (this.isDynamic()) {
      if (typeof this.setChildren_ === 'function') {
        this.setChildren_(newChildren, setStateCallback);
      } else {
        this.setState({ children: newChildren }, setStateCallback);
      }
    } else {
      this.showError('dynamicOnly', 'setChildren', {
        mixinName: "UU5.Common.ContentMixin"
      });
    }
    return this;
  },

  /**
   * Inserts child into container. If position is set, child will be added to that position.
   * Only for dynamic container.
   * Can be overridden by insertChild_ function.
   *
   * @param {object|element} child - Object with tag of the element and props. E.g. {tag: '...', props: {...}} or Element e.g. < ... />
   * @param {object} opt - Additional parameters.
   * @param {number} opt.position - Position where the child should be placed to. If not set, child is added
   *                                at the end of children list.
   * @param {boolean} opt.shouldUpdate - If false, setState is not called.
   * @param {function} opt.setStateCallback - Callback is called after setState.
   * @returns {object} this
   */
  insertChild: function insertChild(child, opt) {
    var _this2 = this;

    /*
     opt:{
     position: number // Position where the child should be placed to.
     // If not set, child is added at the end of children list.
     shouldUpdate: bool // call setState -> render, default value is true
     callbackFunction: function // function callbackFunction(newRenderedChild)
     }
     */
    if (this.isDynamic()) {
      if (typeof this.insertChild_ === 'function') {
        this.insertChild_(child, opt);
      } else {
        opt = opt || {};

        var children = this.getChildren() || [];
        if (Array.isArray(children)) {
          children = children.slice();
        } else {
          var elem = this.cloneChild(children, this.expandChildProps(children, 0));
          children = [elem];
        }

        var newChild = child.tag ? this.buildChild(child.tag, child.props) : child;

        if (this.shouldChildRender(newChild)) {
          newChild = this.cloneChild(newChild, this.expandChildProps(newChild, typeof opt.position === 'number' ? opt.position : children.length));

          if (typeof opt.position === 'number') {
            children.splice(opt.position, 0, newChild);
          } else {
            children.push(newChild);
          }

          if (opt.shouldUpdate === undefined || opt.shouldUpdate) {
            this.setChildren(children, typeof opt.setStateCallback === 'function' ? function () {
              opt.setStateCallback(_this2.getRenderedChildById(newChild.props.id));
            } : null);
          }
        }
      }
    } else {
      this.showError('dynamicOnly', 'insertChild', {
        mixinName: "UU5.Common.ContentMixin"
      });
    }

    return this;
  },

  /**
   * Inserts child into container at position before another child by ID.
   * Only for dynamic container.
   * Can be overridden by insertChildBefore_ function.
   *
   * @param {object} child - Object with tag of the element and props. E.g. {tag: '...', props: {...}} or Element e.g. < ... />
   * @param {object} opt - Additional parameters.
   * @param {string} opt.childAfterId - ID of the child before which the new child will be placed. If not set, the new
   *                                    child will be placed at the beginning.
   * @param {boolean} opt.shouldUpdate - If false, setState is not called.
   * @param {function} opt.setStateCallback - Callback is called after setState.
   * @returns {object} this
   */
  insertChildBefore: function insertChildBefore(child, opt) {
    if (this.isDynamic()) {
      if (typeof this.insertChildBefore_ === 'function') {
        this.insertChildBefore_(child, opt);
      } else {
        opt = opt || {};

        var childIndex;
        if (opt.childAfterId) {
          var renderedChild = this.getRenderedChildById(opt.childAfterId);
          childIndex = renderedChild.getIndex();
        } else {
          childIndex = 0;
        }

        if (childIndex === null) {
          this.showError('insertedchildIdNotExists', opt.childAfterId, {
            mixinName: "UU5.Common.ContentMixin"
          });
        } else {
          this.insertChild(child, tools.merge({}, opt, { position: childIndex }));
        }
      }
    } else {
      this.showError('dynamicOnly', 'insertChildBefore', {
        mixinName: "UU5.Common.ContentMixin"
      });
    }

    return this;
  },

  /**
   * Inserts child into container at position after another child by ID.
   * Only for dynamic container.
   * Can be overridden by insertChildAfter_ function.
   *
   * @param {object} child - Object with tag of the element and props. E.g. {tag: '...', props: {...}} or Element e.g. < ... />
   * @param {object} opt - Additional parameters.
   * @param {string} opt.childBeforeId - ID of child after which the new child will be placed. If not set, the new
   *                                     child will be placed at the end.
   * @param {boolean} opt.shouldUpdate - If false, setState is not called.
   * @param {function} opt.setStateCallback - Callback is called after setState.
   * @returns {object} this
   */
  insertChildAfter: function insertChildAfter(child, opt) {
    if (this.isDynamic()) {
      if (typeof this.insertChildAfter_ === 'function') {
        this.insertChildAfter_(child, opt);
      } else {
        // reset position value and copy opt
        opt = tools.merge({}, opt, { position: undefined }) || {};

        if (opt.childBeforeId) {
          var renderedChild = this.getRenderedChildById(opt.childBeforeId);
          var childIndex = renderedChild.getIndex();
          childIndex !== null && (opt.position = childIndex + 1);
        }

        if (opt.childBeforeId && opt.position === undefined) {
          this.showError('insertedchildIdNotExists', opt.childBeforeId, {
            mixinName: "UU5.Common.ContentMixin"
          });
        } else {
          this.insertChild(child, opt);
        }
      }
    } else {
      this.showError('dynamicOnly', 'insertChildAfter', {
        mixinName: "UU5.Common.ContentMixin"
      });
    }

    return this;
  },

  /**
   * Update child props. New props will be merged with old props, so it is possible to change just one property or all
   * of them.
   * Only for dynamic container.
   * Can be overridden by updateChild_ function.
   *
   * TODO: maybe function updateProps() should be in baseMixin (only if parent is dynamic container)
   *
   * @param {string} childId - ID of child, which props are being updated.
   * @param {object} newProps - Props which are being changed. It is not necessary to set all of the props.
   * @param {object} opt - Additional parameters.
   * @param {boolean} opt.shouldUpdate - If false, setState is not called.
   * @param {function} opt.setStateCallback - Callback is called after setState.
   * @returns {object} this
   */
  updateChild: function updateChild(childId, newProps, opt) {
    if (this.isDynamic()) {
      if (typeof this.updateChild_ === 'function') {
        this.updateChild_(childId, newProps, opt);
      } else {
        opt = opt || {};

        var renderedChild = this.getRenderedChildById(childId);

        if (renderedChild === null) {
          this.showError('childIdNotExists', 'updateChild', {
            mixinName: "UU5.Common.ContentMixin"
          });
        } else {
          var childIndex = renderedChild.getIndex();

          var children = this.getChildren();
          // must destroy object reference because of shouldComponentUpdate
          children = children && children.length > 0 ? children.slice() : [];
          var newChild = this.cloneChild(children[childIndex], newProps);
          children[childIndex] = this.cloneChild(children[childIndex], this.expandChildProps(newChild, childIndex));

          (opt.shouldUpdate === undefined || opt.shouldUpdate) && this.setChildren(children, opt.setStateCallback);
        }
      }
    } else {
      this.showError('dynamicOnly', 'updateChild', {
        mixinName: "UU5.Common.ContentMixin"
      });
    }

    return this;
  },

  /**
   * Replace child by tag and props on the position.
   * Only for dynamic container.
   * Can be overridden by replaceChild_ function.
   *
   * TODO: maybe function replace() should be in baseMixin (only if parent is dynamic container)
   *
   * @param {string} childId - ID of child, which props are being updated.
   * @param {object} child - Object with tag of the element and props. E.g. {tag: '...', props: {...}} or Element e.g. < ... />
   * @param {object} opt - Additional parameters.
   * @param {boolean} opt.shouldUpdate - If false, setState is not called.
   * @param {function} opt.setStateCallback - Callback is called after setState.
   * @returns {object} this
   */
  replaceChild: function replaceChild(childId, child, opt) {
    if (this.isDynamic()) {
      if (typeof this.replaceChild_ === 'function') {
        this.replaceChild_(childId, child, opt);
      } else {
        opt = opt || {};

        var renderedChild = this.getRenderedChildById(childId);

        if (renderedChild === null) {
          this.showError('childIdNotExists', 'replaceChild', {
            mixinName: "UU5.Common.ContentMixin"
          });
        } else {
          var childIndex = renderedChild.getIndex();

          var children = this.getChildren();
          // must destroy object reference because of shouldComponentUpdate
          children = children && children.length > 0 ? children.slice() : [];
          var newChild = child.tag ? this.buildChild(child.tag, child.props) : child;
          if (this.shouldChildRender(newChild)) {
            children[childIndex] = this.cloneChild(newChild, this.expandChildProps(newChild, childIndex));

            (opt.shouldUpdate === undefined || opt.shouldUpdate) && this.setChildren(children, opt.setStateCallback);
          }
        }
      }
    } else {
      this.showError('dynamicOnly', 'replaceChild', {
        mixinName: "UU5.Common.ContentMixin"
      });
    }

    return this;
  },

  /**
   * Deletes child from children list.
   * Only for dynamic container.
   * Can be overridden by deleteChild_ function.
   *
   * TODO: maybe function delete() should be in baseMixin (only if parent is dynamic container)
   *
   * @param {string} childId - ID of child, which props are being deleted.
   * @param {object} opt - Additional parameters.
   * @param {boolean} opt.shouldUpdate - If false, setState is not called.
   * @param {function} opt.setStateCallback - Callback is called after setState.
   * @returns {object} this
   */
  deleteChild: function deleteChild(childId, opt) {
    if (this.isDynamic()) {
      if (typeof this.deleteChild_ === 'function') {
        this.deleteChild_(childId, opt);
      } else {
        opt = opt || {};

        var renderedChild = this.getRenderedChildById(childId);
        if (renderedChild === null) {
          this.showError('childIdNotExists', 'deleteChild', {
            mixinName: "UU5.Common.ContentMixin"
          });
        } else {
          var childIndex = renderedChild.getIndex();

          var children = this.getChildren();
          // must destroy object reference because of shouldComponentUpdate
          children = children && children.length > 0 ? children.slice() : [];
          children.splice(childIndex, 1);

          (opt.shouldUpdate === undefined || opt.shouldUpdate) && this.setChildren(children, opt.setStateCallback);
        }
      }
    } else {
      this.showError('dynamicOnly', 'deleteChild', {
        mixinName: "UU5.Common.ContentMixin"
      });
    }

    return this;
  },

  /**
   * Deletes all children.
   * Only for dynamic container.
   * Can be overridden by clearChildren_ function.
   *
   * @param {object} opt - Additional parameters.
   * @param {boolean} opt.shouldUpdate - If false, setState is not called.
   * @param {function} opt.setStateCallback - Callback is called after setState.
   * @returns {object} this
   */
  clearChildren: function clearChildren(opt) {
    if (this.isDynamic()) {
      if (typeof this.clearChildren_ === 'function') {
        this.clearChildren_(opt);
      } else {
        opt = opt || {};
        (opt.shouldUpdate === undefined || opt.shouldUpdate) && this.setChildren([], opt.setStateCallback);
      }
    } else {
      this.showError('dynamicOnly', 'clearChildren', {
        mixinName: "UU5.Common.ContentMixin"
      });
    }

    return this;
  },

  setFilter: function setFilter(filter, setStateCallback) {
    this.setState({ filter: filter, filteredProps: this._getFilteredChildrenProps(filter) }, setStateCallback);
    return this;
  },

  resetFilter: function resetFilter(setStateCallback) {
    this.setState({ filter: null, filteredProps: null }, setStateCallback);
    return this;
  },

  setSorter: function setSorter(sorter, setStateCallback) {
    this.setState({ sorter: sorter, sortedIds: this._getSortedChildIds(sorter) }, setStateCallback);
    return this;
  },

  resetSorter: function resetSorter(setStateCallback) {
    this.setState({ sorter: null, sortedIds: null }, setStateCallback);
    return this;
  },

  setFilterAndSorter: function setFilterAndSorter(filter, sorter, setStateCallback) {
    this.setState({
      filter: filter, filteredProps: this._getFilteredChildrenProps(filter),
      sorter: sorter, sortedIds: this._getSortedChildIds(sorter)
    }, setStateCallback);

    return this;
  },

  resetFilterAndSorter: function resetFilterAndSorter(setStateCallback) {
    this.setState({
      filter: null, filteredProps: null,
      sorter: null, sortedIds: null
    }, setStateCallback);

    return this;
  },

  getFilteredSorterChildren: function getFilteredSorterChildren(children) {
    var container = this;
    var newChildren = [];

    children = children || this.getChildren();

    if (children) {
      children = Array.isArray(children) ? children : [children];
      children.forEach(function (child) {
        if (child) {
          var childId = child.props && child.props.id;
          var index = container.state.sortedIds && container.state.sortedIds.indexOf(childId);

          if (!container.state.sortedIds || index > -1) {
            var newProps = container.state.filteredProps && container.state.filteredProps[childId];

            if (!container.state.filteredProps || newProps) {
              newProps && Object.keys(newProps).length !== 0 && (child = external___amd___react___commonjs___react___commonjs2___react___root___React___default.a.cloneElement(child, tools.mergeDeep({}, child.props, newProps)));

              if (typeof index === 'number') {
                newChildren[index] = child;
              } else {
                newChildren.push(child);
              }
            }
          }
        }
      });
    }

    return newChildren;
  },

  // Mode
  setStandardMode: function setStandardMode(setStateCallback) {
    this.setState({ mode: this.getDefault('standardMode', "UU5.Common.ContentMixin") }, setStateCallback);
    return this;
  },

  setOutlineMode: function setOutlineMode(setStateCallback) {
    this.setState({ mode: this.getDefault('outlineMode', "UU5.Common.ContentMixin") }, setStateCallback);
    return this;
  },

  getMode: function getMode() {
    return this.state.mode;
  },

  isStandardMode: function isStandardMode() {
    return this.getMode() === this.getDefault('standardMode', "UU5.Common.ContentMixin");
  },

  isOutlineMode: function isOutlineMode() {
    return this.getMode() === this.getDefault('outlineMode', "UU5.Common.ContentMixin");
  },
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _getContentType: function _getContentType(content) {
    var type = null; // one of ['children','uu5json','uu5string','uu5data','string','number','array','items','bodyItem','element','bool']

    if (content === undefined || content === null) {
      // children
      type = 'children';
    } else if (typeof content === 'string') {
      var match = this.getDefault('regexpUu5', "UU5.Common.ContentMixin").exec(content);
      type = match ? match[1] : 'string';
    } else if (typeof content === 'number') {
      type = 'number';
    } else if (typeof content === 'boolean') {
      type = 'bool';
    } else if (Array.isArray(content)) {
      type = 'array';
    } else if (content && (typeof content === 'undefined' ? 'undefined' : content_mixin__typeof(content)) === 'object') {
      // bodyItem, items or node
      type = content.tag ? content.propsArray ? 'items' : 'bodyItem' : 'element';
    } else {
      this.showError('unexpectedContentType', typeof content === 'undefined' ? 'undefined' : content_mixin__typeof(content), {
        mixinName: "UU5.Common.ContentMixin",
        context: {
          content: content
        }
      });
    }

    return type;
  },

  _getFilteredChildrenProps: function _getFilteredChildrenProps(filter) {
    var filteredChildrenProps = {};

    this.eachRenderedChild(function (renderedChild, i) {
      var result = filter(renderedChild, i);
      if (result) {
        result === true && (result = {});
      } else {
        result = { hidden: true };
      }
      filteredChildrenProps[renderedChild.getId()] = result;
    });

    return filteredChildrenProps;
  },

  _getSortedChildIds: function _getSortedChildIds(sorter) {
    var sortedChildren = this.getRenderedChildren().sort(sorter);
    return sortedChildren.map(function (renderedChild) {
      return renderedChild.getId();
    });
  }
  //@@viewOff:componentSpecificHelpers
};

/* harmony default export */ var content_mixin = (ContentMixin);
// CONCATENATED MODULE: ./core/common/nesting-level-mixin.js




var NestingLevelMixin = {

  //@@viewOn:statics
  statics: {
    "UU5.Common.NestingLevelMixin": {
      requiredMixins: ["UU5.Common.BaseMixin"],
      defaults: {
        nestingLevel: 'boxCollection'
      },
      errors: {
        incorrectRequestedNestingLevel: 'Component requested nesting level %s is bigger than the biggest component available nesting level %s.',
        nestingLevelMismatch: 'Component with nesting level %s can not be nested into parent component with nesting level %s.'
      }
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    nestingLevel: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.oneOf(environment.nestingLevelList)
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      nestingLevel: null
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  getInitialState: function getInitialState() {
    // initialize
    this.registerMixin("UU5.Common.NestingLevelMixin");
    // state
    return {
      nestingLevel: this.checkNestingLevel()
    };
  },

  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    this.getNestingLevel() !== nextProps.nestingLevel && this.setState({ nestingLevel: this.checkNestingLevel() });
  },
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  hasUU5CommonNestingLevelMixin: function hasUU5CommonNestingLevelMixin() {
    return this.hasMixin("UU5.Common.NestingLevelMixin");
  },

  getNestingLevel: function getNestingLevel() {
    return this.state.nestingLevel;
  },

  getUU5CommonNestingLevelMixinProps: function getUU5CommonNestingLevelMixinProps() {
    return {
      nestingLevel: this.props.nestingLevel
    };
  },

  getUU5CommonNestingLevelMixinPropsToPass: function getUU5CommonNestingLevelMixinPropsToPass() {
    return this.getUU5CommonNestingLevelMixinProps();
  },

  getParentNestingLevel: function getParentNestingLevel(parentNestingLevelComponent) {
    var component = parentNestingLevelComponent || this.getParentByType('hasUU5CommonNestingLevelMixin');
    return component ? component.getNestingLevel() : environment.nestingLevelList[0];
  },

  getNestingLevelList: function getNestingLevelList() {
    return this.constructor.nestingLevel && [this.constructor.nestingLevel] || this.constructor.nestingLevelList || environment.nestingLevelList;
  },

  checkNestingLevel: function checkNestingLevel() {
    //step 1 - check prop nestingLevel
    var nestingLevelEnvIndex = environment.nestingLevelList.indexOf(this.props.nestingLevel);
    var nestingLevel = nestingLevelEnvIndex > -1 ? this.props.nestingLevel : null;
    //console.log("step 1 requestedNestingLevel:",nestingLevel);

    //step 2 - check nestingLevelList
    var nestingLevelList = this.getNestingLevelList();
    //console.log("step 2 requestedNestingLevel:",nestingLevel,"nestingLevelList:",nestingLevelList,"parent::",parentNestingLevelComponent);

    //step 3 - check requested nestingLevel with build in nestingLevelList
    if (nestingLevel) {
      nestingLevelEnvIndex = environment.nestingLevelList.indexOf(nestingLevel);

      //because ie11 dont know .find()
      var nestingLevelLocIndex = void 0;
      if (typeof nestingLevelList.find === 'function') {
        nestingLevelLocIndex = nestingLevelList.indexOf(nestingLevelList.find(function (nestingLevel) {
          return environment.nestingLevelList.indexOf(nestingLevel) >= nestingLevelEnvIndex;
        }));
      } else {
        for (var i = 0; i < nestingLevelList.lenght; i++) {
          var level = nestingLevelList[i];
          if (environment.nestingLevelList.indexOf(level) >= nestingLevelEnvIndex) {
            nestingLevelLocIndex = nestingLevelList.indexOf(level);
          }
        }
      }

      nestingLevelList = nestingLevelLocIndex > -1 ? nestingLevelList.slice(nestingLevelLocIndex) : nestingLevelList;
    }

    //check nestingLevel rule incorrectRequestedNestingLevel
    if (environment.nestingLevelList.indexOf(nestingLevel) > environment.nestingLevelList.indexOf(nestingLevelList[nestingLevelList.length - 1])) {
      this.showError('incorrectRequestedNestingLevel', [nestingLevel, nestingLevelList[nestingLevelList.length - 1]], {
        mixinName: "UU5.Common.NestingLevelMixin",
        context: {
          nestingLevelList: nestingLevelList
        }
      });
      nestingLevelList = [];
    }

    //console.log("step 3 requestedNestingLevel:",nestingLevel,"requestedNestingLevelList:",nestingLevelList);

    //step 4 - build calculatedNestingLevelList from nestingLevel parent if exist
    var calculatedNestingLevelIndex = 0;
    var calculatedNestingLevelList = environment.nestingLevelList;
    var parentNestingLevelComponent = void 0;
    if (!this.getOpt('nestingLevelRoot')) {
      parentNestingLevelComponent = this.getParentByType('hasUU5CommonNestingLevelMixin');
      var parentNestingLevel = this.getParentNestingLevel(parentNestingLevelComponent);
      //console.log("step 4a",parentNestingLevel);
      calculatedNestingLevelIndex = environment.nestingLevelList.indexOf(parentNestingLevel);
      if (parentNestingLevelComponent && !parentNestingLevelComponent.getOpt('nestingLevelWrapper') && parentNestingLevel.search(/Collection$/) === -1) {
        calculatedNestingLevelIndex = Math.min(environment.nestingLevelList.length - 1, calculatedNestingLevelIndex + 1);
      }
      calculatedNestingLevelList = environment.nestingLevelList.slice(calculatedNestingLevelIndex);
    }

    //console.log("step 4",calculatedNestingLevelList);

    //step 5 - find the lowest requested nestingLevel as possible if is not requested or is not requested correctly
    if (!nestingLevel) {

      //because ie11 dont know .find()
      if (typeof nestingLevelList.find === 'function') {
        nestingLevel = nestingLevelList.find(function (nestingLevel) {
          return environment.nestingLevelList.indexOf(nestingLevel) >= calculatedNestingLevelIndex;
        });
      } else {
        for (var _i = 0; _i < nestingLevelList.length; _i++) {
          var _level = nestingLevelList[_i];
          if (environment.nestingLevelList.indexOf(_level) >= calculatedNestingLevelIndex) {
            nestingLevel = _level;
            break;
          }
        }
      }

      nestingLevelEnvIndex = environment.nestingLevelList.indexOf(nestingLevel);
      //console.log("step 5",nestingLevel)
    }

    //check nestingLevel rule nestingLevelMismatch
    if (nestingLevelEnvIndex < calculatedNestingLevelIndex) {
      this.showError('nestingLevelMismatch', [nestingLevel, environment.nestingLevelList[calculatedNestingLevelIndex]], {
        mixinName: "UU5.Common.NestingLevelMixin",
        context: {
          parent: {
            tagName: parentNestingLevelComponent ? parentNestingLevelComponent.getTagName() : null,
            component: parentNestingLevelComponent
          }
        }
      });
    }

    //step 6 - find the lowest nestingLevel as possible for render into parent

    //because ie11 dont know .find()
    if (typeof nestingLevelList.find === 'function') {
      nestingLevel = nestingLevelList.find(function (nestingLevel) {
        return calculatedNestingLevelList.indexOf(nestingLevel) > -1;
      });
    } else {
      for (var _i2 = 0; _i2 < nestingLevelList.length; _i2++) {
        var _level2 = nestingLevelList[_i2];
        if (calculatedNestingLevelList.indexOf(_level2) > -1) {
          nestingLevel = _level2;
          break;
        }
      }
    }

    //console.log("step 6",this.getTagName(),nestingLevel || null);

    return nestingLevel || null;
  }
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  //@@viewOff:componentSpecificHelpers

};

/* harmony default export */ var nesting_level_mixin = (NestingLevelMixin);
// CONCATENATED MODULE: ./core/common/pure-render-mixin.js



var PureRenderMixin = {

  //@@viewOn:statics
  statics: {
    "UU5.Common.PureRenderMixin": {
      requiredMixins: ["UU5.Common.BaseMixin"]
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    pureRender: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.bool
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      pureRender: false
    };
  },

  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  shouldComponentUpdate: function shouldComponentUpdate(nextProps, nextState) {
    var shouldUpdate = void 0;
    if (!this.props.pureRender) {
      shouldUpdate = true;
    } else if (typeof this.shouldComponentUpdate_ === 'function') {
      shouldUpdate = this.shouldComponentUpdate_(nextProps, nextState);
    } else {
      shouldUpdate = this.shouldRender(nextProps, nextState);
    }
    return shouldUpdate;
  },

  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  hasUU5CommonPureRenderMixin: function hasUU5CommonPureRenderMixin() {
    return this.hasMixin("UU5.Common.PureRenderMixin");
  },
  getUU5CommonPureRenderMixinProps: function getUU5CommonPureRenderMixinProps() {
    return {
      pureRender: this.props.pureRender
    };
  },
  getUU5CommonPureRenderMixinPropsToPass: function getUU5CommonPureRenderMixinPropsToPass() {
    return this.getUU5CommonPureRenderMixinProps();
  }
};

/* harmony default export */ var pure_render_mixin = (PureRenderMixin);
// CONCATENATED MODULE: ./core/common/div.js










var Div = create_react_class({
  displayName: 'Div',


  //@@viewOn:mixins
  mixins: [base_mixin, elementary_mixin, content_mixin, nesting_level_mixin, pure_render_mixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: common_ns.name("Div"),
    classNames: {
      main: common_ns.css("div")
    },
    nestingLevelList: environment.getNestingLevelList('bigBoxCollection', 'smallBox')
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render: function render() {
    return this.getNestingLevel() ? external___amd___react___commonjs___react___commonjs2___react___root___React___default.a.createElement('div', this.getMainAttrs(), this.getChildren(), this.getDisabledCover()) : null;
  }
  //@@viewOff:render
});

/* harmony default export */ var div = (Div);
// EXTERNAL MODULE: ./core/common/error.less
var common_error = __webpack_require__(23);
var error_default = /*#__PURE__*/__webpack_require__.n(common_error);

// CONCATENATED MODULE: ./core/common/error.js














var error_Error = create_react_class({
  displayName: 'Error',


  //@@viewOn:mixins
  mixins: [base_mixin, elementary_mixin, nesting_level_mixin, content_mixin, pure_render_mixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: common_ns.name("Error"),
    nestingLevelList: environment.getNestingLevelList('smallBox', 'inline'),
    classNames: {
      main: common_ns.css("error"),
      silent: common_ns.css("error-silent"),
      nestingLevelSmallBox: common_ns.css("error-small-box"),
      nestingLevelInline: common_ns.css("error-inline"),
      icon: common_ns.css("error-icon"),
      mainWrapper: common_ns.css("error-main-wrapper"),
      iconWrapper: common_ns.css("error-icon-wrapper"),
      content: common_ns.css("error-content"),
      preWrapper: common_ns.css("error-pre-wrapper"),
      pre: common_ns.css("error-pre"),
      errorDetails: common_ns.css("error-details"),
      errorDetailsButton: common_ns.css("error-details-button"),
      errorDetailsBody: common_ns.css("error-details-body"),
      errorInfo: common_ns.css("error-info")
    },
    defaults: {
      content: 'Error'
    },
    opt: {
      nestingLevelWrapper: true
    },
    lsi: function lsi() {
      return environment.Lsi.Common.error;
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    errorData: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.object,
    errorDataSpace: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.number, // TODO: set deprecated
    error: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.shape({
      stack: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.string,
      name: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.string,
      message: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.string
    }),
    silent: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.bool,
    inline: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.bool,
    moreInfo: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.bool,
    errorInfo: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.any // any - contact info link (ex. link to helpdesk)
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      errorData: null,
      errorDataSpace: null, // TODO: set deprecated
      error: null,
      silent: false,
      inline: false,
      moreInfo: false,
      errorInfo: null
    };
  },

  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  getInitialState: function getInitialState() {
    return {
      errorDetails: false
    };
  },


  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _getMainAttrs: function _getMainAttrs() {
    var attrs = this.getMainAttrs();

    switch (this.props.inline ? "inline" : this.getNestingLevel()) {
      case 'inline':
        attrs.className += ' ' + this.getClassName('nestingLevelInline');
        break;
      default:
        attrs.className += ' ' + this.getClassName('nestingLevelSmallBox');
    }

    if (this.props.silent) {
      attrs.className += ' ' + this.getClassName('silent');
    }

    return attrs;
  },
  _getContent: function _getContent() {
    var message = this.props.content || this.props.children || this.getDefault().content;
    var errorData = void 0;

    if (this.props.errorData && !this.props.moreInfo) {
      errorData = external___amd___react___commonjs___react___commonjs2___react___root___React___default.a.createElement(
        'div',
        { className: this.getClassName("preWrapper") },
        external___amd___react___commonjs___react___commonjs2___react___root___React___default.a.createElement(
          'pre',
          { key: 'pre', className: this.getClassName("pre") },
          JSON.stringify(this.props.errorData, null, 2)
        )
      );
    }

    return errorData ? [message, errorData] : message;
  },
  _getMoreInfoContent: function _getMoreInfoContent(message) {
    var content = this._getErrorDetailContent(message);
    var className = this.getClassName("errorDetails");
    this.props.silent && (className += ' ' + this.getClassName("silent"));

    return external___amd___react___commonjs___react___commonjs2___react___root___React___default.a.createElement(
      'div',
      { className: className, key: 'errorDetails' },
      external___amd___react___commonjs___react___commonjs2___react___root___React___default.a.createElement(
        'a',
        { className: this.getClassName("errorDetailsButton"), onClick: this._errorDetailsToggle },
        this.getLSIComponent(this.state.errorDetails ? 'hideErrorDetails' : 'showErrorDetails'),
        this.state.errorDetails ? external___amd___react___commonjs___react___commonjs2___react___root___React___default.a.createElement('span', { className: "mdi mdi-menu-up " + this.getClassName("icon") }) : external___amd___react___commonjs___react___commonjs2___react___root___React___default.a.createElement('span', { className: "mdi mdi-menu-down " + this.getClassName("icon") })
      ),
      external___amd___react___commonjs___react___commonjs2___react___root___React___default.a.createElement(
        'div',
        { className: this.getClassName("errorDetailsBody"),
          style: { display: this.state.errorDetails ? 'block' : 'none' }
        },
        external___amd___react___commonjs___react___commonjs2___react___root___React___default.a.createElement(div, {
          className: this.getClassName("errorInfo"),
          style: { display: this.props.errorInfo ? 'block' : 'none' },
          content: this.props.errorInfo
        }),
        external___amd___react___commonjs___react___commonjs2___react___root___React___default.a.createElement(
          'div',
          { className: this.getClassName("preWrapper") },
          external___amd___react___commonjs___react___commonjs2___react___root___React___default.a.createElement(
            'pre',
            { className: this.getClassName("pre") },
            JSON.stringify(content, null, 2)
          )
        )
      )
    );
  },
  _getErrorDetailContent: function _getErrorDetailContent(message) {
    var session = environment.getSession();
    var navigator = window.navigator || {};

    var errorMessage = message.toString();
    this.props.error && this.props.error.message && (errorMessage = this.props.error.message);

    var stackTrace = this.props.error ? this.props.error.stack : new window.Error().stack;

    return {
      message: errorMessage,
      data: this.props.errorData,
      stackTrace: stackTrace.split('\n'),
      uuIdentity: session ? session.uuIdentity : null,
      url: window.location.href,
      time: new Date().toISOString(),
      navigator: {
        appCodeName: navigator.appCodeName,
        appName: navigator.appName,
        appVersion: navigator.appVersion,
        connection: navigator.connection,
        cookieEnabled: navigator.cookieEnabled,
        doNotTrack: navigator.doNotTrack,
        hardwareConcurrency: navigator.hardwareConcurrency,
        language: navigator.language,
        languages: navigator.languages,
        maxTouchPoints: navigator.maxTouchPoints,
        onLine: navigator.onLine,
        platform: navigator.platform,
        product: navigator.product,
        productSub: navigator.productSub,
        userAgent: navigator.userAgent,
        vendor: navigator.vendor,
        vendorSub: navigator.vendorSub
      },
      libs: this._getRuntimeLibraries()
    };
  },
  _getRuntimeLibraries: function _getRuntimeLibraries() {
    var libraries = {};
    libraries[environment.name] = environment.version;

    var runtimeLibraries = environment.getRuntimeLibraries();
    Object.keys(runtimeLibraries).forEach(function (key) {
      libraries[key] = runtimeLibraries[key].version;
    });

    return libraries;
  },
  _errorDetailsToggle: function _errorDetailsToggle() {
    this.setState(function (state) {
      return { errorDetails: !state.errorDetails };
    });
    return this;
  },

  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render: function render() {
    var component = void 0;
    switch (this.props.inline ? "inline" : this.getNestingLevel()) {
      case 'smallBox':
        component = external___amd___react___commonjs___react___commonjs2___react___root___React___default.a.createElement(
          'div',
          this._getMainAttrs(),
          external___amd___react___commonjs___react___commonjs2___react___root___React___default.a.createElement(
            'div',
            { className: this.getClassName("mainWrapper") },
            external___amd___react___commonjs___react___commonjs2___react___root___React___default.a.createElement(
              'div',
              { className: this.getClassName("iconWrapper") },
              external___amd___react___commonjs___react___commonjs2___react___root___React___default.a.createElement('span', { className: "mdi mdi-alert-circle " + this.getClassName("icon") })
            ),
            external___amd___react___commonjs___react___commonjs2___react___root___React___default.a.createElement(
              'div',
              { className: this.getClassName().content },
              this._getContent()
            )
          ),
          this.props.moreInfo && this._getMoreInfoContent(this.props.content || this.props.children || this.getDefault().content),
          this.getDisabledCover()
        );
        break;
      case 'inline':
        component = external___amd___react___commonjs___react___commonjs2___react___root___React___default.a.createElement(
          'span',
          this._getMainAttrs(),
          this._getContent(),
          this.getDisabledCover()
        );
        break;
      default:
        component = null;
    }

    return component;
  }
  //@@viewOff:render
});

/* harmony default export */ var core_common_error = (error_Error);
// EXTERNAL MODULE: ./core/common/not-found-tag.less
var not_found_tag = __webpack_require__(25);
var not_found_tag_default = /*#__PURE__*/__webpack_require__.n(not_found_tag);

// CONCATENATED MODULE: ./core/common/not-found-tag.js
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };












var NotFoundTag = create_react_class({
  displayName: 'NotFoundTag',


  //@@viewOn:mixins
  mixins: [base_mixin, elementary_mixin, pure_render_mixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: common_ns.name("NotFoundTag"),
    defaults: {
      body: 'Tag not found: '
    },
    classNames: {
      main: common_ns.css("not-found-tag")
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    tagName: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.string
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      tagName: null
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render: function render() {
    var value = this.getDefault().body;
    this.props.tagName && (value += ' ' + this.props.tagName);
    return external___amd___react___commonjs___react___commonjs2___react___root___React___default.a.createElement(
      core_common_error,
      _extends({}, this.getMainPropsToPass(), { id: this.props.id }),
      value
    );
  }
  //@@viewOff:render
});

/* harmony default export */ var common_not_found_tag = (NotFoundTag);
// CONCATENATED MODULE: ./core/common/session-mixin.js




var SessionMixin = {

  //@@viewOn:statics
  statics: {
    "UU5.Common.SessionMixin": {
      requiredMixins: ["UU5.Common.BaseMixin"],
      errors: {
        sessionNotFound: 'Session has to be set.'
      }
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    session: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.object
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      session: null
    };
  },

  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  getInitialState: function getInitialState() {
    // initialize
    this.registerMixin("UU5.Common.SessionMixin");
    return null;
  },

  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  hasUU5CommonSessionMixin: function hasUU5CommonSessionMixin() {
    return this.hasMixin("UU5.Common.SessionMixin");
  },
  getUU5CommonSessionMixinProps: function getUU5CommonSessionMixinProps() {
    return {
      session: this.props.session
    };
  },
  getUU5CommonSessionMixinPropsToPass: function getUU5CommonSessionMixinPropsToPass() {
    return this.getUU5CommonSessionMixinProps();
  },
  getSession: function getSession() {
    var session = this.props.session || environment.getSession();
    !session && this.showError('sessionNotFound', null, { mixinName: "UU5.Common.SessionMixin" });
    return session;
  },
  login: function login() {
    var session = this.getSession();
    session && session.login();
    return this;
  },
  logout: function logout() {
    var session = this.getSession();
    session && session.logout().catch(function (e) {
      // TODO
    });
    return this;
  }
};

/* harmony default export */ var session_mixin = (SessionMixin);
// CONCATENATED MODULE: ./core/common/identity-mixin.js
var identity_mixin__extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };






var AUTH = 'authenticated';
var NOT_AUTH = 'notAuthenticated';
var PENDING = 'pending';

var IdentityMixin = {

  //@@viewOn:mixins
  mixins: [session_mixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    "UU5.Common.IdentityMixin": {
      requiredMixins: ["UU5.Common.BaseMixin"],
      lsi: {
        login: {
          cs: 'Uživatel je odhlášen...',
          en: 'User is logged out...'
        }
      }
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  //@@viewOff:propTypess

  //@@viewOn:getDefaultProps
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  getInitialState: function getInitialState() {
    // initialize
    this.registerMixin("UU5.Common.IdentityMixin");

    var identityState = {
      identity: null,
      identityFeedback: PENDING
    };

    var session = this.props.session || environment.getSession();
    if (session && session.initComplete) {
      identityState.identity = session.getIdentity();
      identityState.identityFeedback = session.isAuthenticated() ? AUTH : NOT_AUTH;
    }

    // state
    return identityState;
  },
  componentDidMount: function componentDidMount() {
    var _this = this;

    var session = this.props.session || environment.getSession();
    if (session) {
      if (!session.initComplete) {
        session.initPromise.then(function () {
          !_this._umnount && _this._onChangeIdentity();
          window.UU5.Environment.EventListener.addIdentityChangeListener(session, _this.getId(), _this._onChangeIdentity);
          //session.addIdentityChangeListener(this._onChangeIdentity);
        });
      } else {
        window.UU5.Environment.EventListener.addIdentityChangeListener(session, this.getId(), this._onChangeIdentity);
        //session.addIdentityChangeListener(this._onChangeIdentity);
      }
    }
  },
  componentWillUnmount: function componentWillUnmount() {
    this._umnount = true;
    var session = this.getSession();
    session && window.UU5.Environment.EventListener.removeIdentityChangeListener(session, this.getId());
    //session && session.removeIdentityChangeListener(this._onChangeIdentity);
  },

  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  hasUU5CommonIdentityMixin: function hasUU5CommonIdentityMixin() {
    return this.hasMixin("UU5.Common.IdentityMixin");
  },
  getUU5CommonIdentityMixinProps: function getUU5CommonIdentityMixinProps() {
    return {};
  },
  getUU5CommonIdentityMixinPropsToPass: function getUU5CommonIdentityMixinPropsToPass() {
    return this.getUU5CommonIdentityMixinProps();
  },
  isAuthenticated: function isAuthenticated() {
    return this.state.identityFeedback === AUTH;
  },
  isNotAuthenticated: function isNotAuthenticated() {
    return this.state.identityFeedback === NOT_AUTH;
  },
  isPending: function isPending() {
    return this.state.identityFeedback === PENDING;
  },
  getIdentityFeedback: function getIdentityFeedback() {
    return this.state.identityFeedback;
  },
  getIdentity: function getIdentity() {
    return this.state.identity;
  },
  setAuthenticated: function setAuthenticated(isAuth, setStateCallback) {
    this.setState({ identityFeedback: isAuth ? AUTH : NOT_AUTH }, setStateCallback);
    return this;
  },
  changeIdentity: function changeIdentity(setStateCallback) {
    var session = this.getSession();
    session && this.setState({
      identity: session.getIdentity(),
      identityFeedback: this._setAuthenticated(session)
    }, setStateCallback);
    return this;
  },
  getAuthenticatedChild: function getAuthenticatedChild(getChild, opt) {
    var result = void 0;

    if (!this.isAuthenticated()) {
      result = external___amd___react___commonjs___react___commonjs2___react___root___React___default.a.createElement(core_common_error, identity_mixin__extends({}, this.getMainPropsToPass(), {
        silent: opt.silent,
        inline: opt.inline,
        content: opt.message || this.getLsiComponent('login', "UU5.Common.IdentityMixin")
      }));
    } else if (typeof getChild === 'function') {
      result = getChild();
    }

    return result;
  },

  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _setAuthenticated: function _setAuthenticated(session) {
    var result = PENDING;
    if (session) {
      result = session.isAuthenticated() ? AUTH : NOT_AUTH;
    }

    return result;
  },
  _onChangeIdentity: function _onChangeIdentity() {
    var session = this.getSession();
    if (session) {
      if (typeof this.onChangeIdentity_ === 'function') {
        this.onChangeIdentity_(session);
      } else {
        this.changeIdentity();
      }
    }
    return this;
  }
  //@@viewOff:componentSpecificHelpers

};

/* harmony default export */ var identity_mixin = (IdentityMixin);
// CONCATENATED MODULE: ./core/common/level-mixin.js



var LevelMixin = {

  //@@viewOn:statics
  statics: {
    "UU5.Common.LevelMixin": {
      requiredMixins: ["UU5.Common.BaseMixin"],
      defaults: {
        minLevel: 0,
        maxLevel: 6
      },
      warnings: {
        levelMismatch: 'Component level %s is lower than parent level %s.',
        levelMax: 'Maximum level of component is 6 but is set %d.'
      }
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    level: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.oneOf(['0', '1', '2', '3', '4', '5', '6', 0, 1, 2, 3, 4, 5, 6])
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      level: null
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  getInitialState: function getInitialState() {
    // initialize
    this.registerMixin("UU5.Common.LevelMixin");
    // state
    return {
      level: this.checkLevel()
    };
  },

  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    this.getLevel() !== nextProps.level && this.setState({ level: this.checkLevel() });
  },
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  hasUU5CommonLevelMixin: function hasUU5CommonLevelMixin() {
    return this.hasMixin("UU5.Common.LevelMixin");
  },

  getLevel: function getLevel() {
    return this.state.level;
  },

  getUU5CommonLevelMixinProps: function getUU5CommonLevelMixinProps() {
    return {
      level: this.props.level
    };
  },

  getUU5CommonLevelMixinPropsToPass: function getUU5CommonLevelMixinPropsToPass() {
    return this.getUU5CommonLevelMixinProps();
  },

  shouldIncreaseLevel: function shouldIncreaseLevel(parentLevelComponent) {
    return !parentLevelComponent || parentLevelComponent && parentLevelComponent.getOpt('dummyLevel') ? false : this.getOpt('increaseLevel') || this.getHeader && this.getHeader() || this.getFooter && this.getFooter();
  },

  checkLevel: function checkLevel() {
    var level = typeof this.props.level === 'string' ? parseInt(this.props.level) : this.props.level;
    var maxLevel = this.getDefault('maxLevel', "UU5.Common.LevelMixin");
    var parentLevelComponent = this.getParentByType('hasUU5CommonLevelMixin');
    var calculatedLevel = parentLevelComponent ? parentLevelComponent.getLevel() : this.getDefault('minLevel', "UU5.Common.LevelMixin");
    this.shouldIncreaseLevel(parentLevelComponent) && calculatedLevel++;
    level = level || calculatedLevel;

    //check level hierarchy
    if (level < calculatedLevel) {
      this.showWarning('levelMismatch', [level, calculatedLevel], {
        mixinName: "UU5.Common.LevelMixin",
        context: {
          parent: {
            tagName: parentLevelComponent ? parentLevelComponent.getTagName() : null,
            component: parentLevelComponent
          }
        }
      });
    }

    //check maxLevel
    if (level > maxLevel) {
      this.showWarning('levelMax', level, {
        mixinName: "UU5.Common.LevelMixin",
        context: {
          parent: {
            tagName: parentLevelComponent && parentLevelComponent.getTagName(),
            component: parentLevelComponent
          }
        }
      });
      level = maxLevel;
    }
    return level;
  }
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  //@@viewOff:componentSpecificHelpers

};

/* harmony default export */ var level_mixin = (LevelMixin);
// EXTERNAL MODULE: ./core/common/color-schema.less
var color_schema = __webpack_require__(27);
var color_schema_default = /*#__PURE__*/__webpack_require__.n(color_schema);

// CONCATENATED MODULE: ./core/common/color-schema-mixin.js



// FIXME MODULES Commented out due to dependencies "common => forms".

// import './color-schema/default.less';
// import './color-schema/yellow.less';
// import './color-schema/yellow-rich.less';
// import './color-schema/orange.less';
// import './color-schema/orange-rich.less';
// import './color-schema/pink.less';
// import './color-schema/pink-rich.less';
// import './color-schema/red.less';
// import './color-schema/red-rich.less';
// import './color-schema/purple.less';
// import './color-schema/purple-rich.less';
// import './color-schema/cyan.less';
// import './color-schema/cyan-rich.less';
// import './color-schema/blue.less';
// import './color-schema/blue-rich.less';
// import './color-schema/green.less';
// import './color-schema/green-rich.less';
// import './color-schema/brown.less';
// import './color-schema/brown-rich.less';
// import './color-schema/grey.less';
// import './color-schema/grey-rich.less';

var ColorSchemaMixin = {

  //@@viewOn:statics
  statics: {
    "UU5.Common.ColorSchemaMixin": {
      classNames: {
        main: 'getMainClassUU5CommonColorSchemaMixin'
      },
      defaults: {
        mainClassPrefix: 'color-schema-'
      }
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    // must be function because of dynamic adding color into colorSchema
    colorSchema: function colorSchema(props, propName, componentName) {
      if (props[propName] && !environment.colorSchemaMap[props[propName]]) {
        return new Error('Invalid prop `' + propName + '` with value `' + props[propName] + '` supplied to' + ' `' + componentName + '`. Validation failed.');
      }
    }
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      colorSchema: null
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  getInitialState: function getInitialState() {
    this.registerMixin("UU5.Common.ColorSchemaMixin");

    // in state, so every component can change color dynamically
    return {};
  },
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  hasUU5CommonColorSchemaMixin: function hasUU5CommonColorSchemaMixin() {
    return this.hasMixin("UU5.Common.ColorSchemaMixin");
  },

  getColorSchema: function getColorSchema() {
    var colorSchema = this.props.colorSchema || (this.getDefault() ? this.getDefault().colorSchema : null);
    return environment.getColorSchema(colorSchema);
  },

  getUU5CommonColorSchemaMixinProps: function getUU5CommonColorSchemaMixinProps() {
    return {
      colorSchema: this.props.colorSchema
    };
  },

  getUU5CommonColorSchemaMixinPropsToPass: function getUU5CommonColorSchemaMixinPropsToPass() {
    return {};
  },

  getMainClassUU5CommonColorSchemaMixin: function getMainClassUU5CommonColorSchemaMixin() {
    var colorSchema = this.getColorSchema();
    var result = '';
    if (colorSchema) {
      result = this.getDefault('mainClassPrefix', "UU5.Common.ColorSchemaMixin") + colorSchema;

      if (this.props.colorSchema !== colorSchema) {
        result += ' ' + this.getDefault('mainClassPrefix', "UU5.Common.ColorSchemaMixin") + this.props.colorSchema;
      }
    }

    return result;
  }
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  //@@viewOff:componentSpecificHelpers
};

/* harmony default export */ var color_schema_mixin = (ColorSchemaMixin);
// CONCATENATED MODULE: ./core/common/section-mixin.js
var section_mixin__typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };







var SectionMixin = {

  //@@viewOn:mixins
  mixins: [content_mixin, level_mixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    "UU5.Common.SectionMixin": {
      requiredMixins: ["UU5.Common.BaseMixin", "UU5.Common.ContentMixin", "UU5.Common.LevelMixin"],
      defaults: {
        headerTag: 'UU5.Bricks.Header',
        footerTag: 'UU5.Bricks.Footer',
        regexpUu5Json: /(^<uu5json\/>)/
      }
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    header: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.oneOfType([
    // content body:[{tag:'',props:{}},{tag:'',props:{}},...]
    external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.arrayOf(external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.shape({
      tag: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.oneOfType([external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.string, external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.element]),
      props: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.object
    })),
    // content bodyItem:{tag:'',props{}}
    external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.shape({
      tag: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.oneOfType([external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.string, external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.element]),
      props: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.arrayOf(external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.object)
    }),
    // content items:{tag:'',propsArray:[{},{},{},...]}
    external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.shape({
      tag: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.oneOfType([external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.string, external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.element]),
      propsArray: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.arrayOf(external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.object)
    }),
    // content node
    external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.node,
    // element
    external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.shape({
      element: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.oneOfType([external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.element, external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.shape({
        tag: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.oneOfType([external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.string, external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.element]),
        props: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.object
      })])
    })]),
    footer: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.oneOfType([
    // content body:[{tag:'',props:{}},{tag:'',props:{}},...]
    external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.arrayOf(external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.shape({
      tag: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.oneOfType([external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.string, external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.element]),
      props: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.object
    })),
    // content bodyItem:{tag:'',props{}}
    external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.shape({
      tag: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.oneOfType([external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.string, external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.element]),
      props: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.arrayOf(external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.object)
    }),
    // content items:{tag:'',propsArray:[{},{},{},...]}
    external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.shape({
      tag: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.oneOfType([external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.string, external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.element]),
      propsArray: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.arrayOf(external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.object)
    }),
    // content node
    external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.node,
    // element
    external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.shape({
      element: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.oneOfType([external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.element, external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.shape({
        tag: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.oneOfType([external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.string, external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.element]),
        props: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.object
      })])
    })]),
    underline: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.bool
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      header: null,
      footer: null,
      underline: false
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  getInitialState: function getInitialState() {
    // initialize
    this.registerMixin("UU5.Common.SectionMixin");
    this.renderedHeaderChild = null; // renderedChild
    this.renderedFooterChild = null; // renderedChild
    // state
    return null;
  },
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  hasUU5CommonSectionMixin: function hasUU5CommonSectionMixin() {
    return this.hasMixin("UU5.Common.SectionMixin");
  },

  getHeader: function getHeader() {
    return typeof this.getHeader_ === 'function' ? this.getHeader_() : this.props.header;
  },

  getFooter: function getFooter() {
    return typeof this.getFooter_ === 'function' ? this.getFooter_() : this.props.footer;
  },

  getHeaderType: function getHeaderType(headerContent) {
    var type = null; // one of ['contentOfStandardHeader','headerElement','headerBodyItem']
    if (headerContent || headerContent === "") {
      if (section_mixin__typeof(headerContent.element) === 'object') {
        type = headerContent.element.tag ? 'headerBodyItem' : 'headerElement';
      } else if (typeof headerContent === 'string') {
        var match = this.getDefault('regexpUu5Json', "UU5.Common.SectionMixin").exec(headerContent);
        type = match ? 'uu5JSON' : 'contentOfStandardHeader';
      } else {
        type = 'contentOfStandardHeader';
      }
    }
    return type;
  },

  getFooterType: function getFooterType(footerContent) {
    var type = null; // one of ['contentOfStandardFooter','footerElement','footerBodyItem']
    if (footerContent || footerContent === "") {
      if (section_mixin__typeof(footerContent.element) === 'object') {
        type = footerContent.element.tag ? 'footerBodyItem' : 'footerElement';
      } else if (typeof footerContent === 'string') {
        var match = this.getDefault('regexpUu5Json', "UU5.Common.SectionMixin").exec(footerContent);
        type = match ? 'uu5JSON' : 'contentOfStandardFooter';
      } else {
        type = 'contentOfStandardFooter';
      }
    }
    return type;
  },

  getUU5CommonSectionMixinProps: function getUU5CommonSectionMixinProps() {
    return {
      header: this.getHeader(),
      footer: this.getFooter()
    };
  },

  getUU5CommonSectionMixinPropsToPass: function getUU5CommonSectionMixinPropsToPass() {
    return tools.mergeDeep({}, this.getUU5CommonSectionMixinProps(), this.getUU5CommonContentMixinPropsToPass(), this.getUU5CommonLevelMixinPropsToPass());
  },

  registerRenderedHeaderChild: function registerRenderedHeaderChild(renderedHeaderChild) {
    if (renderedHeaderChild.hasUU5CommonBaseMixin) {
      this.renderedHeaderChild = renderedHeaderChild;
    }
    return this;
  },

  registerRenderedFooterChild: function registerRenderedFooterChild(renderedFooterChild) {
    if (renderedFooterChild.hasUU5CommonBaseMixin) {
      this.renderedFooterChild = renderedFooterChild;
    }
    return this;
  },

  expandHeaderProps: function expandHeaderProps(prevHeaderChild) {
    var newHeaderChildProps = prevHeaderChild.props;
    newHeaderChildProps = tools.mergeDeep({}, newHeaderChildProps);
    newHeaderChildProps.parent = this;
    newHeaderChildProps.id = newHeaderChildProps.id || this.getId() + '-header';
    newHeaderChildProps.underline = newHeaderChildProps.underline || this.props.underline;

    if (typeof this.expandHeaderProps_ === 'function') {
      var tempHeaderChild = this.cloneChild(prevHeaderChild, newHeaderChildProps);
      newHeaderChildProps = this.expandHeaderProps_(tempHeaderChild);
    }

    newHeaderChildProps.key = newHeaderChildProps.id;

    newHeaderChildProps.ref = function (renderedChild) {
      renderedChild && this.registerRenderedHeaderChild(renderedChild);
    }.bind(this);

    return newHeaderChildProps;
  },

  expandFooterProps: function expandFooterProps(prevFooterChild) {
    var newFooterChildProps = prevFooterChild.props;
    newFooterChildProps = tools.mergeDeep({}, newFooterChildProps);
    newFooterChildProps.parent = this;
    newFooterChildProps.id = newFooterChildProps.id || this.getId() + '-footer';

    if (typeof this.expandFooterProps_ === 'function') {
      var tempFooterChild = this.cloneChild(prevFooterChild, newFooterChildProps);
      newFooterChildProps = this.expandFooterProps_(tempFooterChild);
    }

    newFooterChildProps.key = newFooterChildProps.id;

    newFooterChildProps.ref = function (renderedChild) {
      renderedChild && this.registerRenderedFooterChild(renderedChild);
    }.bind(this);

    return newFooterChildProps;
  },

  buildHeaderChild: function buildHeaderChild(header) {
    header = header || this.getHeader();

    var headerChild = null;

    if (typeof this.buildHeaderChild_ === 'function') {
      headerChild = this.buildHeaderChild_(header);
    } else {

      var headerValue = header;
      var headerType = this.getHeaderType(headerValue);

      if (headerType === 'uu5JSON') {
        headerValue = tools.parseFromUu5JSON(headerValue);
        headerType = this.getHeaderType(headerValue);
      }

      switch (headerType) {
        case 'headerBodyItem':
          headerChild = this.buildChild(headerValue.element.tag, headerValue.element.props);
          headerChild = this.cloneChild(headerChild, this.expandHeaderProps(headerChild));
          break;
        case 'headerElement':
          headerChild = headerValue.element;
          headerChild = this.cloneChild(headerChild, this.expandHeaderProps(headerChild));
          break;
        case 'contentOfStandardHeader':
          headerChild = this.buildChild(this.getDefault('headerTag', "UU5.Common.SectionMixin"), { content: headerValue });
          headerChild = this.cloneChild(headerChild, this.expandHeaderProps(headerChild));
          break;
        default:
        // there is no header
      }
    }
    return headerChild;
  },

  buildFooterChild: function buildFooterChild(footer) {
    footer = footer || this.getFooter();

    var footerChild = null;

    if (typeof this.buildFooterChild_ === 'function') {
      footerChild = this.buildFooterChild_(footer);
    } else {

      var footerValue = footer;
      var footerType = this.getFooterType(footerValue);

      if (footerType === 'uu5JSON') {
        footerValue = tools.parseFromUu5JSON(footerValue);
        footerType = this.getFooterType(footerValue);
      }

      switch (footerType) {
        case 'footerBodyItem':
          footerChild = this.buildChild(footerValue.element.tag, footerValue.element.props);
          footerChild = this.cloneChild(footerChild, this.expandFooterProps(footerChild));
          break;
        case 'footerElement':
          footerChild = footerValue.element;
          footerChild = this.cloneChild(footerChild, this.expandFooterProps(footerChild));
          break;
        case 'contentOfStandardFooter':
          footerChild = this.buildChild(this.getDefault('footerTag', "UU5.Common.SectionMixin"), { content: footerValue });
          footerChild = this.cloneChild(footerChild, this.expandFooterProps(footerChild));
          break;
        default:
        // there is no footer
      }
    }
    return footerChild;
  },

  getHeaderChild: function getHeaderChild() {
    return this.buildHeaderChild();
  },

  getFooterChild: function getFooterChild() {
    return this.buildFooterChild();
  },

  getRenderedHeaderChild: function getRenderedHeaderChild() {
    return this.renderedHeaderChild;
  },

  getRenderedFooterChild: function getRenderedFooterChild() {
    return this.renderedFooterChild;
  }
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  //@@viewOff:componentSpecificHelpers

};

/* harmony default export */ var section_mixin = (SectionMixin);
// CONCATENATED MODULE: ./core/common/ccr-reader-mixin.js


var CcrReaderMixin = {

  //@@viewOn:statics
  statics: {
    "UU5.Common.CcrReaderMixin": {
      requiredMixins: ["UU5.Common.BaseMixin"],
      errors: {
        keyNotRegistered: 'Component with key %s is not registered.'
      }
    }
  },
  //@@viewOff:statics

  //@@viewOn:standardComponentLifeCycle
  getInitialState: function getInitialState() {
    // initialize
    this.registerMixin("UU5.Common.CcrReaderMixin");
    // state
    return null;
  },
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  hasUU5CommonCcrReaderMixin: function hasUU5CommonCcrReaderMixin() {
    return this.hasMixin("UU5.Common.CcrReaderMixin");
  },

  getUU5CommonCcrReaderMixinProps: function getUU5CommonCcrReaderMixinProps() {
    return {};
  },

  getUU5CommonCcrReaderMixinPropsToPass: function getUU5CommonCcrReaderMixinPropsToPass() {
    return this.getUU5CommonCcrReaderMixinProps();
  },

  getCcrComponentByKey: function getCcrComponentByKey(key) {
    return this.getCcrByKeyRegister()[key] || null;
  },

  isCcrRegisteredByKey: function isCcrRegisteredByKey(key) {
    return !!this.getCcrByKeyRegister()[key];
  },

  getCcrByKeyRegister: function getCcrByKeyRegister() {
    return environment.ccr.byKey;
  }
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  //@@viewOff:componentSpecificHelpers
};

/* harmony default export */ var ccr_reader_mixin = (CcrReaderMixin);
// CONCATENATED MODULE: ./core/common/ccr-writer-mixin.js





var CcrWriterMixin = {

  //@@viewOn:mixins
  mixins: [ccr_reader_mixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    "UU5.Common.CcrWriterMixin": {
      requiredMixins: ["UU5.Common.CcrReaderMixin"],
      warnings: {
        keyNotRegistered: 'Component with key %s was not registered.'
      },
      errors: {
        alreadyRegistered: 'Component with ccr key %s is already registered.',
        unregisterNotThis: 'Component with ccr key %s is not this component, cannot be unregistered.'
      }
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    ccrKey: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.string
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      ccrKey: null
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  getInitialState: function getInitialState() {
    // initialize
    this.registerMixin("UU5.Common.CcrWriterMixin");
    // state
    return null;
  },

  componentWillMount: function componentWillMount() {
    this.getCcrKey() && this._registerToCcrByKey(this.getCcrKey());
  },

  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    if (this.getCcrKey(nextProps) && this.getCcrKey(nextProps) !== this.getCcrKey()) {
      this.getCcrKey() && this.isCcrRegisteredByKey(this.getCcrKey()) && this._unregisterFromCcrByKey(this.getCcrKey());
      this._registerToCcrByKey(this.getCcrKey(nextProps));
    }
  },

  componentWillUnmount: function componentWillUnmount() {
    this.getCcrKey() && this.isCcrRegisteredByKey(this.getCcrKey()) && this._unregisterFromCcrByKey(this.getCcrKey());
  },
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  hasUU5CommonCcrWriterMixin: function hasUU5CommonCcrWriterMixin() {
    return this.hasMixin("UU5.Common.CcrWriterMixin");
  },

  getUU5CommonCcrWriterMixinProps: function getUU5CommonCcrWriterMixinProps() {
    return {
      ccrKey: this.getCcrKey()
    };
  },

  getUU5CommonCcrWriterMixinPropsToPass: function getUU5CommonCcrWriterMixinPropsToPass() {
    return {};
  },

  getCcrKey: function getCcrKey(props) {
    props = props || this.props;
    return props.ccrKey || this.getOpt('ccrKey') || null;
  },
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _registerToCcrByKey: function _registerToCcrByKey(key) {
    var component = this.getCcrByKeyRegister()[key];
    if (environment.ccrStrict && component && component !== this) {
      this.showError('alreadyRegistered', key, {
        mixinName: "UU5.Common.CcrWriterMixin",
        context: {
          registeredComponent: {
            tagName: component.getTagName(),
            id: component.getId(),
            component: component
          }
        }
      });
    }
    this.getCcrByKeyRegister()[key] = this;
    return this;
  },

  _unregisterFromCcrByKey: function _unregisterFromCcrByKey(key) {
    var component = this.getCcrByKeyRegister()[key];
    if (!component) {
      this.showWarning('keyNotRegistered', key, {
        mixinName: "UU5.Common.CcrWriterMixin"
      });
    } else if (component !== this) {
      environment.ccrStrict && this.showError('unregisterNotThis', key, {
        mixinName: "UU5.Common.CcrWriterMixin",
        context: {
          registeredComponent: {
            tagName: component.getTagName(),
            id: component.getId(),
            component: component
          }
        }
      });
    } else {
      delete this.getCcrByKeyRegister()[key];
    }
    return this;
  }
  //@@viewOff:componentSpecificHelpers
};

/* harmony default export */ var ccr_writer_mixin = (CcrWriterMixin);
// CONCATENATED MODULE: ./core/common/event-listener.js
var event_listener__createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function event_listener__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }



var event_listener_EventListener = function () {
  function EventListener() {
    event_listener__classCallCheck(this, EventListener);

    this._screenSize = tools.getScreenSize();

    this._events = {};

    this._listeners = {
      screenSize: {},
      lsi: {},
      highlight: {},
      dateTime: {},
      number: {},
      loadLibs: {}
    };

    window.onresize = this._onScreenSizeChange.bind(this);
    this.addWindowEvent('orientationchange', tools.generateUUID(), this._onScreenSizeChange.bind(this));
  }

  event_listener__createClass(EventListener, [{
    key: 'registerEvent',
    value: function registerEvent(key, id, fce) {
      if (typeof fce === 'function') {
        this._listeners[key] = this._listeners[key] || {};
        this._listeners[key][id] = fce;
      } else {
        this._writeError(key, id, fce);
      }
    }
  }, {
    key: 'triggerEvent',
    value: function triggerEvent() {
      // i.e. arguments = ['lsi', 'cs-cz']
      var _arguments = Array.prototype.slice.call(arguments),
          key = _arguments[0],
          params = _arguments.slice(1);

      for (var id in this._listeners[key]) {
        this._listeners[key][id].apply(null, params);
      }
    }
  }, {
    key: 'unregisterEvent',
    value: function unregisterEvent(key, id) {
      if (this._listeners[key]) {
        delete this._listeners[key][id];
      }
    }
  }, {
    key: 'addEvent',
    value: function addEvent(object, key, id, fce) {
      var _this = this;

      if (typeof fce === 'function') {
        if (!this._events[key]) {
          this._events[key] = this._events[key] || {};
          object.addEventListener(key, function (e) {
            for (var _id in _this._events[key]) {
              _this._events[key][_id](e);
            }
          });
        }

        this._events[key][id] = fce;
      } else {
        this._writeError(key, id, fce);
      }
    }
  }, {
    key: 'removeEvent',
    value: function removeEvent(object, key, id) {
      if (this._events[key] && this._events[key][id]) {
        object.removeEventListener(key, this._events[key][id]);
        delete this._events[key][id];
      }
    }
  }, {
    key: 'createEvent',
    value: function createEvent(object, key, id, fce) {
      var _this2 = this;

      if (typeof fce === 'function') {
        if (!this._events[id] || !this._events[id][key]) {
          this._events[id] = this._events[id] || {};
          this._events[id][key] = this._events[id][key] || {};
          object.addEventListener(key, function (e) {
            return _this2._events[id][key](e);
          });
        }

        this._events[id][key] = fce;
      } else {
        this._writeError(key, id, fce);
      }
    }
  }, {
    key: 'deleteEvent',
    value: function deleteEvent(object, key, id) {
      if (this._events[id] && this._events[id][key]) {
        object.removeEventListener(key, this._events[id][key]);
        delete this._events[id][key];
      }
    }
  }, {
    key: 'addIdentityChangeListener',
    value: function addIdentityChangeListener(session, id, fce) {
      var _this3 = this;

      if (typeof fce === 'function') {
        if (!this._events['identity']) {
          this._events['identity'] = this._events['identity'] || {};
          session.addListener('identityChange', function (e) {
            for (var _id2 in _this3._events['identity']) {
              _this3._events['identity'][_id2](e);
            }
          });
        }

        this._events['identity'][id] = fce;
      } else {
        this._writeError('identity', id, fce);
      }
    }
  }, {
    key: 'removeIdentityChangeListener',
    value: function removeIdentityChangeListener(session, id) {
      if (this._events['identity'] && this._events['identity'][id]) {
        session.removeListener(this._events['identity'][id]);
        delete this._events['identity'][id];
      }
    }
  }, {
    key: 'addWindowEvent',
    value: function addWindowEvent(key, id, fce) {
      this.addEvent(window, key, id, fce);
    }
  }, {
    key: 'removeWindowEvent',
    value: function removeWindowEvent(key, id) {
      this.removeEvent(window, key, id);
    }
  }, {
    key: 'registerLsi',
    value: function registerLsi(id, fce) {
      this.registerEvent('lsi', id, fce);
    }
  }, {
    key: 'triggerLsi',
    value: function triggerLsi(lang) {
      this.triggerEvent('lsi', lang);
    }
  }, {
    key: 'unregisterLsi',
    value: function unregisterLsi(id) {
      this.unregisterEvent('lsi', id);
    }
  }, {
    key: 'registerScreenSize',
    value: function registerScreenSize(id, fce) {
      this.registerEvent('screenSize', id, fce);
    }
  }, {
    key: 'triggerScreenSize',
    value: function triggerScreenSize(e, screenSize) {
      this.triggerEvent('screenSize', e, screenSize);
    }
  }, {
    key: 'unregisterScreenSize',
    value: function unregisterScreenSize(id) {
      this.unregisterEvent('screenSize', id);
    }
  }, {
    key: 'registerHighlight',
    value: function registerHighlight(id, fce) {
      this.registerEvent('highlight', id, fce);
    }
  }, {
    key: 'triggerHighlight',
    value: function triggerHighlight(searchedTexts) {
      this.triggerEvent('highlight', searchedTexts);
    }
  }, {
    key: 'unregisterHighlight',
    value: function unregisterHighlight(id) {
      this.unregisterEvent('highlight', id);
    }
  }, {
    key: 'registerDateTime',
    value: function registerDateTime(id, fce) {
      this.registerEvent('dateTime', id, fce);
    }
  }, {
    key: 'triggerDateTime',
    value: function triggerDateTime(opt) {
      this.triggerEvent('dateTime', opt);
    }
  }, {
    key: 'unregisterDateTime',
    value: function unregisterDateTime(id) {
      this.unregisterEvent('dateTime', id);
    }
  }, {
    key: 'registerNumber',
    value: function registerNumber(id, fce) {
      this.registerEvent('number', id, fce);
    }
  }, {
    key: 'triggerNumber',
    value: function triggerNumber(opt) {
      this.triggerEvent('number', opt);
    }
  }, {
    key: 'unregisterNumber',
    value: function unregisterNumber(id) {
      this.unregisterEvent('number', id);
    }
  }, {
    key: 'registerLoadLibs',
    value: function registerLoadLibs(id, fce) {
      this.registerEvent('loadLibs', id, fce);
    }
  }, {
    key: 'triggerLoadLibs',
    value: function triggerLoadLibs(markers) {
      this.triggerEvent('loadLibs', markers);
    }
  }, {
    key: 'unregisterLoadLibs',
    value: function unregisterLoadLibs(id) {
      this.unregisterEvent('loadLibs', id);
    }
  }, {
    key: '_onScreenSizeChange',
    value: function _onScreenSizeChange(e) {
      var actualScreenSize = tools.getScreenSize();
      if (actualScreenSize !== this._screenSize) {
        this._screenSize = actualScreenSize;
        this.triggerScreenSize(e, actualScreenSize);
      }
    }
  }, {
    key: '_writeError',
    value: function _writeError(key, id, fce) {
      tools.error('In event "' + key + '" parameter is not function.', {
        component: 'EventListener',
        id: id,
        function: fce,
        key: key
      });
    }
  }]);

  return EventListener;
}();

/* harmony default export */ var event_listener = (event_listener_EventListener);
// CONCATENATED MODULE: ./core/common/screen-size-mixin.js





var ScreenSizeMixin = {

  //@@viewOn:statics
  statics: {
    "UU5.Common.ScreenSizeMixin": {
      requiredMixins: ["UU5.Common.BaseMixin"],
      defaults: {
        screenSizeEvent: 'UU5_Common_screenSize'
      }
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  getInitialState: function getInitialState() {
    // initialize
    this.registerMixin("UU5.Common.ScreenSizeMixin");
    // state
    return {
      screenSize: this.getScreenSize()
    };
  },

  componentDidMount: function componentDidMount(nextProps) {
    window.UU5.Environment.EventListener.registerScreenSize(this.getId(), this._onChangeScreenSize);
  },

  componentWillUnmount: function componentWillUnmount() {
    window.UU5.Environment.EventListener.unregisterScreenSize(this.getId(), this._onChangeScreenSize);
  },
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  hasUU5CommonScreenSizeMixinProps: function hasUU5CommonScreenSizeMixinProps() {
    return this.hasMixin("UU5.Common.ScreenSizeMixin");
  },

  getUU5CommonScreenSizeMixinProps: function getUU5CommonScreenSizeMixinProps() {
    return {
      screenSize: this.getScreenSize()
    };
  },

  getUU5CommonScreenSizeMixinPropsToPass: function getUU5CommonScreenSizeMixinPropsToPass() {
    return this.getUU5CommonScreenSizeMixinProps();
  },

  getScreenSize: function getScreenSize() {
    return this.state && this.state.screenSize || tools.getScreenSize();
  },

  isXs: function isXs() {
    return this.getScreenSize() === 'xs';
  },

  isS: function isS() {
    return this.getScreenSize() === 's';
  },

  isM: function isM() {
    return this.getScreenSize() === 'm';
  },

  isL: function isL() {
    return this.getScreenSize() === 'l';
  },

  isXl: function isXl() {
    return this.getScreenSize() === 'xl';
  },
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _onChangeScreenSize: function _onChangeScreenSize(e, actualScreenSize) {
    if (typeof this.onChangeScreenSize_ === 'function') {
      this.onChangeScreenSize_(actualScreenSize, e);
    } else {
      this.setState({ screenSize: actualScreenSize });
    }
    return this;
  }
  //@@viewOff:componentSpecificHelpers
};

/* harmony default export */ var screen_size_mixin = (ScreenSizeMixin);
// CONCATENATED MODULE: ./core/common/calls-mixin.js




var CallsMixin = {

  //@@viewOn:statics
  statics: {
    "UU5.Common.CallsMixin": {
      requiredMixins: ["UU5.Common.BaseMixin"],
      errors: {
        callsNotFound: 'Property calls was not set.',
        staticsCallsNotFound: 'Variable calls was not found in statics.',
        callNameNotFound: 'Call key %s was not found in calls.',
        callNotFound: 'Call %s was not found in calls.'
      }
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    calls: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.oneOfType([external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.string, external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.object])
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      calls: null
    };
  },

  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  getInitialState: function getInitialState() {
    // initialize
    this.registerMixin("UU5.Common.CallsMixin");
    // state
    return {
      calls: null
    };
  },
  componentWillMount: function componentWillMount() {
    this._setCalls(this.props.calls);
  },
  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    this._setCalls(nextProps.calls);
  },

  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  hasUU5CommonCallsMixin: function hasUU5CommonCallsMixin() {
    return this.hasMixin("UU5.Common.CallsMixin");
  },
  getUU5CommonCallsMixinProps: function getUU5CommonCallsMixinProps() {
    return {
      calls: this.getCalls()
    };
  },
  getUU5CommonCallsMixinPropsToPass: function getUU5CommonCallsMixinPropsToPass() {
    return this.getUU5CommonCallsMixinProps();
  },
  getCalls: function getCalls() {
    if (!this.state.calls) {
      this.showError('callsNotFound', null, { mixinName: "UU5.Common.CallsMixin" });
    }
    return this.state.calls;
  },
  setCalls: function setCalls(calls) {
    this._setCalls(calls);
    return this;
  },
  getCall: function getCall(item, mixinName) {
    var callNames = mixinName ? this.constructor[mixinName] ? this.constructor[mixinName].calls : null : this.constructor.calls;

    var callName = callNames && callNames[item];
    var calls = this.getCalls();
    var call = null;

    if (!callNames) {
      this.showError('staticsCallsNotFound', null, {
        mixinName: "UU5.Common.CallsMixin",
        context: {
          constructor: this.constructor
        }
      });
    } else if (!callName) {
      this.showError('callNameNotFound', item, {
        mixinName: "UU5.Common.CallsMixin",
        context: {
          calls: calls
        }
      });
    } else {
      call = calls[callName];

      if (!call) {
        this.showError('callNotFound', callName, {
          mixinName: "UU5.Common.CallsMixin",
          context: {
            calls: calls
          }
        });
      }
    }

    return call;
  },

  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _setCalls: function _setCalls(calls) {
    if (calls) {
      typeof calls === 'string' && (calls = this.stringToObjectType(calls, 'object', environment.calls));

      this.setState({ calls: calls });
    }
    return this;
  }
  //@@viewOff:componentSpecificHelpers

};

/* harmony default export */ var calls_mixin = (CallsMixin);
// CONCATENATED MODULE: ./core/common/load-mixin.js







var LoadMixin = {
  //@@viewOn:mixins
  mixins: [calls_mixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    "UU5.Common.LoadMixin": {
      defaults: {
        minReloadInterval: 10 * 1000, // 10s
        onLoadCall: 'onLoad',
        onReloadCall: 'onReload'
      },
      errors: {
        onLoad: 'Error during loading data from server by call %s.',
        onReload: 'Error during reloading data from server by call %s.'
      },
      lsi: function lsi() {
        return environment.Lsi.Common.loadMixin;
      }
    }
  }, //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    uri: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.string,
    dtoOut: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.object,
    reloadInterval: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.number,
    refireLoad: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.bool
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      uri: null,
      dtoOut: null,
      reloadInterval: 0,
      refireLoad: true
    };
  },

  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  getInitialState: function getInitialState() {
    return {
      loadFeedback: 'loading',
      dtoOut: null,
      errorDtoOut: null
    };
  },
  componentWillMount: function componentWillMount() {
    if (this.props.dtoOut) {
      this.onLoadSuccess(this.props.dtoOut);
    }
  },
  componentDidMount: function componentDidMount() {
    var _this = this;

    if (!this.props.dtoOut) {
      this.setState({
        loadFeedback: 'loading',
        dtoOut: null,
        errorDtoOut: null
      }, function () {
        return _this._onLoad(_this.props);
      });
    }
  },
  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    if (nextProps.controlled && nextProps.refireLoad) {
      this._onLoad(nextProps);
    }
  },
  componentWillUnmount: function componentWillUnmount() {
    this._reloadInterval && clearInterval(this._reloadInterval);
  },

  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  getUri: function getUri() {
    return this.props.uri;
  },
  getDtoOut: function getDtoOut() {
    return this.state.dtoOut;
  },
  getErrorData: function getErrorData() {
    return this.state.errorDtoOut;
  },
  getLoadFeedback: function getLoadFeedback() {
    return this.state.loadFeedback;
  },
  isLoading: function isLoading() {
    return this.getLoadFeedback() === 'loading';
  },
  isReady: function isReady() {
    return this.getLoadFeedback() === 'ready';
  },
  isError: function isError() {
    return this.getLoadFeedback() === 'error';
  },
  onLoadSuccess: function onLoadSuccess(dtoOut, setStateCallback) {
    this.setAsyncState({ loadFeedback: 'ready', dtoOut: dtoOut, errorDtoOut: null }, setStateCallback);
    return this;
  },
  onReloadSuccess: function onReloadSuccess(dtoOut, setStateCallback) {
    this.onLoadSuccess(dtoOut, setStateCallback);
    return this;
  },
  onLoadError: function onLoadError(dtoOut, setStateCallback) {
    this.setAsyncState({ loadFeedback: 'error', errorDtoOut: dtoOut }, setStateCallback);
    return this;
  },
  onReloadError: function onReloadError(dtoOut, setStateCallback) {
    this.onLoadError(dtoOut, setStateCallback);
    return this;
  },
  getLoadFeedbackChildren: function getLoadFeedbackChildren(getChildren) {
    var children = void 0;

    switch (this.getLoadFeedback()) {
      case 'loading':
        children = tools.findComponent('UU5.Bricks.Loading');
        break;
      case 'ready':
        children = getChildren(this.getDtoOut());
        break;
      case 'error':
        children = external___amd___react___commonjs___react___commonjs2___react___root___React___default.a.createElement(
          core_common_error,
          null,
          this.getLsiComponent('error', "UU5.Common.LoadMixin")
        );
        break;
    }

    return children;
  },
  reload: function reload(callName, dtoIn) {
    var _this2 = this;

    this.setState({ loadFeedback: 'loading' }, function () {
      _this2.forceReload(callName, dtoIn);
    });

    return this;
  },
  forceReload: function forceReload(callName, dtoIn) {
    var reloadCall = callName && this.getCall(callName) || this._getOnReloadCall();
    if (reloadCall) {
      var reloadDtoIn = dtoIn || this._getReloadDtoIn(this.props);
      reloadCall(reloadDtoIn);
    }
  },

  //@@viewOff:interface

  //@@viewOn:componentSpecificHelpers
  _getOnLoadCall: function _getOnLoadCall() {
    return this.getCall(this.getDefault('onLoadCall', "UU5.Common.LoadMixin"));
  },
  _getOnReloadCall: function _getOnReloadCall() {
    var result = void 0;

    var callNames = this.constructor.calls;
    if (callNames) {
      var callName = callNames[this.getDefault('onReloadCall', "UU5.Common.LoadMixin")];

      if (callName) {
        result = this.getCalls()[callName];
      } else {
        result = this._getOnLoadCall();
      }
    } else {
      result = this._getOnLoadCall();
    }

    return result;
  },
  _getLoadDtoIn: function _getLoadDtoIn(props) {
    var _this3 = this;

    props = props || this.props;

    var dtoIn = {};

    if (props.uri) {
      dtoIn.uri = props.uri;
    }

    if (typeof this.getOnLoadData_ === 'function') {
      dtoIn.data = this.getOnLoadData_(props);
    }

    dtoIn.done = function (dtoOut) {
      if (typeof _this3.onLoadSuccess_ === 'function') {
        _this3.onLoadSuccess_(dtoOut);
      } else {
        _this3.onLoadSuccess(dtoOut);
      }
    };

    var callKey = this.getDefault('onLoadCall', "UU5.Common.LoadMixin");
    dtoIn.fail = function (dtoOut) {
      _this3.showError('onLoad', _this3.getCallName(callKey), {
        mixinName: "UU5.Common.LoadMixin",
        context: {
          calls: _this3.getCalls(),
          dtoOut: dtoOut,
          callKey: callKey,
          uri: dtoIn.uri,
          data: dtoIn.data
        }
      });
      if (typeof _this3.onLoadError_ === 'function') {
        _this3.onLoadError_(dtoOut);
      } else {
        _this3.onLoadError(dtoOut);
      }
    };

    return dtoIn;
  },
  _getReloadDtoIn: function _getReloadDtoIn(props) {
    var _this4 = this;

    props = props || this.props;
    var dtoIn = {};

    if (props.uri) {
      dtoIn.uri = props.uri;
    }

    var getData = this.getOnReloadData_ || this.getOnLoadData_;
    if (typeof getData === 'function') {
      dtoIn.data = getData(props);
    }

    dtoIn.done = function (dtoOut) {
      var loadSuccess = _this4.onReloadSuccess_ || _this4.onLoadSuccess_;
      if (typeof loadSuccess === 'function') {
        loadSuccess(dtoOut);
      } else {
        _this4.onReloadSuccess(dtoOut);
      }
    };

    var calls = this.constructor.calls;
    var callKey = this.getDefault('onReloadCall', "UU5.Common.LoadMixin");
    calls && !calls[callKey] && (callKey = this.getDefault('onLoadCall', "UU5.Common.LoadMixin"));

    dtoIn.fail = function (dtoOut) {
      _this4.showError('onReload', _this4.getCallName(callKey), {
        mixinName: "UU5.Common.LoadMixin",
        context: {
          calls: _this4.getCalls(),
          dtoOut: dtoOut,
          callKey: callKey,
          uri: dtoIn.uri,
          data: dtoIn.data
        }
      });

      var loadError = _this4.onReloadError_ || _this4.onLoadError_;
      if (typeof loadError === 'function') {
        loadError(dtoOut);
      } else {
        _this4.onReloadError(dtoOut);
      }
    };

    return dtoIn;
  },
  _onLoad: function _onLoad(props) {
    var loadCall = this._getOnLoadCall();

    if (loadCall) {
      var dtoIn = this._getLoadDtoIn(props);

      this._reloadInterval && clearInterval(this._reloadInterval);
      loadCall(dtoIn);

      var reloadInterval = this.props.reloadInterval || this.getOpt('reloadInterval');
      if (reloadInterval) {
        var reloadCall = this._getOnReloadCall();
        reloadCall = reloadCall || loadCall;

        if (reloadCall) {
          var reloadDtoIn = this._getReloadDtoIn(props);
          this._reloadInterval = setInterval(function () {
            return reloadCall(reloadDtoIn);
          }, Math.max(reloadInterval, this.getDefault('minReloadInterval', "UU5.Common.LoadMixin")));
        }
      }
    }

    return this;
  }
  //@@viewOff:componentSpecificHelpers

};

/* harmony default export */ var load_mixin = (LoadMixin);
// CONCATENATED MODULE: ./core/common/lsi-mixin.js





var LsiMixin = {

  //@@viewOn:statics
  statics: {
    "UU5.Common.LsiMixin": {
      requiredMixins: ["UU5.Common.BaseMixin"],
      lsiEvent: tools.events.lsi
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    language: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.string
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      language: null
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  getInitialState: function getInitialState() {
    // initialize
    this.registerMixin("UU5.Common.LsiMixin");
    // state
    return {
      language: this.props.language || tools.getLanguages()[0].location || tools.getLanguages()[0].language
    };
  },

  componentDidMount: function componentDidMount() {
    window.UU5.Environment.EventListener.registerLsi(this.getId(), this._changeLanguage);
  },

  componentWillUnmount: function componentWillUnmount() {
    window.UU5.Environment.EventListener.unregisterLsi(this.getId(), this._changeLanguage);
  },
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  hasUU5CommonLsiMixin: function hasUU5CommonLsiMixin() {
    return this.hasMixin("UU5.Common.LsiMixin");
  },

  getUU5CommonLsiMixinProps: function getUU5CommonLsiMixinProps() {
    return {
      language: this.props.language
    };
  },

  getUU5CommonLsiMixinPropsToPass: function getUU5CommonLsiMixinPropsToPass() {
    return this.getUU5CommonLsiMixinProps();
  },

  getLanguages: function getLanguages() {
    return tools.getLanguages();
  },

  getLanguage: function getLanguage() {
    return this.state.language;
  },
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  // TODO: 'cs-CZ,en;q=0.8...' is set to state and never will be used, necessary is doing setState and render the component
  _setLanguage: function _setLanguage(language, setStateCallback) {
    this.setState({ language: language }, setStateCallback);
    return this;
  },

  _changeLanguage: function _changeLanguage(language) {
    if (this.getLanguage() !== language) {
      if (typeof this.onChangeLanguage_ === 'function') {
        this.onChangeLanguage_(language);
      } else {
        this._setLanguage(language);
      }
    }
  }
  //@@viewOff:componentSpecificHelpers
};

/* harmony default export */ var lsi_mixin = (LsiMixin);
// CONCATENATED MODULE: ./core/common/swipe-mixin.js
var swipe_mixin__typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };





var SwipeMixin = {

  //@@viewOn:statics
  statics: {
    "UU5.Common.SwipeMixin": {
      requiredMixins: ["UU5.Common.BaseMixin"],
      defaults: {
        maxLengthOnShortSwipe: 70,
        minLengthOnSwipe: 10,
        maxSpeedOnSlowSwipe: 0.3,
        maxAngleDivergence: 10
      }
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  // React lifecycle
  propTypes: {
    swiped: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.oneOf(['up', 'right', 'down', 'left', 'upRight', 'downRight', 'upLeft', 'downLeft']),
    // null is not false - null is not swiped
    swipedLong: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.bool,
    swipedFast: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.bool
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      swiped: null, // up|right|down|left|upRight|downRight|upLeft|downLeft
      swipedLong: null, // true|false
      swipedFast: null // true|false
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  getInitialState: function getInitialState() {
    // initialize
    this.registerMixin("UU5.Common.SwipeMixin");
    this.lastSwipe = {
      x: 0,
      y: 0,
      dx: 0,
      dy: 0,
      ex: 0,
      ey: 0,
      left: false,
      right: false,
      up: false,
      down: false,
      long: this.props.swipedLong,
      fast: this.props.swipedFast,
      length: 0,
      speed: 0,
      startTime: null,
      endTime: null,
      angle: 0
    };
    // state
    return null;
  },

  componentWillMount: function componentWillMount() {
    this.props.swiped && (this.lastSwipe = this._getUpdatedSwipe(this.props));
  },

  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    nextProps.swiped && (this.lastSwipe = this._getUpdatedSwipe(nextProps));
  },
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  hasUU5CommonSwipeMixin: function hasUU5CommonSwipeMixin() {
    return this.hasMixin("UU5.Common.SwipeMixin");
  },

  getUU5CommonSwipeMixinProps: function getUU5CommonSwipeMixinProps() {
    return {
      swiped: this.props.swiped,
      swipedLong: this.props.swipedLong,
      swipedFast: this.props.swipedFast
    };
  },

  getUU5CommonSwipeMixinPropsToPass: function getUU5CommonSwipeMixinPropsToPass() {
    return this.getUU5CommonSwipeMixinProps();
  },

  getSwipeLength: function getSwipeLength() {
    var dx = this.lastSwipe.dx;
    var dy = this.lastSwipe.dy;
    return Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2));
  },

  getAngle: function getAngle() {
    return this.lastSwipe.angle;
  },

  isSwipedHorizontal: function isSwipedHorizontal() {
    return Math.abs(this.getAngle()) <= this.getDefault('maxAngleDivergence', "UU5.Common.SwipeMixin") || Math.abs(this.getAngle()) >= 180 - this.getDefault('maxLengthOnShortSwipe', "UU5.Common.SwipeMixin");
  },

  isSwipedVertical: function isSwipedVertical() {
    return Math.abs(this.getAngle()) <= 90 + this.getDefault('maxLengthOnShortSwipe', "UU5.Common.SwipeMixin") && Math.abs(this.getAngle()) >= 90 - this.getDefault('maxLengthOnShortSwipe', "UU5.Common.SwipeMixin");
  },

  isSwiped: function isSwiped() {
    return this.isSwipedUp() || this.isSwipedRight() || this.isSwipedDown() || this.isSwipedLeft();
  },

  isSwipedShort: function isSwipedShort() {
    return this.lastSwipe.long !== null && !this.lastSwipe.long;
  },

  isSwipedLong: function isSwipedLong() {
    return this.lastSwipe.long !== null && this.lastSwipe.long;
  },

  isSwipedSlow: function isSwipedSlow() {
    return this.lastSwipe.fast !== null && !this.lastSwipe.fast;
  },

  isSwipedFast: function isSwipedFast() {
    return this.lastSwipe.fast !== null && this.lastSwipe.fast;
  },

  isSwipedUp: function isSwipedUp() {
    return this.lastSwipe.up && this.isSwipedVertical();
  },

  isSwipedRight: function isSwipedRight() {
    return this.lastSwipe.right && this.isSwipedHorizontal();
  },

  isSwipedDown: function isSwipedDown() {
    return this.lastSwipe.down && this.isSwipedVertical();
  },

  isSwipedLeft: function isSwipedLeft() {
    return this.lastSwipe.left && this.isSwipedHorizontal();
  },

  // Two directions
  isSwipedUpRight: function isSwipedUpRight() {
    return this.lastSwipe.up && this.lastSwipe.right;
  },

  isSwipedDownRight: function isSwipedDownRight() {
    return this.lastSwipe.down && this.lastSwipe.right;
  },

  isSwipedUpLeft: function isSwipedUpLeft() {
    return this.lastSwipe.up && this.lastSwipe.left;
  },

  isSwipedDownLeft: function isSwipedDownLeft() {
    return this.lastSwipe.down && this.lastSwipe.left;
  },

  // Short
  isSwipedUpShort: function isSwipedUpShort() {
    return this.isSwipedUp() && this.isSwipedShort();
  },

  isSwipedRightShort: function isSwipedRightShort() {
    return this.isSwipedRight() && this.isSwipedShort();
  },

  isSwipedDownShort: function isSwipedDownShort() {
    return this.isSwipedDown() && this.isSwipedShort();
  },

  isSwipedLeftShort: function isSwipedLeftShort() {
    return this.isSwipedLeft() && this.isSwipedShort();
  },

  isSwipedUpRightShort: function isSwipedUpRightShort() {
    return this.isSwipedUpRight() && this.isSwipedShort();
  },

  isSwipedDownRightShort: function isSwipedDownRightShort() {
    return this.isSwipedDownRight() && this.isSwipedShort();
  },

  isSwipedUpLeftShort: function isSwipedUpLeftShort() {
    return this.isSwipedUpLeft() && this.isSwipedShort();
  },

  isSwipedDownLeftShort: function isSwipedDownLeftShort() {
    return this.isSwipedDownLeft() && this.isSwipedShort();
  },

  // Long
  isSwipedUpLong: function isSwipedUpLong() {
    return this.isSwipedUp() && this.isSwipedLong();
  },

  isSwipedRightLong: function isSwipedRightLong() {
    return this.isSwipedRight() && this.isSwipedLong();
  },

  isSwipedDownLong: function isSwipedDownLong() {
    return this.isSwipedDown() && this.isSwipedLong();
  },

  isSwipedLeftLong: function isSwipedLeftLong() {
    return this.isSwipedLeft() && this.isSwipedLong();
  },

  isSwipedUpRightLong: function isSwipedUpRightLong() {
    return this.isSwipedUpRight() && this.isSwipedLong();
  },

  isSwipedDownRightLong: function isSwipedDownRightLong() {
    return this.isSwipedDownRight() && this.isSwipedLong();
  },

  isSwipedUpLeftLong: function isSwipedUpLeftLong() {
    return this.isSwipedUpLeft() && this.isSwipedLong();
  },

  isSwipedDownLeftLong: function isSwipedDownLeftLong() {
    return this.isSwipedDownLeft() && this.isSwipedLong();
  },

  swipeOnTouchStart: function swipeOnTouchStart(handler, e) {
    if ((typeof handler === 'undefined' ? 'undefined' : swipe_mixin__typeof(handler)) === 'object') {
      e = handler;
      handler = null;
    }
    e = e || handler;
    this.lastSwipe = tools.merge({}, this.lastSwipe, {
      x: e.touches[0].clientX,
      y: e.touches[0].clientY,
      dx: 0,
      dy: 0,
      length: 0,
      speed: null,
      startTime: new Date().getTime()
    });
    typeof handler === 'function' && handler(arguments);
    return this;
  },

  swipeOnTouchMove: function swipeOnTouchMove(handler, e) {
    if ((typeof handler === 'undefined' ? 'undefined' : swipe_mixin__typeof(handler)) === 'object') {
      e = handler;
      handler = null;
    }
    e = e || handler;
    // e.preventDefault();
    this.lastSwipe = tools.merge({}, this.lastSwipe, {
      dx: e.touches[0].clientX - this.lastSwipe.x,
      dy: e.touches[0].clientY - this.lastSwipe.y,
      ex: e.touches[0].clientX,
      ey: e.touches[0].clientY,
      endTime: new Date().getTime()
    });

    (this.isSwipedLeft() || this.isSwipedRight()) && e.preventDefault();

    typeof handler === 'function' && handler(e);
    return this;
  },

  swipeOnTouchEnd: function swipeOnTouchEnd(handler, e) {
    if ((typeof handler === 'undefined' ? 'undefined' : swipe_mixin__typeof(handler)) === 'object') {
      e = handler;
      handler = null;
    }
    e = e || handler;
    var length = this.getSwipeLength();

    if (length > this.getDefault('maxLengthOnShortSwipe', "UU5.Common.SwipeMixin")) {
      var duration = this.lastSwipe.endTime - this.lastSwipe.startTime;
      var speed = length / duration;

      this.lastSwipe = tools.merge({}, this.lastSwipe, {
        left: this.lastSwipe.dx < -this.getDefault('minLengthOnSwipe', "UU5.Common.SwipeMixin"),
        right: this.lastSwipe.dx > this.getDefault('minLengthOnSwipe', "UU5.Common.SwipeMixin"),
        down: this.lastSwipe.dy > -this.getDefault('minLengthOnSwipe', "UU5.Common.SwipeMixin") && this.lastSwipe.dy > 0,
        up: this.lastSwipe.dy < this.getDefault('minLengthOnSwipe', "UU5.Common.SwipeMixin") && this.lastSwipe.dy < 0,
        long: length > this.getDefault('maxLengthOnShortSwipe', "UU5.Common.SwipeMixin"),
        fast: speed > this.getDefault('maxLengthOnShortSwipe', "UU5.Common.SwipeMixin"),
        length: length,
        speed: length / duration,
        angle: this.angle(this.lastSwipe.x, this.lastSwipe.y, this.lastSwipe.ex, this.lastSwipe.ey)
      });

      typeof handler === 'function' && handler(arguments);
    }
    return this;
  },

  angle: function angle(x, y, ex, ey) {
    var dy = y - ey;
    var dx = ex - x;
    var theta = Math.atan2(dy, dx);
    theta *= 180 / Math.PI;
    //if (theta < 0) theta = 360 + theta;
    return theta;
  },
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _getUpdatedSwipe: function _getUpdatedSwipe(props) {
    return {
      up: props.swiped === 'up' || props.swiped === 'upRight' || props.swiped === 'upLeft',
      right: props.swiped === 'right' || props.swiped === 'upRight' || props.swiped === 'downRight',
      down: props.swiped === 'down' || props.swiped === 'downRight' || props.swiped === 'downLeft',
      left: props.swiped === 'left' || props.swiped === 'upLeft' || props.swiped === 'downLeft',
      long: props.swipedLong,
      fast: props.swipedFast
    };
  }
  //@@viewOff:componentSpecificHelpers
};

/* harmony default export */ var swipe_mixin = (SwipeMixin);
// CONCATENATED MODULE: ./core/common/vuc-mixin.js
var vuc_mixin__typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };







var VucMixin = {

  //@@viewOn:mixins
  mixins: [],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    "UU5.Common.VucMixin": {
      requiredMixins: ["UU5.Common.BaseMixin"],
      calls: {
        authorizeVuc: 'authorizeVuc'
      },
      errors: {
        sysAuthorizeVuc: 'Error of VUC %s during connection to server.',
        notErrorRoute: 'Error route was not set either in props or in Environment.',
        notCall: 'Call %s was not found either in props or in Environment.'
      },
      lsi: function lsi() {
        return environment.Lsi.Common.vucMixin;
      }
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    authorized: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.bool,
    calls: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.object,
    errorRoute: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.oneOfType([external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.string, // path
    external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.element, external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.shape({
      tag: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.oneOfType([external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.string, external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.func]),
      props: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.object
    })]),
    params: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.object
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      authorized: true,
      calls: null,
      errorRoute: null,
      params: null
    };
  },

  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  getInitialState: function getInitialState() {
    // initialize
    this.registerMixin("UU5.Common.VucMixin");
    this.constructor.vucTitle && this.setTitle();

    return {
      authorizedFeedback: this.props.authorized ? 'loading' : 'ready',
      profiles: null
    };
  },
  componentDidMount: function componentDidMount() {
    var _this = this;

    this.constructor.vucTitle && window.UU5.Environment.EventListener.registerLsi(this.getId(), function () {
      return _this.setTitle();
    });
    this.props.authorized && this._checkAuthorizing();
  },


  componentWillUnmount: function componentWillUnmount() {
    this._unmounted = true;
    this.constructor.vucTitle && window.UU5.Environment.EventListener.unregisterLsi(this.getId());
  },
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  hasUU5CommonVucMixin: function hasUU5CommonVucMixin() {
    return this.hasMixin("UU5.Common.VucMixin");
  },

  getUU5CommonVucMixinProps: function getUU5CommonVucMixinProps() {
    return {
      // profiles: this.props.profiles
    };
  },

  getUU5CommonVucMixinPropsToPass: function getUU5CommonVucMixinPropsToPass() {
    return this.getUU5CommonVucMixinProps();
  },

  getProfiles: function getProfiles() {
    return this.state.profiles;
  },
  isReady: function isReady() {
    return this.state.authorizedFeedback == 'ready';
  },
  isLoading: function isLoading() {
    return this.state.authorizedFeedback == 'loading';
  },
  isError: function isError() {
    return this.state.authorizedFeedback == 'error';
  },
  getVucChildren: function getVucChildren(getChildren) {
    var result = void 0;

    switch (this.state.authorizedFeedback) {
      case 'loading':
        result = tools.findComponent('UU5.Bricks.Loading');
        break;
      case 'ready':
        result = getChildren(this.state.profiles);
        break;
      case 'error':
        result = external___amd___react___commonjs___react___commonjs2___react___root___React___default.a.createElement(
          core_common_error,
          null,
          tools.findComponent('UU5.Bricks.Lsi', { lsi: this.state.message })
        );
        break;
    }

    return result;
  },
  checkAuthorizing: function checkAuthorizing() {
    this._checkAuthorizing();
    return this;
  },
  setTitle: function setTitle(title) {
    title = title || this.constructor.vucTitle;

    if (title) {
      if ((typeof title === 'undefined' ? 'undefined' : vuc_mixin__typeof(title)) === 'object') {
        title = tools.getLsiItemByLanguage(title);
      }

      document.title = title;
    }

    return this;
  },

  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _getAuthorizeVucCall: function _getAuthorizeVucCall() {
    var call = void 0;

    if (this.props.calls) {
      call = this.props.calls[this.getCallName().authorizeVuc];
    } else if (environment.App && environment.App.callConfig && environment.App.callConfig.authorizeVuc) {
      call = environment.App.callConfig.authorizeVuc;
    }

    return call;
  },
  _checkAuthorizing: function _checkAuthorizing() {
    var _this2 = this;

    var call = this._getAuthorizeVucCall();

    if (call) {
      // data = {}
      var data = { name: this.constructor.vucName };

      call({
        data: data,
        // dtoOut = {profiles: ['..', '..', ...], status: 'ok | error'}
        done: function done(dtoOut) {
          if (!_this2._unmounted) {
            if (dtoOut.data.status === 'error') {
              var errorRoute = _this2.props.errorRoute;
              if (!errorRoute) {
                if (environment.App && environment.App.vucConfig && environment.App.vucConfig.errorRoute) {
                  errorRoute = environment.App.vucConfig.errorRoute;
                } else {
                  _this2.showError('notErrorRoute', null, {
                    mixinName: "UU5.Common.VucMixin",
                    context: { environment: environment }
                  });
                }
              }
              if (errorRoute) {
                environment.setRoute(errorRoute);
              } else {
                _this2.setState({
                  authorizedFeedback: 'error',
                  message: _this2.getLsi('notAuthorized', "UU5.Common.VucMixin")
                });
              }
            } else {
              _this2.setState({ authorizedFeedback: 'ready', profiles: dtoOut.data.profiles || null });
            }
          }
        },
        fail: function fail(dtoOut) {
          if (!_this2._unmounted) {
            _this2.showError('sysAuthorizeVuc', _this2.constructor.vucName || window.location.pathname, {
              mixinName: "UU5.Common.VucMixin",
              context: { dtoOut: dtoOut }
            });
            _this2.setState({
              authorizedFeedback: 'error',
              profiles: dtoOut.data && dtoOut.data.profiles || null,
              message: _this2.getLsi('serverConnection', "UU5.Common.VucMixin")
            });
          }
        }
      });
    } else {
      this.showError('notCall', this.getCall().authorizeVuc, {
        mixinName: "UU5.Common.VucMixin",
        context: { environment: environment }
      });
    }
  }
  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  //@@viewOff:render

};

/* harmony default export */ var vuc_mixin = (VucMixin);
// CONCATENATED MODULE: ./core/common/route-mixin.js



var RouteMixin = {

  //@@viewOn:mixins
  mixins: [],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    "UU5.Common.RouteMixin": {
      requiredMixins: ["UU5.Common.BaseMixin"]
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    params: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.object
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      params: null
    };
  },

  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  getInitialState: function getInitialState() {
    // initialize
    this.registerMixin("UU5.Common.RouteMixin");

    return {};
  },
  componentDidMount: function componentDidMount() {
    if (typeof this.onRouteChanged_ === 'function') {
      this.onRouteChanged_();
    }
  },
  componentDidUpdate: function componentDidUpdate(prevProps, prevState) {
    if (typeof this.onRouteChanged_ === 'function') {
      this.onRouteChanged_(prevProps, prevState);
    }
  },

  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  hasUU5CommonRouteMixin: function hasUU5CommonRouteMixin() {
    return this.hasMixin("UU5.Common.RouteMixin");
  },

  getUU5CommonRouteMixinProps: function getUU5CommonRouteMixinProps() {
    return {};
  },

  getUU5CommonRouteMixinPropsToPass: function getUU5CommonRouteMixinPropsToPass() {
    return this.getUU5CommonRouteMixinProps();
  }
  //@@viewOff:interface
};

/* harmony default export */ var route_mixin = (RouteMixin);
// CONCATENATED MODULE: ./core/common/url.js
var url__typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var url__createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function url__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var regexp = {
  url: /^((http[s]?|ftp):\/)?\/?([^:\/\s]+):?(\d+)?([^?#]+)?\??([^#]+)?#?(.*)$/,
  colon: /:$/,
  slash: /^[/]/,
  hash: /^#/
};

var Url = function () {
  url__createClass(Url, null, [{
    key: 'parse',
    value: function parse(url) {
      url = url || window.location.href;
      var result = new Url();

      if (typeof url === 'string') {
        var parser = void 0;
        try {
          parser = new URL(url);
        } catch (e) {
          // HF for ie, Safari
          var matcher = url.match(regexp.url);

          parser = {
            protocol: matcher[2],
            hostname: matcher[3],
            port: matcher[4],
            pathname: matcher[5],
            search: matcher[6],
            hash: matcher[7]
          };
        }
        parser.protocol && (result.protocol = parser.protocol.replace(regexp.colon, ''));
        parser.hostname && (result.hostName = parser.hostname);
        parser.port && (result.port = parser.port);
        parser.pathname && (result.pathName = parser.pathname.replace(regexp.slash, ''));
        parser.search && (result.parameters = parser.search);
        parser.hash && (result.hash = parser.hash);
      } else if ((typeof url === 'undefined' ? 'undefined' : url__typeof(url)) === 'object') {
        url.protocol && (result.protocol = url.protocol);
        url.hostName && (result.hostName = url.hostName);
        url.port && (result.port = url.port);
        url.pathName && (result.pathName = url.pathName.replace(regexp.slash, ''));
        url.parameters && (result.parameters = url.parameters);
        url.hash && (result.hash = url.hash);
      }

      return result;
    }
  }, {
    key: 'encodeValue',
    value: function encodeValue(value) {
      var result = value + '';

      if (value && (Array.isArray(value) || (typeof value === 'undefined' ? 'undefined' : url__typeof(value)) === 'object')) {
        result = JSON.stringify(value);
      }

      return encodeURIComponent(result);
    }
  }, {
    key: 'encodeQuery',
    value: function encodeQuery(params) {
      var query = '?';

      for (var name in params) {
        query += name + '=' + Url.encodeValue(params[name]) + '&';
      }

      return query.substr(0, query.length - 1);
    }
  }, {
    key: 'decodeValue',
    value: function decodeValue(value) {
      value = decodeURIComponent(value);
      var result = value;

      if (!isNaN(value)) {
        result = value;
      } else if (value === 'true') {
        result = true;
      } else if (value === 'false') {
        result = false;
      } else {
        var json = Url._checkJson(value);

        if (json) {
          result = json;
        }
      }

      return result;
    }
  }, {
    key: 'decodeQuery',
    value: function decodeQuery(query) {
      var params = {};

      query.substr(1, query.length - 1).split('&').forEach(function (value) {
        var valueSplitter = value.split('=');
        params[valueSplitter[0]] = Url.decodeValue(valueSplitter[1]);
      });

      return params;
    }
  }, {
    key: '_checkJson',
    value: function _checkJson(str) {
      try {
        return JSON.parse(str);
      } catch (e) {
        return false;
      }
    }
  }]);

  function Url() {
    url__classCallCheck(this, Url);

    this.protocol = null;
    this.hostName = null;
    this.port = null;
    this._pathName = null;
    this._parameters = null;
    this._hash = null;
  }

  url__createClass(Url, [{
    key: 'set',
    value: function set(params) {
      params.protocol !== undefined && (this.protocol = params.protocol);
      params.hostName !== undefined && (this.hostName = params.hostName);
      params.port !== undefined && (this.port = params.port);
      params.pathName !== undefined && (this.pathName = params.pathName);
      params.parameters !== undefined && (this.parameters = params.parameters);
      params.hash !== undefined && (this.hash = params.hash);
      return this;
    }
  }, {
    key: 'toString',
    value: function toString() {
      var url = this.origin;
      this.pathName && (url += '/' + this.pathName);
      this.parameters && (url += Url.encodeQuery(this.parameters));
      this.hash && (url += '#' + this.hash);
      return url;
    }
  }, {
    key: 'pathName',
    get: function get() {
      return this._pathName;
    },
    set: function set(pathName) {
      this._pathName = pathName.replace(regexp.slash, '');
      return this;
    }
  }, {
    key: 'parameters',
    get: function get() {
      return this._parameters;
    },
    set: function set(parameters) {
      if (typeof parameters === 'string') {
        this._parameters = Url.decodeQuery(parameters);
      } else {
        this._parameters = parameters || null;
      }
      return this;
    }
  }, {
    key: 'hash',
    get: function get() {
      return this._hash;
    },
    set: function set(hash) {
      this._hash = hash.replace(regexp.hash, '');
      return this;
    }
  }, {
    key: 'host',
    get: function get() {
      var host = '';
      this.hostName && (host += this.hostName);
      this.port && (host += ':' + this.port);
      return host;
    }
  }, {
    key: 'origin',
    get: function get() {
      var origin = '';

      this.protocol && (origin += this.protocol + '://');

      var host = this.host;
      host && (origin += host);

      return origin;
    }
  }]);

  return Url;
}();

/* harmony default export */ var common_url = (Url);
// EXTERNAL MODULE: ./core/common/router.less
var router = __webpack_require__(29);
var router_default = /*#__PURE__*/__webpack_require__.n(router);

// CONCATENATED MODULE: ./core/common/router.js
var router__typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };















var Router = create_react_class({
  displayName: 'Router',


  //@@viewOn:mixins
  mixins: [base_mixin, elementary_mixin, ccr_writer_mixin, pure_render_mixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: common_ns.name("Router"),
    opt: {
      ccrKey: environment.CCRKEY_ROUTER
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    basePath: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.string,
    route: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.oneOfType([external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.string, // path
    external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.element, external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.shape({
      tag: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.oneOfType([external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.string, external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.func]),
      props: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.object,
      source: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.string
    })]),
    notFoundRoute: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.oneOfType([external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.string, // path
    external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.element, external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.shape({
      tag: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.oneOfType([external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.string, external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.func]),
      props: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.object
    })]),
    routes: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.object,
    urlBuilder: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.func
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      basePath: null,
      route: null,
      notFoundRoute: null,
      routes: null,
      urlBuilder: null
    };
  },

  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  getInitialState: function getInitialState() {
    environment.router = this;
    this._history = [];
    this._routeIndex = null;

    return {
      route: null
    };
  },
  componentWillMount: function componentWillMount() {
    if (window.location.pathname && this.props.routes && typeof this.props.route === 'string') {
      var path = window.location.pathname;
      var basePath = this._getBasePath(path, this.props);
      basePath && (path = path.replace(basePath, ''));

      var params = null;
      if (window.location.search) {
        params = tools.decodeQuery(window.location.search);
      }
      this._setRoute(path, params, this.props);
    } else if (!this._shouldImport(this.props.route)) {
      this._setRoute(this.props.route, null, this.props);
    }
  },
  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    if (nextProps.controlled) {
      this._setRoute(nextProps.route, null, nextProps);
    }
  },
  componentDidMount: function componentDidMount() {
    if (this._shouldImport(this.props.route)) {
      this._importRoute(this.props.route);
    }

    window.onpopstate = this._routeByNavigation;
  },

  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  // newRoute = {tag: 'Node', props: {}, source: '', notFoundRoute: {} || < />} || <Node {...props} />
  setRoute: function setRoute(newRoute, params, setStateCallback) {
    if (this._shouldImport(newRoute)) {
      this._importRoute(newRoute, params, setStateCallback);
    } else {
      this._setRoute(newRoute, params, null, setStateCallback);
    }
    return this;
  },

  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _getBasePath: function _getBasePath(path, props) {
    path = path || window.location.pathname;
    return props.basePath || (path ? path.replace(/^(.*)\/.*/, "$1") : '');
  },
  _shouldImport: function _shouldImport(route) {
    return route && (typeof route === 'undefined' ? 'undefined' : router__typeof(route)) === 'object' && route.tag && !tools.findComponent(route.tag, true);
  },
  _importRoute: function _importRoute(route, params, setStateCallback) {
    var _this = this;

    if (window.System && window.System.import) {
      if (route.source) {
        System.import(route.source).then(function (exports) {
          var tagArray = route.tag.split('.');
          var calculatedTag = window;
          while (calculatedTag && tagArray.length > 1) {
            var moduleName = tagArray.shift();
            calculatedTag[moduleName] = calculatedTag[moduleName] || {};
            calculatedTag = calculatedTag[moduleName];
          }
          var tagName = tagArray.shift();
          var tagExport = exports[tagName];
          tagExport = tagExport || exports.default;
          calculatedTag[tagName] = tagExport;
          _this._setRoute(route, params, null, setStateCallback);
        }, function (error) {
          tools.error('Loading package "' + route.source + '" failed with error:', {
            error: error,
            tagName: _this.constructor.tagName
          });
        });
      } else {
        tools.error('Route was not found and has not set any source to import.', {
          route: route,
          tagName: this.constructor.tagName
        });
        this._setRoute(route.notFoundRoute);
      }
    } else {
      tools.error('System is not defined in window! Cannot import source:', {
        source: route.source,
        tagName: this.constructor.tagName
      });
    }
    return this;
  },
  _setRoute: function _setRoute(newRoute, params, props, setStateCallback) {
    props = props || this.props;
    this.setState({ route: this._buildRoute(newRoute, params, null, props) }, setStateCallback);
    return this;
  },
  _getRouteByPath: function _getRouteByPath(searchedPath) {
    return this.props.routes[searchedPath] || null;
  },
  _routeByNavigation: function _routeByNavigation(event) {
    if (event.state) {
      if (event.state.index < this._routeIndex) {
        // go back
        this._routeIndex = event.state.index;
        // console.log('goBack', this._history[this._routeIndex], event.state, this._routeIndex, this._history);
      } else {
        // go forward
        this._routeIndex = event.state.index;
        // console.log('goForward', this._history[this._routeIndex], event.state, this._routeIndex, this._history);
      }
      var newRoute = this._history[this._routeIndex];
      newRoute && this.setState({ route: newRoute.component ? this._buildComponent(newRoute.component) : this._buildRoute(newRoute.path, newRoute.params, true) });
    }
    // else {
    //   console.log('goInvalid', window.location.pathname, event.state);
    // }
    return this;
  },
  _getUrl: function _getUrl(route, params, props) {
    props = props || this.props;
    var url = document.location.origin + (this._getBasePath(null, props) || '') + route;
    params && (url += tools.encodeQuery(params));
    return url;
  },
  _buildComponent: function _buildComponent(newRoute, params) {
    var newRouteChild = void 0;

    if (newRoute && (typeof newRoute === 'undefined' ? 'undefined' : router__typeof(newRoute)) === 'object') {
      var newProps = {
        parent: this.getParent()
      };

      params && (newProps.params = params);

      if (newRoute.tag) {
        var tag = tools.checkTag(newRoute.tag, true);
        var props = tools.merge({}, newRoute.props, newProps);
        newRouteChild = tag ? external___amd___react___commonjs___react___commonjs2___react___root___React___default.a.createElement(tag, props) : tools.findComponent(newRoute.tag, props);
      } else {
        newRouteChild = external___amd___react___commonjs___react___commonjs2___react___root___React___default.a.cloneElement(newRoute, newProps);
      }
    }

    return newRouteChild;
  },
  _buildRoute: function _buildRoute(route, params, replace, props) {
    var newRouteChild = null;
    props = props || this.props;

    if (route) {
      var newRoute = route;

      if (typeof route === 'string' && this.props.routes) {
        var foundRoute = this._getRouteByPath(route);
        var method = 'replaceState';

        if (foundRoute) {
          if (!foundRoute.noHistory) {
            if (this._routeIndex === null) {
              this._routeIndex = 0;
              this._history.push({ path: route, params: params });
            } else if (!replace) {
              this._routeIndex++;
              this._history.splice(this._routeIndex, this._history.length - 1);
              method = 'pushState';
              this._history.push({ path: route, params: params });
            }
          }

          // console.log(method, route, this._routeIndex, this._history);
          history[method]({ path: route, index: this._routeIndex }, document.title, this._getUrl(route, params, props));

          newRoute = foundRoute.component;
        }
      } else {
        var _foundRoute = route;
        var _method = 'replaceState';

        params = params || {};
        var path = void 0;

        if (params.url && router__typeof(params.url) === 'object') {
          var urlBuilder = this.props.urlBuilder || environment.getUrlBuilder() || common_url;
          path = urlBuilder.parse(window.location.href).set(params.url).toString();
        } else {
          path = params.url || window.location.href;
        }

        if (_foundRoute) {
          if (!params.noHistory) {
            if (this._routeIndex === null) {
              this._routeIndex = 0;
              this._history.push({ path: path, component: _foundRoute });
            } else if (!replace) {
              this._routeIndex++;
              this._history.splice(this._routeIndex, this._history.length - 1);
              _method = 'pushState';
              this._history.push({ path: path, component: _foundRoute });
            }
          }

          history[_method]({ path: path, index: this._routeIndex }, params.title || document.title, path);

          newRoute = _foundRoute;
        }
      }

      newRouteChild = this._buildComponent(newRoute, params);
    }

    if (newRouteChild && (!newRouteChild.type || !newRouteChild.type["UU5.Common.VucMixin"] && !newRouteChild.type["UU5.Common.RouteMixin"])) {
      tools.error('Route component which should be set is not Visual Use Case.', {
        routeParam: route,
        routeChild: newRouteChild,
        tagName: this.constructor.tagName
      });
    }

    return newRouteChild;
  },
  _buildChild: function _buildChild() {
    var child = void 0;

    if (this.state.route) {
      child = this.state.route;
    } else if (this.props.notFoundRoute) {
      child = this._buildRoute(this.props.notFoundRoute);
    } else {
      child = external___amd___react___commonjs___react___commonjs2___react___root___React___default.a.createElement('div', null);
      tools.error(this.constructor.tagName, 'Router has no content.');
    }

    return child;
  },

  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render: function render() {
    return this._buildChild();
  }
  //@@viewOff:render

});

/* harmony default export */ var common_router = (Router);
// CONCATENATED MODULE: ./core/common/uu5-string.js
var uu5_string__createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function uu5_string__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }



var uu5_string_UU5String = function () {
  function UU5String(str) {
    uu5_string__classCallCheck(this, UU5String);

    this._innerString = str;
    this._childrenArray = tools.getChildrenFromUu5String(str);
  }

  uu5_string__createClass(UU5String, [{
    key: 'getClass',
    value: function getClass() {
      return this.constructor.name;
    }
  }, {
    key: 'clone',
    value: function clone() {
      return new UU5String(this._innerString);
    }
  }, {
    key: 'innerString',
    get: function get() {
      return this._innerString;
    },
    set: function set(str) {
      if (this._innerString !== str) {
        this._childrenArray = tools.getChildrenFromUu5String(str);
        this._innerString = str;
      }
    }
  }, {
    key: 'childrenArray',
    get: function get() {
      return this._childrenArray;
    }
  }]);

  return UU5String;
}();

/* harmony default export */ var uu5_string = (uu5_string_UU5String);
// CONCATENATED MODULE: ./core/common/uu5-json.js
var uu5_json__createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function uu5_json__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }



var uu5_json_UU5Json = function () {
  function UU5Json(json) {
    uu5_json__classCallCheck(this, UU5Json);

    this._innerJson = json;
    this._value = tools.parseFromUu5JSON(json);
  }

  uu5_json__createClass(UU5Json, [{
    key: 'getClass',
    value: function getClass() {
      return this.constructor.name;
    }
  }, {
    key: 'clone',
    value: function clone() {
      return new UU5Json(this._innerJson);
    }
  }, {
    key: 'innerJson',
    get: function get() {
      return this._innerJson;
    },
    set: function set(json) {
      if (this._innerJson !== json) {
        this._value = tools.parseFromUu5JSON(json);
        this._innerJson = json;
      }
    }
  }, {
    key: 'value',
    get: function get() {
      return this._value;
    }
  }]);

  return UU5Json;
}();

/* harmony default export */ var uu5_json = (uu5_json_UU5Json);
// CONCATENATED MODULE: ./core/common/tag-placeholder.js










//import './tag-placeholder.less';

var TagPlaceholder = create_react_class({
  displayName: 'TagPlaceholder',


  //@@viewOn:mixins
  mixins: [base_mixin, elementary_mixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: common_ns.name("TagPlaceholder"),
    classNames: {
      main: common_ns.css("tag-placeholder")
    },
    errors: {
      serverError: 'Unexpected error: %s.'
    },
    defaults: {
      regexpVersion: /\/\d*\.\d*\.\d*(?:-[a-z]+\d+(?:\.\d){0,2})?\//g,
      regexpSlash: /\//g,
      regexpDigit: /^\d/g
    },
    opt: {
      hoc: true
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    tagName: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.string,
    props: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.object,
    content: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.oneOfType([external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.arrayOf(external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.node), external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.node])
  },
  //@@viewOff:propTypes
  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      tagName: null,
      props: null,
      content: null
    };
  },

  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  getInitialState: function getInitialState() {
    return {
      component: null
    };
  },
  componentDidMount: function componentDidMount() {
    this._findLib();
  },
  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    var component = nextProps.tagName && tools.checkTag(nextProps.tagName);
    component ? this._setComponent(component, nextProps.props) : this._findLib(nextProps);

    return this;
  },


  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _findLib: function _findLib(props) {
    var _this = this;

    props = props || this.props;
    var tagNameArr = props.tagName.split('.');
    var libraryName = tagNameArr[0] + '.' + tagNameArr[1];

    var library = environment.getLibrary(libraryName);

    if (library && library.error) {
      this._setComponent(null, { tagName: props.tagName, props: props.props });
    } else {
      var dtoIn = {
        code: libraryName
      };
      library && library.version && (dtoIn.version = library.version);

      var url = environment.COMPONENT_REGISTRY_URL;
      var query = tools.encodeQuery(dtoIn);
      url += query;

      if (!environment.tagCalls[query]) {
        environment.tagCalls[query] = [this._setComponent.bind(this, props.tagName, props.props)];

        var request = new XMLHttpRequest();
        request.onreadystatechange = function () {
          if (request.readyState === XMLHttpRequest.DONE) {
            var tagCalls = environment.tagCalls[query];
            delete environment.tagCalls[query];

            if (request.status === 200) {
              var response = JSON.parse(request.response);

              // TODO: componentRegistry must return error, not 200
              if (response.source) {
                _this._importLibrary(response, response.dependencies, tagCalls);
                return;
              }
            }

            _this.showError('serverError', request.response, {
              component: _this.getTagName(),
              searchedTag: props.tagName,
              library: library || libraryName
            });
            _this._setLibError(libraryName);
            _this._setNotFound(tagCalls);
          }
        };
        request.open('GET', url, true);
        request.setRequestHeader("Content-Type", "application/json");
        request.send(JSON.stringify(dtoIn));
      } else {
        environment.tagCalls[query].push(this._setComponent.bind(this, props.tagName, props.props));
      }
    }

    return this;
  },
  _getSourceUrl: function _getSourceUrl(library) {
    var result = void 0;
    if (library && library.name && library.version) {
      var baseName = library.name.replace('_basic', '').replace('_forms', '');
      var sourceName = library.name.replace('uu_', '');
      result = environment.CDN_URL + '/' + baseName + '/' + library.version + '/' + sourceName + '.js';
    }
    return result;
  },
  _setComponent: function _setComponent(tagName, props) {
    // props = props || this.props.props;

    var component = tagName && tools.checkTag(tagName);
    if (!component) {
      component = common_not_found_tag;
      props = tools.merge({}, props);
      props.tagName = props.tagName || tagName;
    }

    component && this.setState({ component: component, props: props });
    return this;
  },
  _setNotFound: function _setNotFound(tagCalls) {
    tagCalls.forEach(function (fce) {
      return fce();
    });
    return this;
  },
  _setLibError: function _setLibError(libCode) {
    var libSettings = environment.getLibrary(libCode);
    if (libSettings) {
      libSettings.error = true;
    } else {
      environment.addLibrary(libCode, { error: true });
    }
    return this;
  },
  _getVersionFromUrl: function _getVersionFromUrl(url) {
    var version = null;
    version = url.match(this.getDefault().regexpVersion);
    version && version[0] && (version = version[0].replace(this.getDefault().regexpSlash, ''));
    return version;
  },
  _getVersionObject: function _getVersionObject(version) {
    var ver = version.split('.');
    return {
      major: parseInt(ver[0]),
      minor: parseInt(ver[1]),
      build: parseInt(ver[2])
    };
  },
  _compareDependencies: function _compareDependencies(version, dependency) {
    var result = true;
    var dependencyVersion = void 0;

    if (this.getDefault().regexpDigit.test(dependency)) {
      dependencyVersion = dependency;
    } else {
      dependencyVersion = this._getVersionFromUrl(dependency);
    }

    if (dependencyVersion && version !== dependencyVersion) {

      var ver = this._getVersionObject(version);
      var verDep = this._getVersionObject(dependencyVersion);

      if (ver.major !== verDep.major) {
        // 1.0.0 x 2.0.0 || 1.0.0 x 0.1.1
        result = false;
      } else if (ver.minor < verDep.minor) {
        // 1.0.0 x 1.1.0
        result = false;
      } else if (ver.minor === verDep.minor && ver.build < verDep.build) {
        // 1.0.0 x 1.0.1
        result = false;
      }

      if (!result) {
        this._setDependencyError(version, dependencyVersion);
      }
    }

    return true;
  },
  _setDependencyError: function _setDependencyError(version, dependencyVersion) {
    tools.error('Wrong dependency.', {
      tag: this.props.tagName,
      ver: version,
      dependencyVersion: dependencyVersion
    });

    return this;
  },
  _updateDependencies: function _updateDependencies(dependencies) {
    var _this2 = this;

    if (dependencies['uu5g04'] && this._compareDependencies(environment.version, dependencies['uu5g04'])) {
      delete dependencies['uu5g04'];
      if (window.UU5) {
        window.UU5.Bricks && Object.keys(window.UU5.Bricks).length && delete dependencies['uu5g04-bricks'];
        window.UU5.Forms && Object.keys(window.UU5.Forms).length && delete dependencies['uu5g04-forms'];
      }
    }
    if (window.Plus4U5 && dependencies['uu_plus4u5g01'] && this._compareDependencies(window.Plus4U5.Environment.version, dependencies['uu_plus4u5g01'])) {
      delete dependencies['uu_plus4u5g01'];
      window.Plus4U5.App && Object.keys(window.Plus4U5.App).length && delete dependencies['uu_plus4u5g01-app'];
      window.Plus4U5.Bricks && Object.keys(window.Plus4U5.Bricks).length && delete dependencies['uu_plus4u5g01-bricks'];
    }

    Object.keys(dependencies).forEach(function (key) {
      if (_this2.getDefault().regexpDigit.test(dependencies[key])) {
        var library = {
          name: key,
          version: dependencies[key]
        };
        var source = _this2._getSourceUrl(library);
        source && (dependencies[key] = source);
      }
    });

    return dependencies;
  },
  _importLibrary: function _importLibrary(library, dependencies, tagCalls) {
    var source = library.source;
    if (!source) {
      source = this._getSourceUrl(library);
    }

    if (window.System && window.System.import) {
      if (source) {
        System.config({ map: this._updateDependencies(dependencies) });

        System.import(source).then(function () {
          tagCalls.forEach(function (fce) {
            return fce();
          });
        });
      } else {
        tools.error('System was not found and has not set any source to import.', {
          source: source,
          tagName: this.props.tagName
        });
        this._setLibError(library.code);
        this._setNotFound(tagCalls);
      }
    } else {
      tools.error('System is not defined in window! Cannot import source:', {
        source: source,
        tagName: this.props.tagName
      });
      this._setLibError(library.code);
      this._setNotFound(tagCalls);
    }
    return this;
  },

  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render: function render() {
    return this.state.component ? external___amd___react___commonjs___react___commonjs2___react___root___React___default.a.createElement(this.state.component, tools.merge({}, this.state.props, { parent: this.getParent() }), this.props.content) : null;
  }
  //@@viewOff:render

});

/* harmony default export */ var tag_placeholder = (TagPlaceholder);
// EXTERNAL MODULE: ./core/common/text-corrector.less
var text_corrector = __webpack_require__(31);
var text_corrector_default = /*#__PURE__*/__webpack_require__.n(text_corrector);

// CONCATENATED MODULE: ./core/common/text-corrector.js
var text_corrector__typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };













var TextCorrector = create_react_class({
  displayName: 'TextCorrector',


  //@@viewOn:mixins
  mixins: [base_mixin, elementary_mixin, pure_render_mixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: common_ns.name("TextCorrector"),
    classNames: {
      main: common_ns.css("text-corrector"),
      error: common_ns.css("text-corrector-error"),
      highlight: common_ns.css("text-corrector-highlight")
    },
    defaults: {
      highlightEvent: tools.events.highlight
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    text: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.string,
    language: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.string,
    checkSpaces: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.bool,
    ignoreGrammar: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.bool,
    checkHighlight: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.bool
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      text: '',
      language: null,
      checkSpaces: false,
      ignoreGrammar: false,
      checkHighlight: false
    };
  },

  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  getInitialState: function getInitialState() {
    return {
      text: this._correctSpaces(this.props.text)
    };
  },
  componentDidMount: function componentDidMount() {
    this._switchHighlight(true);
    this._correctText(this.state.text, null, true);
  },
  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    this._correctText(nextProps.text);
  },
  componentWillUnmount: function componentWillUnmount() {
    this._switchHighlight(false);
  },

  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _correctSpaces: function _correctSpaces(text) {
    var newText = text;
    if (this.props.checkSpaces) {
      newText = this.replaceByHardSpace(text, this.props.language);
    }
    return newText;
  },
  _isValidWord: function _isValidWord(word) {
    var result = true;

    var text = /[A-Za-z]+/i.exec(word);
    if (text) {
      result = text[0].toLowerCase() !== 'vidra';
    }

    return result;
  },
  _isHighlightWord: function _isHighlightWord(word, searchedText) {
    return word.toLowerCase().indexOf(searchedText) > -1;
  },
  _checkWords: function _checkWords(text, searchedTexts) {
    var _this = this;

    var newTextChildren = [];
    var spaceTmp = [];

    var spaceSplitter = text.split(' ');
    spaceSplitter.forEach(function (word) {
      if (word.indexOf(environment.hardSpace.nbSpace) > -1) {
        var nbspSplitter = word.split(environment.hardSpace.nbSpace);
        var nbspTmp = [];

        nbspSplitter.forEach(function (word) {
          var newWord = _this._checkWord(word, searchedTexts);
          if (typeof newWord === 'string') {
            nbspTmp.push(newWord);
          } else {
            if (nbspTmp.length) {
              spaceTmp.push(nbspTmp.join(environment.hardSpace.nbSpace));
              nbspTmp = [];
            }

            if (spaceTmp.length) {
              newTextChildren.push((newTextChildren.length ? ' ' : '') + spaceTmp.join(' ') + environment.hardSpace.nbSpace);
              spaceTmp = [];
            }

            typeof newTextChildren[newTextChildren.length - 1] !== 'string' && newTextChildren.push(environment.hardSpace.nbSpace);
            newTextChildren.push(newWord);
          }
        });

        if (nbspTmp.length) {
          spaceTmp.push(nbspTmp.join(environment.hardSpace.nbSpace));
          nbspTmp = [];
        }
      } else {
        var newWord = _this._checkWord(word, searchedTexts);

        if (typeof newWord === 'string') {
          spaceTmp.push(newWord);
        } else {
          if (spaceTmp.length) {
            newTextChildren.push((newTextChildren.length ? ' ' : '') + spaceTmp.join(' ') + ' ');
            spaceTmp = [];
          }
          text_corrector__typeof(newTextChildren[newTextChildren.length - 1]) === 'object' && newTextChildren.push(' ');
          newTextChildren.push(newWord);
        }
      }
    });

    if (spaceTmp.length) {
      newTextChildren.push((newTextChildren.length ? ' ' : '') + spaceTmp.join(' '));
      spaceTmp = [];
    }

    return external___amd___react___commonjs___react___commonjs2___react___root___React___default.a.Children.toArray(newTextChildren);
  },
  _checkWord: function _checkWord(word, searchedTexts) {
    var result = word;

    if (this.props.checkHighlight && searchedTexts) {
      var searchedText = this._getSearchedText(word, searchedTexts);
      if (searchedText) {
        // full word
        // result = <span className={this.getClassName().highlight}>{word}</span>;

        var startIndex = word.toLowerCase().indexOf(searchedText.toLowerCase());
        var endIndex = startIndex + searchedText.length - 1;
        var searchedPart = word.substr(startIndex, searchedText.length);
        result = [];

        var highlighter = external___amd___react___commonjs___react___commonjs2___react___root___React___default.a.createElement(
          'span',
          { className: this.getClassName().highlight },
          searchedPart
        );

        if (startIndex > 0) {
          result.push(word.substr(0, endIndex + 1 - searchedPart.length));
        }

        result.push(highlighter);

        if (endIndex < word.length - 1) {
          result.push(word.substr(endIndex + 1, word.length - endIndex - 1));
        }
      }
    }

    if (this.props.checkGrammar && !this._isValidWord(word)) {
      result = external___amd___react___commonjs___react___commonjs2___react___root___React___default.a.createElement(
        'span',
        { className: this.getClassName().error },
        Array.isArray(result) ? external___amd___react___commonjs___react___commonjs2___react___root___React___default.a.Children.toArray(result) : result
      );
    }

    return result;
  },
  _correctText: function _correctText(text, searchedTexts, isDidMount) {
    var newText = text;
    if (!isDidMount && this.props.checkSpaces) {
      newText = this._correctSpaces(text);
    }

    if (this.props.checkGrammar || this.props.checkHighlight && searchedTexts) {
      newText = this._checkWords(newText || text, searchedTexts);
    }

    if (!isDidMount || text !== newText) {
      this.setState({ text: newText, searchedTexts: searchedTexts });
    }

    return this;
  },
  _switchHighlight: function _switchHighlight(start) {
    if (this.props.checkHighlight) {
      if (start) {
        window.UU5.Environment.EventListener.registerHighlight(this.getId(), this._checkHighlight);
      } else {
        window.UU5.Environment.EventListener.unregisterHighlight(this.getId(), this._checkHighlight);
      }
    }
    return this;
  },
  _getSearchedText: function _getSearchedText(text, searchedTexts) {
    var result = null;
    text = text.toLowerCase();
    for (var i = 0; i < searchedTexts.length; i++) {
      if (text.indexOf(searchedTexts[i].toLowerCase()) > -1) {
        result = searchedTexts[i];
        break;
      }
    }
    return result;
  },
  _checkHighlight: function _checkHighlight(searchedTexts) {
    if (searchedTexts && searchedTexts.length > 0) {
      searchedTexts = Array.isArray(searchedTexts) ? searchedTexts : [searchedTexts];
    } else {
      searchedTexts = null;
    }

    if (!searchedTexts || this.state.searchedTexts || this._getSearchedText(this.props.text, searchedTexts)) {
      this._correctText(this.props.text, searchedTexts);
    }

    return this;
  },

  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render: function render() {
    return external___amd___react___commonjs___react___commonjs2___react___root___React___default.a.createElement(
      'span',
      this.getMainAttrs(),
      this.state.text,
      this.getDisabledCover()
    );
  }
  //@@viewOff:render

});

/* harmony default export */ var common_text_corrector = (TextCorrector);
// CONCATENATED MODULE: ./core/common/outline-modal.js








var OutlineModal = create_react_class({
  displayName: 'OutlineModal',


  //@@viewOn:mixins
  mixins: [base_mixin, elementary_mixin, pure_render_mixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: common_ns.name("Outline.Modal"),
    classNames: {
      main: common_ns.css("outline-modal")
    },
    errors: {
      invalidParent: 'Parent of this component is not Outline.'
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  getInitialState: function getInitialState() {
    return {
      tag: null,
      props: null
    };
  },

  componentWillMount: function componentWillMount() {
    if (!this.getParentByType('isOutline')) {
      this.showError("invalidParent");
    }
  },

  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  open: function open(tag, props, setStateCallback) {
    this.setState({ shown: true, tag: tag, props: props }, setStateCallback);
    return this;
  },

  close: function close(setStateCallback) {
    this.setState({ shown: false, tag: null, props: null }, setStateCallback);
    return this;
  },
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render: function render() {
    var props = tools.mergeDeep({}, this.getMainPropsToPass(), {
      shown: this.state.shown,
      header: this.state.tag,
      content: external___amd___react___commonjs___react___commonjs2___react___root___React___default.a.createElement(
        'pre',
        null,
        this.state.props
      )
    });
    return tools.findComponent('UU5.Bricks.Modal', props);
  }
  //@@viewOff:render
});

/* harmony default export */ var outline_modal = (OutlineModal);
// EXTERNAL MODULE: ./core/common/outline.less
var outline = __webpack_require__(33);
var outline_default = /*#__PURE__*/__webpack_require__.n(outline);

// CONCATENATED MODULE: ./core/common/outline.js













var Outline = create_react_class({
  displayName: 'Outline',


  //@@viewOn:mixins
  mixins: [base_mixin, elementary_mixin, pure_render_mixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: common_ns.name("Outline"),
    classNames: {
      main: common_ns.css("outline")
    },
    defaults: {
      propsIcon: 'mdi-information-outline'
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    element: external___amd___prop_types___commonjs___prop_types___commonjs2___prop_types___root___PropTypes___default.a.object
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      element: null
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  isOutline: function isOutline() {
    return true;
  },

  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _openModal: function _openModal(tag, props) {
    var propsString = JSON.stringify(props, null, 2);
    this.modal.open(tag, propsString);
    return this;
  },

  _buildOutlineItem: function _buildOutlineItem(tag, props, isContent) {
    var newProps = {};
    var items = null;

    if (props) {
      for (var prop in props) {
        var value = props[prop];
        if (prop === 'parent' && value) {
          value = value.getTagName();
        } else if (typeof value === 'function') {
          value = 'function()';
        }
        newProps[prop] = value;
      }

      if (isContent && typeof props.children !== 'string') {
        items = this._buildOutlineItems(props.children);
        delete newProps.children;
      }
    }

    var link = null;
    if (Object.keys(newProps).length) {
      link = tools.findComponent('UU5.Bricks.Link', {
        onClick: this._openModal.bind(this, tag, newProps),
        content: tools.findComponent('UU5.Bricks.Icon', { icon: this.getDefault().propsIcon })
      });
    }

    var newItemProps = {
      label: tools.findComponent('UU5.Bricks.Span', {
        parent: this,
        content: [tag, link]
      })
    };

    items && (newItemProps.items = items);

    return newItemProps;
  },

  _buildOutlineItems: function _buildOutlineItems(children) {
    var content = this;
    var items = null;

    if (children) {
      !Array.isArray(children) && (children = [children]);

      children.forEach(function (child) {
        items = items || [];
        items.push(content._buildOutlineItem(UU5.Common.Tools.getChildTagName(child), child.props, !!child.type["UU5.Common.ContentMixin"]));
      });
    }

    return items;
  },

  _refModal: function _refModal(modal) {
    this.modal = modal;
    return this;
  },
  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render: function render() {
    var children = this.props.element.getStandardChildren();
    var item = this._buildOutlineItem(this.props.element.getTagName(), UU5.Common.Tools.merge({}, this.props.element.props, { children: children }), true);

    return external___amd___react___commonjs___react___commonjs2___react___root___React___default.a.createElement(
      'div',
      this.getMainAttrs(),
      tools.findComponent('UU5.Bricks.Tree', { items: [item] }),
      external___amd___react___commonjs___react___commonjs2___react___root___React___default.a.createElement(outline_modal, { ref: this._refModal, parent: this }),
      this.getDisabledCover()
    );
  }
  //@@viewOff:render
});

/* harmony default export */ var common_outline = (Outline);
// CONCATENATED MODULE: ./core/common/common.js




































// CONCATENATED MODULE: ./core/common/common-lsi.js
var CommonLsi = {
  loadMixin: {
    error: {
      cs: 'Data ze serveru nebylo možné načíst.',
      en: 'Data from server cannot be loaded.'
    }
  },
  vucMixin: {
    notAuthorized: {
      cs: 'Nemáte práva na zobrazení vizuálního případu užití.',
      en: 'You have not permission to show visual use case.'
    },
    serverConnection: {
      cs: 'Server je dočasně nedostupný.',
      en: 'Server is temporarily unavailable.'
    }
  },
  error: {
    showErrorDetails: {
      cs: 'Zobrazit podrobnosti o chybě.',
      en: 'View error details.'
    },
    hideErrorDetails: {
      cs: 'Skrýt podrobnosti o chybě.',
      en: 'Hide error details.'
    }
  }
};

/* harmony default export */ var common_lsi = (CommonLsi);
// CONCATENATED MODULE: ./core/environment/icons.js
var prefix = 'uu5-';
var alertCircle = prefix + 'alert-circle';
var arrowDown = prefix + 'arrow-down';
var arrowLeft = prefix + 'arrow-left';
var arrowRight = prefix + 'arrow-right';
var arrowUp = prefix + 'arrow-up';
var calendar = prefix + 'calendar';
var clock = prefix + 'clock';
var cross = prefix + 'cross';
var errorCircle = prefix + 'error-circle';
var finder = prefix + 'finder';
var flagUpload = prefix + 'flag-upload';
var menu = prefix + 'menu';
var minus = prefix + 'minus';
var ok = prefix + 'ok';
var okCircle = prefix + 'ok-circle';
var person = prefix + 'person';
var picture = prefix + 'picture';
var plus = prefix + 'plus';
var point = prefix + 'point';
var thumb = prefix + 'thumb';
// CONCATENATED MODULE: ./core/core.js
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Environment", function() { return core_environment; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Bricks", function() { return Bricks; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Forms", function() { return Forms; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CodeKit", function() { return CodeKit; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "Common", function() { return common_namespaceObject; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "Icons", function() { return icons_namespaceObject; });
var core_UU5 = window.UU5 || {};


var core_environment = environment;



core_UU5.Common = common_namespaceObject;

if (core_UU5.Environment) {
  core_environment = core_UU5.Common.Tools.merge(environment, core_UU5.Environment);
}


core_environment.EventListener = new event_listener();


core_environment.Lsi.Common = common_lsi;


core_UU5.Environment = core_environment;

// import * as Layout from './layout/layout.js';
// export {Layout};
// UU5.Layout = Layout;



core_UU5.Icons = icons_namespaceObject;

// workaround so that on-demand loaded UU5 modules can insert their own components
// into UU5 exports; i.e. if an application uses following:
//  import * as UU5 from "uu5g04";  // UU5 is a local variable containing new (separate) instance of exports
//  import "uu5g04-forms";
// then uu5g04-forms (UU5 module) wants to add "Forms" key into "root" of uu5g04 exports which
// isn't possible (exports are frozen by SystemJS), so instead uu5g04-forms will inject its components into
// pre-existing "Forms" key within uu5g04 exports
var Bricks = core_UU5.Bricks = {};


var Forms = core_UU5.Forms = {};


var CodeKit = core_UU5.CodeKit = {};


// const Addons = UU5.Addons = {};
// export {Addons};
// ...

window.UU5 = core_UU5;
/* harmony default export */ var core = __webpack_exports__["default"] = (core_UU5);

/***/ }),
/* 10 */
/*!***********************************!*\
  !*** ./core/common/normalize.css ***!
  \***********************************/
/*! no static exports found */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(/*! !../../../node_modules/css-loader??ref--0-oneOf-1-1!./normalize.css */ 11);
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ 3)(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../../node_modules/css-loader/index.js??ref--0-oneOf-1-1!./normalize.css", function() {
			var newContent = require("!!../../../node_modules/css-loader/index.js??ref--0-oneOf-1-1!./normalize.css");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),
/* 11 */
/*!*********************************************************************************!*\
  !*** ../node_modules/css-loader?{"minimize":false}!./core/common/normalize.css ***!
  \*********************************************************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/lib/css-base.js */ 2)(undefined);
// imports
exports.push([module.i, "@import url(https://cdn.plus4u.net/libs/clearsans/1.0.0/fonts/clear-sans.min.css);", ""]);

// module
exports.push([module.i, "/**\r\n * 1. Correct the line height in all browsers.\r\n * 2. Prevent adjustments of font size after orientation changes in\r\n *    IE on Windows Phone and in iOS.\r\n */\r\n\r\nhtml {\r\n  line-height: 1.15; /* 1 */\r\n  -ms-text-size-adjust: 100%; /* 2 */\r\n  -webkit-text-size-adjust: 100%; /* 2 */\r\n}\r\n\r\n/* Sections\r\n   ========================================================================== */\r\n\r\n/**\r\n * Remove the margin in all browsers (opinionated).\r\n */\r\n\r\nbody {\r\n  margin: 0;\r\n}\r\n\r\n/**\r\n * Add the correct display in IE 9-.\r\n */\r\n\r\narticle,\r\naside,\r\nfooter,\r\nheader,\r\nnav,\r\nsection {\r\n  display: block;\r\n}\r\n\r\n/* Grouping content\r\n   ========================================================================== */\r\n\r\n/**\r\n * Add the correct display in IE 9-.\r\n * 1. Add the correct display in IE.\r\n */\r\n\r\nfigcaption,\r\nfigure,\r\nmain { /* 1 */\r\n  display: block;\r\n}\r\n\r\n/**\r\n * Add the correct margin in IE 8.\r\n */\r\n\r\nfigure {\r\n  margin: 1em 40px;\r\n}\r\n\r\n/**\r\n * 1. Add the correct box sizing in Firefox.\r\n * 2. Show the overflow in Edge and IE.\r\n */\r\n\r\nhr {\r\n  box-sizing: content-box; /* 1 */\r\n  height: 0; /* 1 */\r\n  overflow: visible; /* 2 */\r\n}\r\n\r\n/**\r\n * 1. Correct the inheritance and scaling of font size in all browsers.\r\n * 2. Correct the odd `em` font sizing in all browsers.\r\n */\r\n\r\npre {\r\n  font-family: monospace, monospace; /* 1 */\r\n  font-size: 1em; /* 2 */\r\n}\r\n\r\n/* Text-level semantics\r\n   ========================================================================== */\r\n\r\n/**\r\n * 1. Remove the gray background on active links in IE 10.\r\n * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.\r\n */\r\n\r\na {\r\n  background-color: transparent; /* 1 */\r\n  -webkit-text-decoration-skip: objects; /* 2 */\r\n}\r\n\r\n/**\r\n * 1. Remove the bottom border in Chrome 57- and Firefox 39-.\r\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\r\n */\r\n\r\nabbr[title] {\r\n  border-bottom: none; /* 1 */\r\n  text-decoration: underline; /* 2 */\r\n  text-decoration: underline dotted; /* 2 */\r\n}\r\n\r\n/**\r\n * Prevent the duplicate application of `bolder` by the next rule in Safari 6.\r\n */\r\n\r\nb,\r\nstrong {\r\n  font-weight: inherit;\r\n}\r\n\r\n/**\r\n * Add the correct font weight in Chrome, Edge, and Safari.\r\n */\r\n\r\nb,\r\nstrong {\r\n  font-weight: bolder;\r\n}\r\n\r\n/**\r\n * 1. Correct the inheritance and scaling of font size in all browsers.\r\n * 2. Correct the odd `em` font sizing in all browsers.\r\n */\r\n\r\ncode,\r\nkbd,\r\nsamp {\r\n  font-family: monospace, monospace; /* 1 */\r\n  font-size: 1em; /* 2 */\r\n}\r\n\r\n/**\r\n * Add the correct font style in Android 4.3-.\r\n */\r\n\r\ndfn {\r\n  font-style: italic;\r\n}\r\n\r\n/**\r\n * Add the correct background and color in IE 9-.\r\n */\r\n\r\nmark {\r\n  background-color: #ff0;\r\n  color: #000;\r\n}\r\n\r\n/**\r\n * Add the correct font size in all browsers.\r\n */\r\n\r\nsmall {\r\n  font-size: 80%;\r\n}\r\n\r\n/**\r\n * Prevent `sub` and `sup` elements from affecting the line height in\r\n * all browsers.\r\n */\r\n\r\nsub,\r\nsup {\r\n  font-size: 75%;\r\n  line-height: 0;\r\n  position: relative;\r\n  vertical-align: baseline;\r\n}\r\n\r\nsub {\r\n  bottom: -0.25em;\r\n}\r\n\r\nsup {\r\n  top: -0.5em;\r\n}\r\n\r\n/* Embedded content\r\n   ========================================================================== */\r\n\r\n/**\r\n * Add the correct display in IE 9-.\r\n */\r\n\r\naudio,\r\nvideo {\r\n  display: inline-block;\r\n}\r\n\r\n/**\r\n * Add the correct display in iOS 4-7.\r\n */\r\n\r\naudio:not([controls]) {\r\n  display: none;\r\n  height: 0;\r\n}\r\n\r\n/**\r\n * Remove the border on images inside links in IE 10-.\r\n */\r\n\r\nimg {\r\n  border-style: none;\r\n}\r\n\r\n/**\r\n * Hide the overflow in IE.\r\n */\r\n\r\nsvg:not(:root) {\r\n  overflow: hidden;\r\n}\r\n\r\n/* Forms\r\n   ========================================================================== */\r\n\r\n/**\r\n * 1. Change the font styles in all browsers (opinionated).\r\n * 2. Remove the margin in Firefox and Safari.\r\n */\r\nhtml {\r\n  font-family: ClearSans, sans-serif; /* 1 */\r\n}\r\n\r\nbutton,\r\ninput,\r\noptgroup,\r\nselect,\r\ntextarea {\r\n  font-family: inherit; /* 1 */\r\n  font-size: 100%; /* 1 */\r\n  line-height: 1.15; /* 1 */\r\n  margin: 0; /* 2 */\r\n}\r\n\r\n/**\r\n * Show the overflow in IE.\r\n * 1. Show the overflow in Edge.\r\n */\r\n\r\nbutton,\r\ninput { /* 1 */\r\n  overflow: visible;\r\n}\r\n\r\n/**\r\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\r\n * 1. Remove the inheritance of text transform in Firefox.\r\n */\r\n\r\nbutton,\r\nselect { /* 1 */\r\n  text-transform: none;\r\n}\r\n\r\n/**\r\n * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`\r\n *    controls in Android 4.\r\n * 2. Correct the inability to style clickable types in iOS and Safari.\r\n */\r\n\r\nbutton,\r\nhtml [type=\"button\"], /* 1 */\r\n[type=\"reset\"],\r\n[type=\"submit\"] {\r\n  -webkit-appearance: button; /* 2 */\r\n}\r\n\r\n/**\r\n * Remove the inner border and padding in Firefox.\r\n */\r\n\r\nbutton::-moz-focus-inner,\r\n[type=\"button\"]::-moz-focus-inner,\r\n[type=\"reset\"]::-moz-focus-inner,\r\n[type=\"submit\"]::-moz-focus-inner {\r\n  border-style: none;\r\n  padding: 0;\r\n}\r\n\r\n/**\r\n * Restore the focus styles unset by the previous rule.\r\n */\r\n\r\nbutton:-moz-focusring,\r\n[type=\"button\"]:-moz-focusring,\r\n[type=\"reset\"]:-moz-focusring,\r\n[type=\"submit\"]:-moz-focusring {\r\n  outline: 1px dotted ButtonText;\r\n}\r\n\r\n/**\r\n * Correct the padding in Firefox.\r\n */\r\n\r\nfieldset {\r\n  padding: 0.35em 0.75em 0.625em;\r\n}\r\n\r\n/**\r\n * 1. Correct the text wrapping in Edge and IE.\r\n * 2. Correct the color inheritance from `fieldset` elements in IE.\r\n * 3. Remove the padding so developers are not caught out when they zero out\r\n *    `fieldset` elements in all browsers.\r\n */\r\n\r\nlegend {\r\n  box-sizing: border-box; /* 1 */\r\n  color: inherit; /* 2 */\r\n  display: table; /* 1 */\r\n  max-width: 100%; /* 1 */\r\n  padding: 0; /* 3 */\r\n  white-space: normal; /* 1 */\r\n}\r\n\r\n/**\r\n * 1. Add the correct display in IE 9-.\r\n * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.\r\n */\r\n\r\nprogress {\r\n  display: inline-block; /* 1 */\r\n  vertical-align: baseline; /* 2 */\r\n}\r\n\r\n/**\r\n * Remove the default vertical scrollbar in IE.\r\n */\r\n\r\ntextarea {\r\n  overflow: auto;\r\n}\r\n\r\n/**\r\n * 1. Add the correct box sizing in IE 10-.\r\n * 2. Remove the padding in IE 10-.\r\n */\r\n\r\n[type=\"checkbox\"],\r\n[type=\"radio\"] {\r\n  box-sizing: border-box; /* 1 */\r\n  padding: 0; /* 2 */\r\n}\r\n\r\n/**\r\n * Correct the cursor style of increment and decrement buttons in Chrome.\r\n */\r\n\r\n[type=\"number\"]::-webkit-inner-spin-button,\r\n[type=\"number\"]::-webkit-outer-spin-button {\r\n  height: auto;\r\n}\r\n\r\n/**\r\n * 1. Correct the odd appearance in Chrome and Safari.\r\n * 2. Correct the outline style in Safari.\r\n */\r\n\r\n[type=\"search\"] {\r\n  -webkit-appearance: textfield; /* 1 */\r\n  outline-offset: -2px; /* 2 */\r\n}\r\n\r\n/**\r\n * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.\r\n */\r\n\r\n[type=\"search\"]::-webkit-search-cancel-button,\r\n[type=\"search\"]::-webkit-search-decoration {\r\n  -webkit-appearance: none;\r\n}\r\n\r\n/**\r\n * 1. Correct the inability to style clickable types in iOS and Safari.\r\n * 2. Change font properties to `inherit` in Safari.\r\n */\r\n\r\n::-webkit-file-upload-button {\r\n  -webkit-appearance: button; /* 1 */\r\n  font: inherit; /* 2 */\r\n}\r\n\r\n/* Interactive\r\n   ========================================================================== */\r\n\r\n/*\r\n * Add the correct display in IE 9-.\r\n * 1. Add the correct display in Edge, IE, and Firefox.\r\n */\r\n\r\ndetails, /* 1 */\r\nmenu {\r\n  display: block;\r\n}\r\n\r\n/*\r\n * Add the correct display in all browsers.\r\n */\r\n\r\nsummary {\r\n  display: list-item;\r\n}\r\n\r\n/* Scripting\r\n   ========================================================================== */\r\n\r\n/**\r\n * Add the correct display in IE 9-.\r\n */\r\n\r\ncanvas {\r\n  display: inline-block;\r\n}\r\n\r\n/**\r\n * Add the correct display in IE.\r\n */\r\n\r\ntemplate {\r\n  display: none;\r\n}\r\n\r\n/* Hidden\r\n   ========================================================================== */\r\n\r\n/**\r\n * Add the correct display in IE 10-.\r\n */\r\n\r\n[hidden] {\r\n  display: none;\r\n}\r\n", ""]);

// exports


/***/ }),
/* 12 */
/*!************************************************!*\
  !*** ../node_modules/style-loader/lib/urls.js ***!
  \************************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */
/***/ (function(module, exports) {


/**
 * When source maps are enabled, `style-loader` uses a link element with a data-uri to
 * embed the css on the page. This breaks all relative urls because now they are relative to a
 * bundle instead of the current page.
 *
 * One solution is to only use full urls, but that may be impossible.
 *
 * Instead, this function "fixes" the relative urls to be absolute according to the current page location.
 *
 * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.
 *
 */

module.exports = function (css) {
	// get current location
	var location = typeof window !== "undefined" && window.location;

	if (!location) {
		throw new Error("fixUrls requires window.location");
	}

	// blank or null?
	if (!css || typeof css !== "string") {
		return css;
	}

	var baseUrl = location.protocol + "//" + location.host;
	var currentDir = baseUrl + location.pathname.replace(/\/[^\/]*$/, "/");

	// convert each url(...)
	/*
 This regular expression is just a way to recursively match brackets within
 a string.
 	 /url\s*\(  = Match on the word "url" with any whitespace after it and then a parens
    (  = Start a capturing group
      (?:  = Start a non-capturing group
          [^)(]  = Match anything that isn't a parentheses
          |  = OR
          \(  = Match a start parentheses
              (?:  = Start another non-capturing groups
                  [^)(]+  = Match anything that isn't a parentheses
                  |  = OR
                  \(  = Match a start parentheses
                      [^)(]*  = Match anything that isn't a parentheses
                  \)  = Match a end parentheses
              )  = End Group
              *\) = Match anything and then a close parens
          )  = Close non-capturing group
          *  = Match anything
       )  = Close capturing group
  \)  = Match a close parens
 	 /gi  = Get all matches, not the first.  Be case insensitive.
  */
	var fixedCss = css.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi, function (fullMatch, origUrl) {
		// strip quotes (if they exist)
		var unquotedOrigUrl = origUrl.trim().replace(/^"(.*)"$/, function (o, $1) {
			return $1;
		}).replace(/^'(.*)'$/, function (o, $1) {
			return $1;
		});

		// already a full url? no change
		if (/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/)/i.test(unquotedOrigUrl)) {
			return fullMatch;
		}

		// convert the url to a full url
		var newUrl;

		if (unquotedOrigUrl.indexOf("//") === 0) {
			//TODO: should we add protocol?
			newUrl = unquotedOrigUrl;
		} else if (unquotedOrigUrl.indexOf("/") === 0) {
			// path should be relative to the base url
			newUrl = baseUrl + unquotedOrigUrl; // already starts with '/'
		} else {
			// path should be relative to current directory
			newUrl = currentDir + unquotedOrigUrl.replace(/^\.\//, ""); // Strip leading './'
		}

		// send back the fixed url(...)
		return "url(" + JSON.stringify(newUrl) + ")";
	});

	// send back the fixed css
	return fixedCss;
};

/***/ }),
/* 13 */
/*!*********************************!*\
  !*** ./core/common/common.less ***!
  \*********************************/
/*! no static exports found */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(/*! !../../../node_modules/css-loader??ref--0-oneOf-2-1!../../../node_modules/less-loader/dist/cjs.js!./common.less */ 14);
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ 3)(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../../node_modules/css-loader/index.js??ref--0-oneOf-2-1!../../../node_modules/less-loader/dist/cjs.js!./common.less", function() {
			var newContent = require("!!../../../node_modules/css-loader/index.js??ref--0-oneOf-2-1!../../../node_modules/less-loader/dist/cjs.js!./common.less");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),
/* 14 */
/*!***********************************************************************************************************************!*\
  !*** ../node_modules/css-loader?{"minimize":false}!../node_modules/less-loader/dist/cjs.js!./core/common/common.less ***!
  \***********************************************************************************************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/lib/css-base.js */ 2)(undefined);
// imports


// module
exports.push([module.i, "/* Following variables are available to uuApps / libraries using uu5g04 library.\n   This file can be imported using:\n    import \"~uu5g04/dist/tools.less\";\n*/\n/***************** FLEX start *****************/\n.display-flex {\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: -webkit-flex;\n  display: flex;\n}\n.display-inline-flex {\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: -webkit-inline-flex;\n  display: inline-flex;\n}\n/***************** FLEX end *****************/\n/***************** ANIMATIONS start *****************/\n/***************** ANIMATIONS end *****************/\n/***************** LAYOUT start *****************/\n/***************** LAYOUT end *****************/\n/* global */\n* {\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  box-sizing: border-box;\n}\n/* Paddings */\n.uu5-common-padding-none,\n.padding-none {\n  padding: 0;\n}\n.uu5-common-padding-xs,\n.padding-xs {\n  padding: 8px;\n}\n.uu5-common-padding-s,\n.padding-s {\n  padding: 16px;\n}\n.uu5-common-padding-m,\n.padding-m {\n  padding: 24px;\n}\n.uu5-common-padding-l,\n.padding-l {\n  padding: 32px;\n}\n.uu5-common-padding-xl,\n.padding-xl {\n  padding: 40px;\n}\n/* min-height */\n.uu5-common-min-height-none,\n.min-height-none {\n  min-height: 0;\n}\n.uu5-common-min-height-xs,\n.min-height-xs {\n  min-height: 16px;\n}\n.uu5-common-min-height-s,\n.min-height-s {\n  min-height: 32px;\n}\n.uu5-common-min-height-m,\n.min-height-m {\n  min-height: 48px;\n}\n.uu5-common-min-height-l,\n.min-height-l {\n  min-height: 64px;\n}\n.uu5-common-min-height-xl,\n.min-height-xl {\n  min-height: 80px;\n}\n/* Text in columns */\n.uu5-common-newspaper-layout-1,\n.newspaper-layout-1 {\n  -webkit-column-count: 1;\n  /* Chrome, Safari, Opera */\n  -moz-column-count: 1;\n  /* Firefox */\n  column-count: 1;\n}\n.uu5-common-newspaper-layout-2,\n.newspaper-layout-2 {\n  -webkit-column-count: 2;\n  /* Chrome, Safari, Opera */\n  -moz-column-count: 2;\n  /* Firefox */\n  column-count: 2;\n}\n.uu5-common-newspaper-layout-3,\n.newspaper-layout-3 {\n  -webkit-column-count: 3;\n  /* Chrome, Safari, Opera */\n  -moz-column-count: 3;\n  /* Firefox */\n  column-count: 3;\n}\n.uu5-common-newspaper-layout-4,\n.newspaper-layout-4 {\n  -webkit-column-count: 4;\n  /* Chrome, Safari, Opera */\n  -moz-column-count: 4;\n  /* Firefox */\n  column-count: 4;\n}\n.uu5-common-newspaper-layout-5,\n.newspaper-layout-5 {\n  -webkit-column-count: 5;\n  /* Chrome, Safari, Opera */\n  -moz-column-count: 5;\n  /* Firefox */\n  column-count: 5;\n}\n.uu5-common-newspaper-layout-6,\n.newspaper-layout-6 {\n  -webkit-column-count: 6;\n  /* Chrome, Safari, Opera */\n  -moz-column-count: 6;\n  /* Firefox */\n  column-count: 6;\n}\n@media screen and (max-width: 480px) {\n  [class^=\"uu5-common-newspaper-layout-\"],\n  [class*=\" uu5-common-newspaper-layout-\"] {\n    -webkit-column-count: 1;\n    /* Chrome, Safari, Opera */\n    -moz-column-count: 1;\n    /* Firefox */\n    column-count: 1;\n  }\n}\n/* Alignment*/\n.uu5-common-center,\n.center {\n  text-align: center;\n}\n.uu5-common-right,\n.right {\n  text-align: right;\n}\n.uu5-common-left,\n.left {\n  text-align: left;\n}\n.uu5-common-inline,\n.inline {\n  display: inline;\n}\n.uu5-common-block,\n.block {\n  display: block;\n}\n.uu5-elevation-0 {\n  -webkit-box-shadow: none;\n  -moz-box-shadow: none;\n  box-shadow: none;\n}\n.uu5-elevation-1 {\n  -webkit-box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12), 0 3px 1px -2px rgba(0, 0, 0, 0.2);\n  -moz-box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12), 0 3px 1px -2px rgba(0, 0, 0, 0.2);\n  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12), 0 3px 1px -2px rgba(0, 0, 0, 0.2);\n}\n.uu5-elevation-2 {\n  -webkit-box-shadow: 0 4px 5px 0 rgba(0, 0, 0, 0.14), 0 1px 10px 0 rgba(0, 0, 0, 0.12), 0 2px 4px -1px rgba(0, 0, 0, 0.3);\n  -moz-box-shadow: 0 4px 5px 0 rgba(0, 0, 0, 0.14), 0 1px 10px 0 rgba(0, 0, 0, 0.12), 0 2px 4px -1px rgba(0, 0, 0, 0.3);\n  box-shadow: 0 4px 5px 0 rgba(0, 0, 0, 0.14), 0 1px 10px 0 rgba(0, 0, 0, 0.12), 0 2px 4px -1px rgba(0, 0, 0, 0.3);\n}\n.uu5-elevation-3 {\n  -webkit-box-shadow: 0 6px 10px 0 rgba(0, 0, 0, 0.14), 0 1px 18px 0 rgba(0, 0, 0, 0.12), 0 3px 5px -1px rgba(0, 0, 0, 0.3);\n  -moz-box-shadow: 0 6px 10px 0 rgba(0, 0, 0, 0.14), 0 1px 18px 0 rgba(0, 0, 0, 0.12), 0 3px 5px -1px rgba(0, 0, 0, 0.3);\n  box-shadow: 0 6px 10px 0 rgba(0, 0, 0, 0.14), 0 1px 18px 0 rgba(0, 0, 0, 0.12), 0 3px 5px -1px rgba(0, 0, 0, 0.3);\n}\n.uu5-elevation-4 {\n  -webkit-box-shadow: 0 8px 10px 1px rgba(0, 0, 0, 0.14), 0 3px 14px 2px rgba(0, 0, 0, 0.12), 0 5px 5px -3px rgba(0, 0, 0, 0.3);\n  -moz-box-shadow: 0 8px 10px 1px rgba(0, 0, 0, 0.14), 0 3px 14px 2px rgba(0, 0, 0, 0.12), 0 5px 5px -3px rgba(0, 0, 0, 0.3);\n  box-shadow: 0 8px 10px 1px rgba(0, 0, 0, 0.14), 0 3px 14px 2px rgba(0, 0, 0, 0.12), 0 5px 5px -3px rgba(0, 0, 0, 0.3);\n}\n.uu5-elevation-5 {\n  -webkit-box-shadow: 0 16px 24px 2px rgba(0, 0, 0, 0.14), 0 6px 30px 5px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(0, 0, 0, 0.3);\n  -moz-box-shadow: 0 16px 24px 2px rgba(0, 0, 0, 0.14), 0 6px 30px 5px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(0, 0, 0, 0.3);\n  box-shadow: 0 16px 24px 2px rgba(0, 0, 0, 0.14), 0 6px 30px 5px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(0, 0, 0, 0.3);\n}\n.uu5-overflow-hidden {\n  overflow: hidden;\n}\n/* Scrollable div with hidden scrollbar */\n.uu5-common-scrollable-box {\n  overflow-y: scroll;\n  -ms-overflow-style: none;\n}\n.uu5-common-scrollable-box::-webkit-scrollbar {\n  display: none;\n}\n@-moz-document url-prefix() {\n  .uu5-common-scrollable-box {\n    margin-right: -15px;\n    overflow-x: hidden;\n  }\n}\n", ""]);

// exports


/***/ }),
/* 15 */
/*!********************************!*\
  !*** ./core/common/icons.less ***!
  \********************************/
/*! no static exports found */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(/*! !../../../node_modules/css-loader??ref--0-oneOf-2-1!../../../node_modules/less-loader/dist/cjs.js!./icons.less */ 16);
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ 3)(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../../node_modules/css-loader/index.js??ref--0-oneOf-2-1!../../../node_modules/less-loader/dist/cjs.js!./icons.less", function() {
			var newContent = require("!!../../../node_modules/css-loader/index.js??ref--0-oneOf-2-1!../../../node_modules/less-loader/dist/cjs.js!./icons.less");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),
/* 16 */
/*!**********************************************************************************************************************!*\
  !*** ../node_modules/css-loader?{"minimize":false}!../node_modules/less-loader/dist/cjs.js!./core/common/icons.less ***!
  \**********************************************************************************************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/lib/css-base.js */ 2)(undefined);
// imports


// module
exports.push([module.i, "@font-face {\n  font-family: 'uu5 Icons';\n  src: url(" + __webpack_require__(/*! ../../assets/fonts/uu5-icons.eot?n7r5pz */ 5) + ");\n  src: url(" + __webpack_require__(/*! ../../assets/fonts/uu5-icons.eot?n7r5pz */ 5) + "#iefix) format('embedded-opentype'), url(" + __webpack_require__(/*! ../../assets/fonts/uu5-icons.ttf?n7r5pz */ 17) + ") format('truetype'), url(" + __webpack_require__(/*! ../../assets/fonts/uu5-icons.woff?n7r5pz */ 18) + ") format('woff'), url(" + __webpack_require__(/*! ../../assets/fonts/uu5-icons.svg?n7r5pz */ 19) + "#uu5-icons) format('svg');\n  font-weight: normal;\n  font-style: normal;\n}\n.uu5:before {\n  /* use !important to prevent issues with browser extensions that change fonts */\n  font-family: 'uu5 Icons' !important;\n  speak: none;\n  font-style: normal;\n  font-weight: normal;\n  font-variant: normal;\n  text-transform: none;\n  line-height: 1;\n  /* Better Font Rendering =========== */\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n.uu5-code:before {\n  content: \"\\E914\";\n}\n.uu5-example:before {\n  content: \"\\E915\";\n}\n.uu5-alert-circle:before {\n  content: \"\\E900\";\n}\n.uu5-arrow-down:before {\n  content: \"\\E901\";\n}\n.uu5-arrow-left:before {\n  content: \"\\E902\";\n}\n.uu5-arrow-right:before {\n  content: \"\\E903\";\n}\n.uu5-arrow-up:before {\n  content: \"\\E904\";\n}\n.uu5-calendar:before {\n  content: \"\\E905\";\n}\n.uu5-clock:before {\n  content: \"\\E906\";\n}\n.uu5-cross:before {\n  content: \"\\E907\";\n}\n.uu5-error-circle:before {\n  content: \"\\E908\";\n}\n.uu5-finder:before {\n  content: \"\\E909\";\n}\n.uu5-flag-upload:before {\n  content: \"\\E90A\";\n}\n.uu5-menu:before {\n  content: \"\\E90B\";\n}\n.uu5-minus:before {\n  content: \"\\E90C\";\n}\n.uu5-ok:before {\n  content: \"\\E90D\";\n}\n.uu5-ok-circle:before {\n  content: \"\\E90E\";\n}\n.uu5-person:before {\n  content: \"\\E90F\";\n}\n.uu5-picture:before {\n  content: \"\\E910\";\n}\n.uu5-plus:before {\n  content: \"\\E911\";\n}\n.uu5-point:before {\n  content: \"\\E912\";\n}\n.uu5-thumb:before {\n  content: \"\\E913\";\n}\n", ""]);

// exports


/***/ }),
/* 17 */
/*!*******************************************!*\
  !*** ./assets/fonts/uu5-icons.ttf?n7r5pz ***!
  \*******************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "assets/fonts/uu5-icons.ttf";

/***/ }),
/* 18 */
/*!********************************************!*\
  !*** ./assets/fonts/uu5-icons.woff?n7r5pz ***!
  \********************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "assets/fonts/uu5-icons.woff";

/***/ }),
/* 19 */
/*!*******************************************!*\
  !*** ./assets/fonts/uu5-icons.svg?n7r5pz ***!
  \*******************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "assets/fonts/uu5-icons.svg";

/***/ }),
/* 20 */
/*!************************************!*\
  !*** ./core/common/font-size.less ***!
  \************************************/
/*! no static exports found */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(/*! !../../../node_modules/css-loader??ref--0-oneOf-2-1!../../../node_modules/less-loader/dist/cjs.js!./font-size.less */ 21);
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ 3)(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../../node_modules/css-loader/index.js??ref--0-oneOf-2-1!../../../node_modules/less-loader/dist/cjs.js!./font-size.less", function() {
			var newContent = require("!!../../../node_modules/css-loader/index.js??ref--0-oneOf-2-1!../../../node_modules/less-loader/dist/cjs.js!./font-size.less");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),
/* 21 */
/*!**************************************************************************************************************************!*\
  !*** ../node_modules/css-loader?{"minimize":false}!../node_modules/less-loader/dist/cjs.js!./core/common/font-size.less ***!
  \**************************************************************************************************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/lib/css-base.js */ 2)(undefined);
// imports


// module
exports.push([module.i, "/* Font Size */\n/* absolute font size */\n/*\nstandard: 100%, 14px, 1+0.428 => proc*(1-standard)+1\nstandard\t1\t14\t1,428\nxxs\t0,5\t7\t1,214\nxs\t0,75\t11\t1,321\nsm\t1\t14\t1,428\nmd\t1,25\t18\t1,535\nlg\t1,5\t21\t1,642\nxl\t1,75\t25\t1,749\nxxl\t2\t28\t1,856\n\n*/\n/*.@{name}-font-size-xxs, .font-size-xxs {\n  font-size: 7px;\n  line-height: 1.214;\n}*/\n.uu5-common-font-size-xs,\n.font-size-xs {\n  font-size: 12px;\n  line-height: 1.3745;\n}\n.uu5-common-font-size-s,\n.font-size-s {\n  font-size: 14px;\n  line-height: 1.428;\n}\n.uu5-common-font-size-m,\n.font-size-m {\n  font-size: 16px;\n  line-height: 1.4815;\n}\n.uu5-common-font-size-l,\n.font-size-l {\n  font-size: 18px;\n  line-height: 1.535;\n}\n.uu5-common-font-size-xl,\n.font-size-xl {\n  font-size: 25px;\n  line-height: 1.749;\n}\n.uu5-common-font-size-xxl,\n.font-size-xxl {\n  font-size: 28px;\n  line-height: 1.856;\n}\n.uu5-common-font-size-50,\n.font-size-50 {\n  font-size: 50%;\n}\n.uu5-common-font-size-75,\n.font-size-75 {\n  font-size: 75%;\n}\n.uu5-common-font-size-100,\n.font-size-100 {\n  font-size: 100%;\n}\n.uu5-common-font-size-125,\n.font-size-125 {\n  font-size: 125%;\n}\n.uu5-common-font-size-150,\n.font-size-150 {\n  font-size: 150%;\n}\n.uu5-common-font-size-175,\n.font-size-175 {\n  font-size: 175%;\n}\n.uu5-common-font-size-200,\n.font-size-200 {\n  font-size: 200%;\n}\n", ""]);

// exports


/***/ }),
/* 22 */
/*!****************************************************************************************************************************************!*\
  !*** external {"amd":"create-react-class","commonjs":"create-react-class","commonjs2":"create-react-class","root":"createReactClass"} ***!
  \****************************************************************************************************************************************/
/*! no static exports found */
/*! exports used: default */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_22__;

/***/ }),
/* 23 */
/*!********************************!*\
  !*** ./core/common/error.less ***!
  \********************************/
/*! no static exports found */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(/*! !../../../node_modules/css-loader??ref--0-oneOf-2-1!../../../node_modules/less-loader/dist/cjs.js!./error.less */ 24);
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ 3)(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../../node_modules/css-loader/index.js??ref--0-oneOf-2-1!../../../node_modules/less-loader/dist/cjs.js!./error.less", function() {
			var newContent = require("!!../../../node_modules/css-loader/index.js??ref--0-oneOf-2-1!../../../node_modules/less-loader/dist/cjs.js!./error.less");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),
/* 24 */
/*!**********************************************************************************************************************!*\
  !*** ../node_modules/css-loader?{"minimize":false}!../node_modules/less-loader/dist/cjs.js!./core/common/error.less ***!
  \**********************************************************************************************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/lib/css-base.js */ 2)(undefined);
// imports


// module
exports.push([module.i, "/* Following variables are available to uuApps / libraries using uu5g04 library.\n   This file can be imported using:\n    import \"~uu5g04/dist/tools.less\";\n*/\n/***************** FLEX start *****************/\n.display-flex {\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: -webkit-flex;\n  display: flex;\n}\n.display-inline-flex {\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: -webkit-inline-flex;\n  display: inline-flex;\n}\n/***************** FLEX end *****************/\n/***************** ANIMATIONS start *****************/\n/***************** ANIMATIONS end *****************/\n/***************** LAYOUT start *****************/\n/***************** LAYOUT end *****************/\n.uu5-common-error {\n  padding: 8px;\n  color: #D50000;\n  background: #FFEBEE;\n  font-size: 14px;\n  line-height: 20px;\n}\n.uu5-common-error-main-wrapper {\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: -webkit-flex;\n  display: flex;\n}\n.uu5-common-error-content {\n  overflow: auto;\n  padding-top: 6px;\n  width: 100%;\n}\n.uu5-common-error-details {\n  text-align: center;\n  padding: 8px 8px 0 8px;\n  color: rgba(0, 0, 0, 0.87);\n  line-height: 1.3;\n  width: 100%;\n}\n.uu5-common-error-details-body {\n  text-align: initial;\n  padding: 8px;\n}\n.uu5-common-error-info {\n  text-align: center;\n  padding: 6px 8px;\n  background: #FFFFFF;\n  margin-top: 8px;\n}\n.uu5-common-error-pre-wrapper {\n  padding: 4px 0 0 0;\n}\n.uu5-common-error-pre {\n  background: #ffffff;\n  border-radius: 2px;\n  border: none;\n  padding: 16px;\n  display: block;\n  word-break: break-all;\n  word-wrap: break-word;\n  margin: unset;\n  font-family: Courier, monospace;\n  font-size: 12px;\n  line-height: 20px;\n  overflow-x: auto;\n}\n.uu5-common-error-silent {\n  background-color: #F5F5F5;\n  color: rgba(0, 0, 0, 0.87);\n}\n.uu5-common-error-silent.uu5-common-error-details {\n  background-color: #F5F5F5;\n}\n.uu5-common-error-silent.uu5-common-error-details .uu5-common-error-details-body {\n  background-color: #F5F5F5;\n  padding: 8px;\n}\n.uu5-common-error-silent.uu5-common-error-details .uu5-common-error-pre-wrapper {\n  background-color: #F5F5F5;\n}\n.uu5-common-error-small-box {\n  min-height: 48px;\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: -webkit-flex;\n  display: flex;\n  -webkit-flex-direction: column;\n  -ms-flex-direction: column;\n  flex-direction: column;\n}\n.uu5-common-error-inline {\n  display: inline;\n  padding: 0;\n}\n.uu5-common-error-details-button {\n  padding: 8px;\n  cursor: pointer;\n}\n.uu5-common-error-icon-wrapper {\n  height: 32px;\n  padding-right: 16px;\n  font-size: 32px;\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: -webkit-flex;\n  display: flex;\n  -webkit-align-items: center;\n  align-items: center;\n}\n.uu5-common-error-icon {\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: -webkit-inline-flex;\n  display: inline-flex;\n  font-style: normal;\n  font-weight: normal;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n@media (max-width: 480px) {\n  .uu5-common-error-icon-wrapper {\n    display: none;\n  }\n  .uu5-common-error-content {\n    padding: 8px;\n  }\n  .uu5-common-error-details,\n  .uu5-common-error-details-body {\n    padding: 8px 0 0 0;\n  }\n}\n", ""]);

// exports


/***/ }),
/* 25 */
/*!****************************************!*\
  !*** ./core/common/not-found-tag.less ***!
  \****************************************/
/*! no static exports found */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(/*! !../../../node_modules/css-loader??ref--0-oneOf-2-1!../../../node_modules/less-loader/dist/cjs.js!./not-found-tag.less */ 26);
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ 3)(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../../node_modules/css-loader/index.js??ref--0-oneOf-2-1!../../../node_modules/less-loader/dist/cjs.js!./not-found-tag.less", function() {
			var newContent = require("!!../../../node_modules/css-loader/index.js??ref--0-oneOf-2-1!../../../node_modules/less-loader/dist/cjs.js!./not-found-tag.less");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),
/* 26 */
/*!******************************************************************************************************************************!*\
  !*** ../node_modules/css-loader?{"minimize":false}!../node_modules/less-loader/dist/cjs.js!./core/common/not-found-tag.less ***!
  \******************************************************************************************************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/lib/css-base.js */ 2)(undefined);
// imports


// module
exports.push([module.i, "", ""]);

// exports


/***/ }),
/* 27 */
/*!***************************************!*\
  !*** ./core/common/color-schema.less ***!
  \***************************************/
/*! no static exports found */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(/*! !../../../node_modules/css-loader??ref--0-oneOf-2-1!../../../node_modules/less-loader/dist/cjs.js!./color-schema.less */ 28);
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ 3)(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../../node_modules/css-loader/index.js??ref--0-oneOf-2-1!../../../node_modules/less-loader/dist/cjs.js!./color-schema.less", function() {
			var newContent = require("!!../../../node_modules/css-loader/index.js??ref--0-oneOf-2-1!../../../node_modules/less-loader/dist/cjs.js!./color-schema.less");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),
/* 28 */
/*!*****************************************************************************************************************************!*\
  !*** ../node_modules/css-loader?{"minimize":false}!../node_modules/less-loader/dist/cjs.js!./core/common/color-schema.less ***!
  \*****************************************************************************************************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/lib/css-base.js */ 2)(undefined);
// imports


// module
exports.push([module.i, "/* Color schema */\n/* Hidden class */\n.uu5-common-hidden {\n  display: none !important;\n}\n/* Disabled class */\n.uu5-common-disabled {\n  position: relative !important;\n  cursor: not-allowed !important;\n}\n/* Disabled cover class wrapper - must set position relative on wrap element */\n.uu5-common-disabled-cover-wrapper {\n  position: relative;\n  display: inline-block;\n}\n/* Disabled cover class */\n.uu5-common-disabled-cover,\n.uu5-common-disabled-cover-transparent {\n  position: absolute;\n  cursor: not-allowed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  opacity: 0.7;\n  z-index: 90;\n}\n.uu5-common-disabled-cover {\n  background-color: lightgrey;\n}\n.uu5-common-disabled-cover-transparent {\n  background-color: transparent;\n}\n", ""]);

// exports


/***/ }),
/* 29 */
/*!*********************************!*\
  !*** ./core/common/router.less ***!
  \*********************************/
/*! no static exports found */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(/*! !../../../node_modules/css-loader??ref--0-oneOf-2-1!../../../node_modules/less-loader/dist/cjs.js!./router.less */ 30);
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ 3)(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../../node_modules/css-loader/index.js??ref--0-oneOf-2-1!../../../node_modules/less-loader/dist/cjs.js!./router.less", function() {
			var newContent = require("!!../../../node_modules/css-loader/index.js??ref--0-oneOf-2-1!../../../node_modules/less-loader/dist/cjs.js!./router.less");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),
/* 30 */
/*!***********************************************************************************************************************!*\
  !*** ../node_modules/css-loader?{"minimize":false}!../node_modules/less-loader/dist/cjs.js!./core/common/router.less ***!
  \***********************************************************************************************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/lib/css-base.js */ 2)(undefined);
// imports


// module
exports.push([module.i, "", ""]);

// exports


/***/ }),
/* 31 */
/*!*****************************************!*\
  !*** ./core/common/text-corrector.less ***!
  \*****************************************/
/*! no static exports found */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(/*! !../../../node_modules/css-loader??ref--0-oneOf-2-1!../../../node_modules/less-loader/dist/cjs.js!./text-corrector.less */ 32);
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ 3)(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../../node_modules/css-loader/index.js??ref--0-oneOf-2-1!../../../node_modules/less-loader/dist/cjs.js!./text-corrector.less", function() {
			var newContent = require("!!../../../node_modules/css-loader/index.js??ref--0-oneOf-2-1!../../../node_modules/less-loader/dist/cjs.js!./text-corrector.less");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),
/* 32 */
/*!*******************************************************************************************************************************!*\
  !*** ../node_modules/css-loader?{"minimize":false}!../node_modules/less-loader/dist/cjs.js!./core/common/text-corrector.less ***!
  \*******************************************************************************************************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/lib/css-base.js */ 2)(undefined);
// imports


// module
exports.push([module.i, ".uu5-common-text-corrector-error {\n  text-decoration: none;\n  position: relative;\n}\n.uu5-common-text-corrector-error::after {\n  content: '~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~';\n  position: absolute;\n  width: 100%;\n  left: 0;\n  overflow: hidden;\n  top: 35%;\n  letter-spacing: -0.2em;\n  color: red;\n}\n.uu5-common-text-corrector-highlight {\n  background-color: #5bc0de;\n  color: #fff;\n}\n", ""]);

// exports


/***/ }),
/* 33 */
/*!**********************************!*\
  !*** ./core/common/outline.less ***!
  \**********************************/
/*! no static exports found */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(/*! !../../../node_modules/css-loader??ref--0-oneOf-2-1!../../../node_modules/less-loader/dist/cjs.js!./outline.less */ 34);
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ 3)(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../../node_modules/css-loader/index.js??ref--0-oneOf-2-1!../../../node_modules/less-loader/dist/cjs.js!./outline.less", function() {
			var newContent = require("!!../../../node_modules/css-loader/index.js??ref--0-oneOf-2-1!../../../node_modules/less-loader/dist/cjs.js!./outline.less");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),
/* 34 */
/*!************************************************************************************************************************!*\
  !*** ../node_modules/css-loader?{"minimize":false}!../node_modules/less-loader/dist/cjs.js!./core/common/outline.less ***!
  \************************************************************************************************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/lib/css-base.js */ 2)(undefined);
// imports


// module
exports.push([module.i, "", ""]);

// exports


/***/ })
/******/ ]);
});
//# sourceMappingURL=uu5g04.js.map