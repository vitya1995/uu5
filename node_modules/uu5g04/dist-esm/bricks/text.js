import React from 'react';
import createReactClass from 'create-react-class';
import * as UU5 from "uu5g04";
import ns from "./bricks-ns.js";

import './text.less';

export const Text = createReactClass({

  //@@viewOn:mixins
  mixins: [UU5.Common.BaseMixin, UU5.Common.PureRenderMixin, UU5.Common.ElementaryMixin, UU5.Common.NestingLevelMixin, UU5.Common.ContentMixin, UU5.Common.ColorSchemaMixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: ns.name("Text"),
    nestingLevelList: UU5.Environment.getNestingLevelList('smallBox', 'inline'),
    classNames: {
      main: ns.css("text uu5-common-text"),
      nestingLevelSmallBox: ns.css("text-nesting-level-small-box"),
      nestingLevelInline: ns.css("text-nesting-level-inline")
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _getMainAttrs: function () {
    let attrs = this.getMainAttrs();

    switch (this.getNestingLevel()) {
      case 'inline':
        attrs.className += ' ' + this.getClassName().nestingLevelInline;
        break;
      default:
        attrs.className += ' ' + this.getClassName().nestingLevelSmallBox;
    }

    return attrs;
  },
  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render: function () {
    let component;
    switch (this.getNestingLevel()) {
      case 'smallBox':
        component = <div {...this._getMainAttrs()}>
            {this.getChildren()}
            {this.getDisabledCover()}
          </div>;
        break;
      case 'inline':
        component = <span {...this._getMainAttrs()}>
            {this.getChildren()}
            {this.getDisabledCover()}
          </span>;
        break;
      default:
        component = null;
    }

    return component;
  }
  //@@viewOff:render
});

export default Text;