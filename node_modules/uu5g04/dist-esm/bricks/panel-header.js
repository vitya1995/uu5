import React from 'react';
import createReactClass from 'create-react-class';
import PropTypes from 'prop-types';
import * as UU5 from "uu5g04";
import ns from "./bricks-ns.js";

import Icon from './icon.js';

import './panel-header.less';

export default createReactClass({

  //@@viewOn:mixins
  mixins: [UU5.Common.BaseMixin, UU5.Common.PureRenderMixin, UU5.Common.ElementaryMixin, UU5.Common.ContentMixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: ns.name("Panel.Header"),
    classNames: {
      main: ns.css("panel-header"),
      click: ns.css("panel-header-click"),
      content: ns.css("panel-header-content")
    },
    defaults: {
      parentTagName: 'UU5.Bricks.Panel'
    },
    errors: {
      invalidParent: 'Parent of this component is not Panel.'
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    _icon: PropTypes.string,
    _onClick: PropTypes.func,
    _disableHeaderClick: PropTypes.bool
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps: function () {
    return {
      _icon: null,
      _onClick: null,
      _disableHeaderClick: false
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  componentWillMount: function () {
    //this.checkParentTagName(this.getDefault().parentTagName);

    if (!(this.getParent() && this.getParent().isPanel)) {
      this.showError("invalidParent");
    }
  },

  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _onClickHandler: function (e) {
    !this.props._disableHeaderClick && this.props._onClick(e);
    return this;
  },

  _buildMainAttrs() {
    let mainAttrs = this.getMainAttrs();
    !this.props._disableHeaderClick && (mainAttrs.className += ' ' + this.getClassName().click);
    return mainAttrs;
  },
  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render: function () {
    return <div {...this._buildMainAttrs()} onClick={this._onClickHandler}>
        <span className={this.getClassName('content')}>
          {this.getChildren()}
        </span>
        <Icon icon={this.props._icon} />
        {this.getDisabledCover()}
      </div>;
  }
  //@@viewOff:render
});