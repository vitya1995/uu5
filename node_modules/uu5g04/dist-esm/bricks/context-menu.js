import React from 'react';
import createReactClass from 'create-react-class';
import PropTypes from 'prop-types';
import * as UU5 from "uu5g04";
import ns from "./bricks-ns.js";

import Popover from './popover';
import ContextMenuItem from './context-menu-item.js';

import './context-menu.less';

export const ContextMenu = createReactClass({

  //@@viewOn:mixins
  mixins: [UU5.Common.BaseMixin, UU5.Common.ElementaryMixin, UU5.Common.SectionMixin, UU5.Common.CcrWriterMixin, UU5.Common.NestingLevelMixin, UU5.Common.PureRenderMixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: ns.name("ContextMenu"),
    nestingLevelList: UU5.Environment.getNestingLevelList('bigBoxCollection', 'box'),
    classNames: {
      main: ns.css("context-menu"),
      ul: ns.css("context-menu-ul")
    },
    defaults: {
      transitionDuration: 100,
      childTagName: 'UU5.Bricks.ContextMenu.Item'
    },
    opt: {
      nestingLevelRoot: true
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    shown: PropTypes.bool,
    parentElement: PropTypes.object,
    allowTags: PropTypes.arrayOf(PropTypes.string)
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps() {
    return {
      shown: false,
      parentElement: null,
      allowTags: []
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  isContextMenu() {
    return true;
  },

  open(opt, setStateCallback) {
    this._menu && typeof this._menu.open === "function" && this._menu.open(opt, setStateCallback);
    return this;
  },

  close(setStateCallback) {
    this._menu && typeof this._menu.close === "function" && this._menu.close(setStateCallback);
    return this;
  },

  isOpen() {
    return this._menu && typeof this._menu.isOpen === "function" && this._menu.isOpen();
  },
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  shouldChildRender_(child) {
    let childTagName = UU5.Common.Tools.getChildTagName(child);
    let childTagNames = this.props.allowTags.concat(this.getDefault().childTagName);
    return childTagNames.indexOf(childTagName) > -1;
  },
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _getMainAttrs() {
    let props = this.getMainAttrs();

    props.shown = this.props.shown;
    props.parentElement = this.props.parentElement;
    props.header = this.getHeader();
    props.footer = this.getFooter();
    props.nestingLevel = this.getNestingLevel();

    return props;
  },

  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render() {
    let children = this.buildChildren({ content: this.state.content, children: this.props.children });
    return <Popover {...this._getMainAttrs()} ref_={menu => this._menu = menu} parent={this}>
        <ul className={this.getClassName().ul}>{children}</ul>
      </Popover>;
  }
  //@@viewOff:render
});

ContextMenu.Item = ContextMenuItem;
export default ContextMenu;