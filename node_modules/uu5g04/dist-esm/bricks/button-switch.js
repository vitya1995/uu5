import React from 'react';
import createReactClass from 'create-react-class';
import PropTypes from 'prop-types';
import * as UU5 from "uu5g04";
import ns from "./bricks-ns.js";

import Button from './button.js';

import './button-switch.less';

export const ButtonSwitch = createReactClass({

  //@@viewOn:mixins
  mixins: [UU5.Common.BaseMixin, UU5.Common.ElementaryMixin, UU5.Common.NestingLevelMixin, UU5.Common.ContentMixin, UU5.Common.PureRenderMixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: ns.name("ButtonSwitch"),
    nestingLevel: 'smallBox',
    classNames: {
      main: ns.css("button-switch")
    },
    opt: {
      nestingLevelWrapper: true
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    onProps: PropTypes.object,
    offProps: PropTypes.object,
    switchedOn: PropTypes.bool,
    props: PropTypes.object,
    size: PropTypes.oneOf(['s', 'm', 'l', 'xl']),
    bgStyle: PropTypes.string
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps: function () {
    return {
      onProps: null,
      offProps: null,
      switchedOn: false,
      props: null,
      size: 'm',
      bgStyle: undefined
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  getInitialState: function () {
    return {
      switchedOn: this.props.switchedOn
    };
  },

  componentWillReceiveProps: function (nextProps) {
    if (nextProps.controlled) {
      this.setState({ switchedOn: nextProps.switchedOn });
    }
  },
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  switchOn: function (setStateCallback) {
    return this.setState({ switchedOn: true }, setStateCallback);
  },

  switchOff: function (setStateCallback) {
    return this.setState({ switchedOn: false }, setStateCallback);
  },

  toggle: function (setStateCallback) {
    this.setState(function (state) {
      return { switchedOn: !state.switchedOn };
    }, setStateCallback);
    return this;
  },

  isSwitchOn: function () {
    return this.state.switchedOn;
  },

  isSwitchOff: function () {
    return !this.isSwitchOn();
  },
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render: function () {
    return <Button {...this.getMainPropsToPass()} size={this.props.size} bgStyle={this.props.bgStyle} {...this.isSwitchOn() ? this.props.onProps : this.props.offProps} {...this.props.props}>
        {this.getChildren()}
      </Button>;
  }
  //@@viewOff:render
});

export default ButtonSwitch;