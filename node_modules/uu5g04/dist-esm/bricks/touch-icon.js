import React from 'react';
import createReactClass from 'create-react-class';
import PropTypes from 'prop-types';
import * as UU5 from "uu5g04";
import ns from "./bricks-ns.js";

import Link from './link.js';
import Icon from './icon.js';

import './touch-icon.less';

export const TouchIcon = createReactClass({

  //@@viewOn:mixins
  mixins: [UU5.Common.BaseMixin, UU5.Common.PureRenderMixin, UU5.Common.ElementaryMixin, UU5.Common.NestingLevelMixin, UU5.Common.ContentMixin, UU5.Common.ColorSchemaMixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: ns.name("TouchIcon"),
    nestingLevel: 'smallBox',
    classNames: {
      main: ns.css("touch-icon"),
      body: ns.css("touch-icon-body"),
      label: ns.css("touch-icon-label"),
      icon: ns.css("touch-icon-icon"),
      bgStyle: ns.css("touch-icon-")
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    icon: PropTypes.string,
    href: PropTypes.string,
    target: PropTypes.oneOf(['_blank', '_parent', '_top', '_self']),
    onClick: PropTypes.func,
    bgStyle: PropTypes.oneOf(['filled', 'transparent'])
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps() {
    return {
      icon: 'mdi-file',
      href: '#',
      target: '_self',
      onClick: null,
      bgStyle: "filled"
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _getMainAttrs() {
    var mainAttrs = this.getMainPropsToPass();
    mainAttrs.className += ' ' + this.getClassName().bgStyle + this.props.bgStyle;
    mainAttrs.content = null;
    mainAttrs.onClick = this.props.onClick;
    mainAttrs.href = this.props.href;
    mainAttrs.target = this.props.target;
    return mainAttrs;
  },
  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render() {
    return this.getNestingLevel() ? <Link {...this._getMainAttrs()}>
            <div className={this.getClassName().body}>
              <Icon icon={this.props.icon} className={this.getClassName().icon} />
            </div>
            <div className={this.getClassName().label}>
              {this.getChildren()}
            </div>
          </Link> : null;
  }
  //@@viewOff:render
});

export default TouchIcon;