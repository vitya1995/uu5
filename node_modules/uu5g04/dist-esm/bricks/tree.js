import React from 'react';
import createReactClass from 'create-react-class';
import PropTypes from 'prop-types';
import * as UU5 from "uu5g04";
import ns from "./bricks-ns.js";

import List from './tree-list.js';
import Item from './tree-item.js';

import './tree.less';

export const Tree = createReactClass({

  //@@viewOn:mixins
  mixins: [UU5.Common.BaseMixin, UU5.Common.PureRenderMixin, UU5.Common.ElementaryMixin, UU5.Common.ContentMixin, UU5.Common.NestingLevelMixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: ns.name("Tree"),
    nestingLevelList: UU5.Environment.getNestingLevelList('box', 'smallBox'),
    classNames: {
      main: ns.css("tree"),
      size: ns.css("tree-")
    },
    defaults: {
      childTagName: 'UU5.Bricks.Tree.Item'
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    items: PropTypes.array,
    iconExpanded: PropTypes.string,
    iconCollapsed: PropTypes.string,
    size: PropTypes.oneOf(['s', 'm', 'l', 'xl'])
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps: function () {
    return {
      items: null,
      iconExpanded: 'mdi-menu-down',
      iconCollapsed: 'mdi-menu-right',
      size: 'm'
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  isTree() {
    return true;
  },
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render() {
    const mainPropsToPass = this.getMainPropsToPass();
    mainPropsToPass.className += ' ' + this.getClassName('size') + this.props.size;

    return this.getNestingLevel() ? <List {...mainPropsToPass} items={this.props.items || this.getChildren()} iconExpanded={this.props.iconExpanded} iconCollapsed={this.props.iconCollapsed}>
          {this.props.children && React.Children.toArray(this.props.children)}
          {this.getDisabledCover()}
        </List> : null;
  }
  //@@viewOff:render
});

Tree.List = List;
Tree.Item = Item;

export default Tree;