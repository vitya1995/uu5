import React from 'react';
import createReactClass from 'create-react-class';
import PropTypes from 'prop-types';
import * as UU5 from "uu5g04";
import ns from "./bricks-ns.js";

import Jumbotron from './jumbotron.js';

import './header.less';

export const Header = createReactClass({

  //@@viewOn:mixins
  mixins: [UU5.Common.BaseMixin, UU5.Common.ElementaryMixin, UU5.Common.NestingLevelMixin, UU5.Common.ContentMixin, UU5.Common.ColorSchemaMixin, UU5.Common.LevelMixin, UU5.Common.PureRenderMixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: ns.name("Header"),
    nestingLevelList: UU5.Environment.getNestingLevelList('bigBoxCollection', 'box'),
    classNames: {
      main: ns.css("header"),
      text: 'uu5-common-text',
      underline: ns.css("header-underline"),
      jumbotronContent: ns.css("header-jumbotron-content")
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    underline: PropTypes.bool
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps() {
    return {
      underline: undefined // default: false
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render() {
    const level = this.getLevel();
    let result;

    if (level > 0) {
      const attrs = this.getMainAttrs();
      attrs.className += ' ' + this.getClassName("text");
      this.props.underline && (attrs.className += ' ' + this.getClassName("underline"));

      result = React.createElement('h' + level, attrs, this.getChildren(), this.getDisabledCover());
    } else {
      let className = this.getClassName().main;
      this.props.className && (className += ' ' + this.props.className);

      result = <Jumbotron disabled={this.isDisabled()} hidden={this.isHidden()} selected={this.isSelected()} colorSchema={this.props.colorSchema} className={className}>
          <h1 className={this.getClassName('jumbotronContent')}>{this.getChildren()}</h1>
        </Jumbotron>;
    }

    return this.getNestingLevel() ? result : null;
  }
  //@@viewOff:render
});

export default Header;