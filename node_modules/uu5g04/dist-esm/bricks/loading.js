import React from 'react';
import createReactClass from 'create-react-class';
import PropTypes from 'prop-types';
import * as UU5 from "uu5g04";
import ns from "./bricks-ns.js";

import { Div } from './factory.js';

import './loading.less';

export const Loading = createReactClass({

  //@@viewOn:mixins
  mixins: [UU5.Common.BaseMixin, UU5.Common.PureRenderMixin, UU5.Common.ElementaryMixin, UU5.Common.ContentMixin, UU5.Common.ColorSchemaMixin, UU5.Common.NestingLevelMixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: ns.name("Loading"),
    nestingLevelList: UU5.Environment.getNestingLevelList('bigBoxCollection', 'inline'),
    classNames: {
      main: ns.css("loading uu5-common-padding-xs"),
      animated: ns.css("loading-animated"),
      inline: 'uu5-common-inline',
      dot: ns.css("loading-dot")
    },
    opt: {
      nestingLevelWrapper: true
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    inline: PropTypes.bool
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps() {
    return {
      inline: false
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _getMainProps: function () {
    let attrs = this.getMainAttrs();
    !this.getChildren() && !this.props.text && (attrs.className += ' ' + this.getClassName().animated);
    this.props.inline && (attrs.className += ' ' + this.getClassName().inline);
    attrs.nestingLevel = this.getNestingLevel();
    return attrs;
  },

  _getDefaultContent: function () {
    return React.Children.toArray([1, 2, 3].map(function () {
      return <span className={this.getClassName().dot} />;
    }.bind(this)));
  },
  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render: function () {
    return <Div {...this._getMainProps()}>
        {this.getChildren() || this._getDefaultContent()}
        {this.getDisabledCover()}
      </Div>;
  }
  //@@viewOff:render
});

export default Loading;