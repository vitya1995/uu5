import React from 'react';
import createReactClass from 'create-react-class';
import PropTypes from 'prop-types';
import * as UU5 from "uu5g04";
import ns from "./bricks-ns.js";

import './tabs-item.less';

export default createReactClass({

  //@@viewOn:mixins
  mixins: [UU5.Common.BaseMixin, UU5.Common.PureRenderMixin, UU5.Common.ElementaryMixin, UU5.Common.NestingLevelMixin, UU5.Common.SectionMixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: ns.name("Tabs.Item"),
    nestingLevelList: UU5.Environment.getNestingLevelList('bigBoxCollection', 'smallBox'),
    classNames: {
      main: ns.css("tabs-item", "tabs-item-pane"),
      hidden: ns.css("tabs-item-hidden"),
      visible: ns.css("tabs-item-visible"),
      fade: ns.css("tabs-item-fade ")
    },
    opt: {
      nestingLevelWrapper: true
    },
    errors: {
      invalidParent: 'Parent of this component is not Tabs.'
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    _fade: PropTypes.bool,
    _active: PropTypes.bool
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps: function () {
    return {
      _fade: false,
      _active: false
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  getInitialState: function () {
    return {
      visibility: this.props._active
    };
  },

  componentWillMount: function () {
    if (!(this.getParent() && this.getParent().isTabs)) {
      this.showError("invalidParent");
    }
  },

  componentWillReceiveProps: function (nextProps) {
    if (!nextProps._active && nextProps._active != this.props._active) {
      this.setState({ visibility: false });
    }
  },

  componentWillMount: function () {
    if (!(this.getParent() && this.getParent().isTabs)) {
      this.showError("invalidParent");
    }
  },

  componentDidUpdate: function (prevProps, prevState) {
    if (this.props._fade && this.props._active && prevProps._active != this.props._active) {
      setTimeout(() => this.setAsyncState({ visibility: true }), 5);
    } else if (this.props._active && prevProps._active != this.props._active) {
      this.setState({ visibility: true });
    }
  },

  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render: function () {
    let mainAttrs = this.getMainAttrs();

    if (this.props._active) {
      if (this.state.visibility) {
        mainAttrs.className += ' ' + this.getClassName().visible;
      } else {
        mainAttrs.className += ' ' + this.getClassName().hidden;
      }
    }
    if (this.props._fade) {
      mainAttrs.className += ' ' + this.getClassName().fade;
    }

    return this.getNestingLevel() ? <div {...mainAttrs}>
          {this.getChildren()}
          {this.getDisabledCover()}
        </div> : null;
  }

  //@@viewOff:render
});