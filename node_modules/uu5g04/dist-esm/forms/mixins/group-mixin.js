import React from 'react';
import PropTypes from 'prop-types';

import './group-mixin.less';

export const GroupMixin = {

  //@@viewOn:mixins
  //@@viewOff:mixins

  //@@viewOn:statics
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    value: PropTypes.arrayOf(PropTypes.shape({
      label: PropTypes.any.isRequired,
      name: PropTypes.string,
      value: PropTypes.bool,
      disabled: PropTypes.bool,
      hidden: PropTypes.bool
    })),
    required: PropTypes.bool,
    requiredMessage: PropTypes.any,
    onIcon: PropTypes.string,
    offIcon: PropTypes.string,
    labelPosition: PropTypes.oneOf(['left', 'right']),
    inline: PropTypes.bool

  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps: function () {
    return {
      value: [],
      required: false,
      requiredMessage: null,
      onIcon: '',
      offIcon: '',
      inline: false,
      labelPosition: 'right'
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  isValid: function () {
    var feedback = this.getFeedback();
    var value = this.getValue();
    var result = true;

    if (this.props.required && (value === null || value.length < 1)) {
      this.setError(this.props.requiredMessage || this.getLsiComponent('requiredMessageGroup'));
      result = false;
    } else if (feedback === 'error') {
      result = false;
    } else if (typeof this.isValid_ === 'function') {
      result = this.isValid_();
    }

    if (result && this.props.onValidate) {
      var validation = this.props.onValidate(value, this);
      if (validation && typeof validation === 'object') {
        if (validation.feedback === 'error') {
          result = false;
        }
      }
    }

    return result;
  }
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  //@@viewOff:render
};

export default GroupMixin;