'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _createReactClass = require('../create-react-class.js');

var _createReactClass2 = _interopRequireDefault(_createReactClass);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _uu5g = require('uu5g04');

var UU5 = _interopRequireWildcard(_uu5g);

var _bricksNs = require('./bricks-ns.js');

var _bricksNs2 = _interopRequireDefault(_bricksNs);

var _span = require('./span.js');

var _span2 = _interopRequireDefault(_span);

var _factory = require('./factory.js');

require('./screen-size-item.less');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var SCREEN_SIZES = ["xs", "s", "m", "l", "xl"];

exports.default = (0, _createReactClass2.default)({
  displayName: 'screen-size-item',


  //@@viewOn:mixins
  mixins: [UU5.Common.BaseMixin, UU5.Common.ElementaryMixin, UU5.Common.NestingLevelMixin, UU5.Common.ContentMixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: _bricksNs2.default.name("ScreenSize.Item"),
    nestingLevelList: UU5.Environment.getNestingLevelList('spa'),
    classNames: {
      main: _bricksNs2.default.css("screen-size-item")
    },
    opt: {
      nestingLevelWrapper: true
    },
    errors: {
      invalidParent: 'Parent of this component is not ScreenSize.'
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    screenSize: _propTypes2.default.oneOfType([_propTypes2.default.oneOf(SCREEN_SIZES), _propTypes2.default.arrayOf(_propTypes2.default.oneOf(SCREEN_SIZES))]).isRequired
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      screenSize: null
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  componentWillMount: function componentWillMount() {
    if (!(this.getParent() && this.getParent().isScreenSize)) {
      this.showError("invalidParent");
    }
  },
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render: function render() {
    var children = this.getNestingLevel() === 'inline' ? _react2.default.createElement(
      _span2.default,
      _extends({}, this.getMainPropsToPass(), { content: this.props.content }),
      this.props.children && _react2.default.Children.toArray(this.props.children)
    ) : _react2.default.createElement(
      _factory.Div,
      _extends({}, this.getMainPropsToPass(), { content: this.props.content }),
      this.props.children && _react2.default.Children.toArray(this.props.children)
    );
    return children;
  }
  //@@viewOff:render
});