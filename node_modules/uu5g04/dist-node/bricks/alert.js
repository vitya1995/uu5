'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Alert = undefined;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _createReactClass = require('create-react-class');

var _createReactClass2 = _interopRequireDefault(_createReactClass);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _uu5g = require('uu5g04');

var UU5 = _interopRequireWildcard(_uu5g);

var _bricksNs = require('./bricks-ns.js');

var _bricksNs2 = _interopRequireDefault(_bricksNs);

var _link = require('./link.js');

var _link2 = _interopRequireDefault(_link);

var _icon = require('./icon.js');

var _icon2 = _interopRequireDefault(_icon);

require('./alert.less');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Alert = exports.Alert = (0, _createReactClass2.default)({
  displayName: 'Alert',


  //@@viewOn:mixins
  mixins: [UU5.Common.BaseMixin, UU5.Common.ElementaryMixin, UU5.Common.NestingLevelMixin, UU5.Common.ColorSchemaMixin, UU5.Common.SectionMixin, UU5.Common.PureRenderMixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: _bricksNs2.default.name("Alert"),
    nestingLevelList: UU5.Environment.getNestingLevelList('bigBoxCollection', 'box'),
    classNames: {
      main: _bricksNs2.default.css("alert"),
      withHeader: _bricksNs2.default.css("alert-with-header"),
      header: _bricksNs2.default.css("alert-header"),
      headerWrapper: _bricksNs2.default.css("alert-header-wrapper"),
      content: _bricksNs2.default.css("alert-content"),
      position: _bricksNs2.default.css("alert-"),
      block: _bricksNs2.default.css("alert-block"),
      close: _bricksNs2.default.css("alert-close")
    },
    defaults: {
      transitionDuration: 150,
      closeIcon: 'mdi-close'
    },
    opt: {
      nestingLevelWrapper: true
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    position: _propTypes2.default.oneOf(['left', 'center', 'right']),
    closeTimer: _propTypes2.default.number,
    closeDisabled: _propTypes2.default.bool,
    block: _propTypes2.default.bool,
    onClose: _propTypes2.default.func,
    onCloseAfter: _propTypes2.default.func,
    onCloseBefore: _propTypes2.default.func
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      position: 'center',
      closeTimer: null,
      closeDisabled: false,
      block: false,
      onClose: null,
      onCloseAfter: null,
      onCloseBefore: null
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    nextProps.content !== this.props.content && this._clearTimeout();
  },

  componentWillUnmount: function componentWillUnmount() {
    this._clearTimeout();
  },
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _clearTimeout: function _clearTimeout() {
    if (this.timeout) {
      clearTimeout(this.timeout);
      this.timeout = null;
    }
    return this;
  },

  _hide: function _hide() {
    var alert = this;
    this._clearTimeout();

    if (typeof this.props.onCloseBefore === 'function') {
      this.props.onCloseBefore(alert, this._hideFunc());
    } else {
      this._hideFunc();
    }

    return this;
  },

  _hideFunc: function _hideFunc() {
    var alert = this;
    this.hide(typeof this.props.onClose === 'function' || typeof this.props.onCloseAfter === 'function' ? function () {
      setTimeout(function () {
        typeof alert.props.onCloseAfter === 'function' ? alert.props.onCloseAfter(alert) : alert.props.onClose(alert);
      }, this.getDefault().transitionDuration);
    } : null);
  },

  //@@viewOff:componentSpecificHelpers

  // Render
  _getMainAttrs: function _getMainAttrs() {
    var mainAttrs = this.getMainAttrs();
    mainAttrs.className += ' ' + this.getClassName().position + this.props.position;
    this.props.block && (mainAttrs.className += ' ' + this.getClassName().block);

    mainAttrs.style = mainAttrs.style || {};

    var time = this.getDefault().transitionDuration / 1000;
    ['WebkitTransitionDuration', 'MozTransitionDuration', 'MsTransitionDuration', 'OTransitionDuration', 'transitionDuration'].forEach(function (style) {
      mainAttrs.style[style] = time + 's';
    });

    return mainAttrs;
  },

  _manageTimeout: function _manageTimeout() {
    if (this.props.closeTimer) {
      if (this.isHidden()) {
        this._clearTimeout();
      } else if (!this.timeout) {
        this.timeout = setTimeout(this._hide, this.props.closeTimer);
      }
    }
  },

  _getChildren: function _getChildren() {
    var result = void 0;

    if (this.props.header) {
      result = [_react2.default.createElement(
        'div',
        { className: this.getClassName('headerWrapper'), key: '1' },
        _react2.default.createElement(
          'div',
          { className: this.getClassName('header') },
          ' ',
          this.getHeader(),
          ' '
        ),
        !this.props.closeDisabled && _react2.default.createElement(
          _link2.default,
          { className: this.getClassName().close, onClick: this._hide, parent: this, colorSchema: 'custom' },
          _react2.default.createElement(_icon2.default, { icon: this.getDefault('closeIcon') })
        )
      ), _react2.default.createElement(
        'div',
        { className: this.getClassName('content'), key: '2' },
        ' ',
        this.getChildren(),
        ' '
      ), this.getDisabledCover()];
    } else {
      result = [_react2.default.createElement(
        'div',
        { className: this.getClassName('headerWrapper'), key: '1' },
        _react2.default.createElement(
          'div',
          { className: this.getClassName('content') },
          ' ',
          this.getChildren(),
          ' '
        ),
        !this.props.closeDisabled && _react2.default.createElement(
          _link2.default,
          { className: this.getClassName().close, onClick: this._hide, parent: this, colorSchema: 'custom' },
          _react2.default.createElement(_icon2.default, { icon: this.getDefault('closeIcon') })
        )
      ), this.getDisabledCover()];
    }

    return result;
  },


  //@@viewOn:render
  render: function render() {
    var mainAttrs = this._getMainAttrs();
    if (this.props.header) {
      mainAttrs.className += ' ' + this.getClassName('withHeader');
    }

    this._manageTimeout();

    return this.getNestingLevel() ? _react2.default.createElement(
      'div',
      mainAttrs,
      this._getChildren()
    ) : null;
  }
  //@@viewOff:render
});

exports.default = Alert;