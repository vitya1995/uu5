'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Rating = undefined;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _createReactClass = require('create-react-class');

var _createReactClass2 = _interopRequireDefault(_createReactClass);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _uu5g = require('uu5g04');

var UU5 = _interopRequireWildcard(_uu5g);

var _bricksNs = require('./bricks-ns.js');

var _bricksNs2 = _interopRequireDefault(_bricksNs);

var _icon = require('./icon.js');

var _icon2 = _interopRequireDefault(_icon);

require('./rating.less');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Rating = exports.Rating = (0, _createReactClass2.default)({
  displayName: 'Rating',


  //@@viewOn:mixins
  mixins: [UU5.Common.BaseMixin, UU5.Common.PureRenderMixin, UU5.Common.ElementaryMixin, UU5.Common.ContentMixin, UU5.Common.ColorSchemaMixin, UU5.Common.NestingLevelMixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: _bricksNs2.default.name("Rating"),
    nestingLevelList: UU5.Environment.getNestingLevelList('bigBoxCollection', 'box'),
    classNames: {
      main: _bricksNs2.default.css("rating"),
      click: _bricksNs2.default.css("rating-clickable"),
      size: _bricksNs2.default.css("rating-size-")
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    count: _propTypes2.default.number,
    value: _propTypes2.default.number,
    onClick: _propTypes2.default.func,
    icon: _propTypes2.default.string,
    size: _propTypes2.default.oneOf(['s', 'm', 'l', 'xl'])
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      count: 5,
      value: 0,
      onClick: null,
      icon: 'mdi-star',
      size: 'm'
    };
  },

  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _createIconArray: function _createIconArray() {
    var _this = this;

    var iconArray = [];
    var value = this.props.value;
    var max = this.props.count;

    var _loop = function _loop(i) {

      var iconValue = 0;
      i <= value && (iconValue = 1);
      var integerVal = Math.floor(value);
      var part = value - integerVal;

      part > 0 && i == integerVal + 1 && (iconValue = part);
      iconArray.push(_react2.default.createElement(RatingIcon, { value: iconValue, key: i, icon: _this.props.icon, onClick: _this.props.onClick ? function (e) {
          return _this.props.onClick(i, e, _this);
        } : null }));
    };

    for (var i = max; i > 0; i--) {
      _loop(i);
    }
    return iconArray;
  },

  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render: function render() {
    var mainAttrs = this.getMainAttrs();
    mainAttrs.className += ' ' + this.getClassName('size') + this.props.size;
    this.props.onClick && (mainAttrs.className = mainAttrs.className + ' ' + this.getClassName('click'));

    return this.getNestingLevel() ? _react2.default.createElement(
      'div',
      mainAttrs,
      this._createIconArray()
    ) : null;
  }
  //@@viewOff:render

});

exports.default = Rating;


var RatingIcon = (0, _createReactClass2.default)({
  displayName: 'RatingIcon',

  //@@viewOn:mixins
  mixins: [UU5.Common.BaseMixin, UU5.Common.PureRenderMixin, UU5.Common.ElementaryMixin, UU5.Common.ColorSchemaMixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: _bricksNs2.default.name("Rating.Icon"),
    classNames: {
      main: _bricksNs2.default.css("rating-icon"),
      icon: _bricksNs2.default.css("rating-icon-icon"),
      icon10: _bricksNs2.default.css("rating-icon-part-10"),
      icon20: _bricksNs2.default.css("rating-icon-part-20"),
      icon30: _bricksNs2.default.css("rating-icon-part-30"),
      icon40: _bricksNs2.default.css("rating-icon-part-40"),
      icon50: _bricksNs2.default.css("rating-icon-part-50"),
      icon60: _bricksNs2.default.css("rating-icon-part-60"),
      icon70: _bricksNs2.default.css("rating-icon-part-70"),
      icon80: _bricksNs2.default.css("rating-icon-part-80"),
      icon90: _bricksNs2.default.css("rating-icon-part-90"),
      full: _bricksNs2.default.css("rating-icon-full")
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    onClick: _propTypes2.default.func,
    icon: _propTypes2.default.string,
    value: _propTypes2.default.number
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      onClick: null,
      icon: 'mdi-star',
      value: 0
    };
  },

  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _getCorrectClass: function _getCorrectClass() {
    var _class = void 0;
    var value = this.props.value;
    if (value === 1) {
      _class = { className: this.getClassName().full };
    } else if (value > 0 && value < 1) {
      value = 1 - value;
      var percents = Math.round(value * 10) * 10;
      percents = percents === 0 ? 10 : percents;
      _class = { className: this.getClassName()['icon' + percents] };
    }

    return _class;
  },

  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render: function render() {
    var mainAttrs = this.getMainAttrs();

    this.props.onClick && (mainAttrs.onClick = this.props.onClick);
    return _react2.default.createElement(
      'span',
      mainAttrs,
      _react2.default.createElement(_icon2.default, { icon: this.props.icon, mainAttrs: this._getCorrectClass(), className: this.getClassName().icon })
    );
  }
  //@@viewOff:render

});