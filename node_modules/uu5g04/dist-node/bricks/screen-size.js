'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ScreenSize = undefined;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _createReactClass = require('create-react-class');

var _createReactClass2 = _interopRequireDefault(_createReactClass);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _uu5g = require('uu5g04');

var UU5 = _interopRequireWildcard(_uu5g);

var _bricksNs = require('./bricks-ns.js');

var _bricksNs2 = _interopRequireDefault(_bricksNs);

var _screenSizeItem = require('./screen-size-item.js');

var _screenSizeItem2 = _interopRequireDefault(_screenSizeItem);

require('./screen-size.less');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ScreenSize = exports.ScreenSize = (0, _createReactClass2.default)({
  displayName: 'ScreenSize',


  //@@viewOn:mixins
  mixins: [UU5.Common.BaseMixin, UU5.Common.ElementaryMixin, UU5.Common.ContentMixin, UU5.Common.ScreenSizeMixin, UU5.Common.NestingLevelMixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: _bricksNs2.default.name("ScreenSize"),
    nestingLevelList: UU5.Environment.getNestingLevelList('spa'),
    classNames: {
      main: _bricksNs2.default.css("screen-size")
    },
    defaults: {
      childTagName: 'UU5.Bricks.ScreenSize.Item'
    },
    opt: {
      nestingLevelWrapper: true
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    screenSize: _propTypes2.default.string
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      screenSize: null
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  isScreenSize: function isScreenSize() {
    return true;
  },

  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _expandChildProps: function _expandChildProps(child) {
    var newChildProps = UU5.Common.Tools.mergeDeep({}, child.props);

    newChildProps.id = this.getId() + '-inner';
    newChildProps.controlled = true;
    newChildProps.hidden = this.isHidden();
    newChildProps.disabled = this.isDisabled();
    newChildProps.selected = this.isSelected();
    newChildProps.nestingLevel = this.getNestingLevel();

    return newChildProps;
  },

  _testScreenSize: function _testScreenSize(child, screenSize) {
    var result = child && child.props && child.props.screenSize;
    if (result) {
      if (Array.isArray(result)) {
        result = result.indexOf(screenSize) > -1;
      } else {
        result = result === '*' ? true : result === screenSize;
      }
    }
    return result;
  },
  _getItem: function _getItem() {
    var _this = this;

    var item = null;
    var children = this.getChildren();
    var screenSize = this.getScreenSize();

    if (children) {
      children.some(function (child) {
        return item = _this._testScreenSize(child, screenSize) ? child : null;
      });
      item = _react2.default.cloneElement(item, this._expandChildProps(item));
    }

    return item;
  },

  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render: function render() {
    return this.getNestingLevel() ? this._getItem() : null;
  }
  //@@viewOff:render
});

ScreenSize.Item = _screenSizeItem2.default;

exports.default = ScreenSize;