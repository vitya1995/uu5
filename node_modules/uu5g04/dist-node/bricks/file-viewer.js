'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FileViewer = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _createReactClass = require('create-react-class');

var _createReactClass2 = _interopRequireDefault(_createReactClass);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _uu5g = require('uu5g04');

var UU5 = _interopRequireWildcard(_uu5g);

var _bricksNs = require('./bricks-ns.js');

var _bricksNs2 = _interopRequireDefault(_bricksNs);

var _loading = require('./loading.js');

var _loading2 = _interopRequireDefault(_loading);

var _table = require('./table.js');

var _table2 = _interopRequireDefault(_table);

var _tableTbody = require('./table-tbody.js');

var _tableTbody2 = _interopRequireDefault(_tableTbody);

var _tableTr = require('./table-tr.js');

var _tableTr2 = _interopRequireDefault(_tableTr);

var _tableTd = require('./table-td.js');

var _tableTd2 = _interopRequireDefault(_tableTd);

var _link = require('./link.js');

var _link2 = _interopRequireDefault(_link);

var _modal = require('./modal.js');

var _modal2 = _interopRequireDefault(_modal);

require('./file-viewer.less');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var FileViewer = exports.FileViewer = (0, _createReactClass2.default)({
  displayName: 'FileViewer',


  //@@viewOn:mixins
  mixins: [UU5.Common.BaseMixin, UU5.Common.ElementaryMixin, UU5.Common.NestingLevelMixin, UU5.Common.PureRenderMixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: _bricksNs2.default.name("FileViewer"),
    nestingLevelList: UU5.Environment.getNestingLevelList('bigBox', 'inline'),
    defaults: {
      displayErrMsg: 'Error during loading file ',
      regexpWhiteSpace: /^\s+/
    },
    classNames: {
      main: _bricksNs2.default.css("file-viewer"),
      blockOfLines: _bricksNs2.default.css("file-viewer-block-of-lines"),
      blockOfLineNumbers: _bricksNs2.default.css("file-viewer-block-of-line-numbers uu5-common-right")
    },
    errors: {
      unknownCallFeedback: 'Call feedback %s is not one of %s',
      loadError: 'File %s cannot be found.'
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    src: _propTypes2.default.string,
    parameters: _propTypes2.default.object,
    numbered: _propTypes2.default.bool,
    trimmed: _propTypes2.default.bool,
    blockKey: _propTypes2.default.string,
    blockStart: _propTypes2.default.string,
    blockEnd: _propTypes2.default.string
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      src: null,
      parameters: null,
      numbered: false,
      trimmed: true,
      blockKey: null,
      blockStart: '\@\@viewOn:',
      blockEnd: '\@\@viewOff:'
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  getInitialState: function getInitialState() {
    return {
      data: null,
      blockOfLines: null,
      blockOfLineNumbers: null,
      blockOfLineNumbersWidth: null,
      callFeedback: 'loading',
      message: null
    };
  },

  componentWillMount: function componentWillMount() {
    !this.props.src && this.setState({ callFeedback: 'ready' });
  },

  componentDidMount: function componentDidMount() {
    if (this.props.src) {
      this._loading = true;
      this._getData(this.props);
    }
  },

  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    if (nextProps.src && (nextProps.src !== this.props.src || nextProps.parameters !== this.props.parameters)) {
      this.setState({
        data: null,
        blockOfLines: null,
        blockOfLineNumbers: null,
        blockOfLineNumbersWidth: null,
        callFeedback: 'loading',
        message: null
      }, function () {
        this._getData(nextProps);
      }.bind(this));
    } else {
      if (nextProps.numbered !== this.props.numbered || nextProps.trimmed !== this.props.trimmed || nextProps.blockKey !== this.props.blockKey || nextProps.blockStart !== this.props.blockStart || nextProps.blockEnd !== this.props.blockEnd) {
        this._buildData(nextProps);
      }
    }
  },

  componentWillUnmount: function componentWillUnmount() {
    this._serverRequest && this._serverRequest.abort();
    this._loading = false;
  },
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _getData: function _getData(props) {
    var _this = this;

    this._serverRequest && this._serverRequest.abort();
    this._serverRequest = UU5.Common.Tools.getServerRequest(props.src, props.parameters, 'text', function (data) {
      if (_this._loading) {
        _this.setState({ data: data, callFeedback: 'ready' }, function () {
          return _this._buildData(props);
        });
      }
    }, function (e) {
      if (_this._loading) {
        _this.showError('loadError', props.src, { context: { error: e } });
        _this.setState({
          callFeedback: 'error',
          message: _this.getDefault().displayErrMsg + props.src + ' (' + props.parameters + ')'
        });
      }
    });
  },

  _buildData: function _buildData(props) {
    var _this2 = this;

    var fileViewer = this;
    var blockOfLines = '';
    var blockOfLineNumbers = '';
    var lines = this.state.data.split("\n");
    var blockOfLineNumbersWidth = (lines.length + 1 + '').length;
    var blockStart = props.blockStart + props.blockKey;
    var blockEnd = props.blockEnd + props.blockKey;
    var write = !props.blockKey;
    var toTrim = null;
    var _toTrim = null;

    if (props.trimmed) {
      lines.forEach(function (v, i) {
        if (v.match(blockStart)) {
          write = true;
        } else if (v.match(blockEnd)) {
          write = false;
        } else if (write) {
          _toTrim = v.length - v.replace(_this2.getDefault().regexpWhiteSpace, "").length;
          if (toTrim === null || _toTrim < toTrim) {
            toTrim = _toTrim;
          }
        }
      });
    }

    lines.forEach(function (v, i) {
      if (v.match(blockStart)) {
        write = true;
      } else if (v.match(blockEnd)) {
        write = false;
      } else if (write) {
        if (props.numbered) {
          //blockOfLineNumbers += UU5.Common.Tools.pad(i + 1, blockOfLineNumbersWidth) + '\n';
          blockOfLineNumbers += i + 1 + '\n';
        }
        if (props.trimmed) {
          blockOfLines += v.substring(toTrim, v.length) + '\n';
        } else {
          blockOfLines += v + '\n';
        }
      }
    });
    fileViewer.setState({
      blockOfLines: blockOfLines,
      blockOfLineNumbers: blockOfLineNumbers
    });
  },

  _getMainChild: function _getMainChild() {
    var mainChild;
    var mainProps = this.getMainPropsToPass();

    switch (this.state.callFeedback) {
      case 'loading':
        mainChild = _react2.default.createElement(_loading2.default, mainProps);
        break;
      case 'ready':
        mainChild = _react2.default.createElement(
          _table2.default,
          this.getMainAttrs(),
          _react2.default.createElement(
            _tableTbody2.default,
            null,
            _react2.default.createElement(
              _tableTr2.default,
              null,
              this.props.numbered && _react2.default.createElement(
                _tableTd2.default,
                { className: this.getClassName().blockOfLineNumbers, mainAttrs: { style: { width: this.state.blockOfLineNumbersWidth + 1 + "em" } }, colorSchema: 'default' },
                this.state.blockOfLineNumbers
              ),
              _react2.default.createElement(
                _tableTd2.default,
                { className: this.getClassName().blockOfLines, colorSchema: 'default' },
                this.state.blockOfLines
              )
            )
          )
        );
        break;
      case 'error':
        mainChild = _react2.default.createElement(UU5.Common.Error, _extends({}, mainProps, { content: this.state.message }));
        break;
      default:
        this.showError('unknownCallFeedback', [this.state.callFeedback, 'loading, ready, error']);
        mainChild = _react2.default.createElement('span', null);
    }

    return mainChild;
  },
  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render: function render() {
    var _this3 = this;

    var component = void 0;
    switch (this.getNestingLevel()) {
      case 'bigBox':
      case 'boxCollection':
      case 'box':
        component = this._getMainChild();
        break;
      case 'inline':
        component = this.state.callFeedback === 'ready' ? _react2.default.createElement(
          'span',
          null,
          _react2.default.createElement(
            _modal2.default,
            { ref_: function ref_(modal) {
                return _this3._modal = modal;
              } },
            this._getMainChild()
          ),
          _react2.default.createElement(_link2.default, { onClick: function onClick() {
              return _this3._modal.open();
            }, content: this.props.src })
        ) : null;
        break;
      default:
        component = null;
    }

    return component;
  }
  //@@viewOff:render
});

exports.default = FileViewer;