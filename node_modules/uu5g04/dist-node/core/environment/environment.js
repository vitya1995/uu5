"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Environment = undefined;

var _module = require("module");

var _module2 = _interopRequireDefault(_module);

var _textEntityMap = require("./text-entity-map.js");

var _iconManager = require("./icon-manager.js");

var _iconManager2 = _interopRequireDefault(_iconManager);

var _documentManager = require("./document-manager.js");

var _documentManager2 = _interopRequireDefault(_documentManager);

var _timeManager = require("./time-manager.js");

var _timeManager2 = _interopRequireDefault(_timeManager);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _this = undefined;

var uri = ((_module2.default ? _module2.default.uri : (document.currentScript || Array.prototype.slice.call(document.getElementsByTagName("script"), -1)[0] || {}).src) || "").toString();
var uu5BaseUrl = uri ? uri.replace(/^(.*\/).*/, "$1") : './';

var Environment = exports.Environment = {
  name: process.env.NAME,
  mode: process.env.NODE_ENV,
  version: process.env.VERSION,
  licence: 'uu5g04-' + process.env.VERSION + ' ©Unicorn 2017',
  basePath: uu5BaseUrl,
  nestingLevelList: ['spa', 'page', 'container', 'bigBoxCollection', 'bigBox', 'boxCollection', 'box', 'smallBoxCollection', 'smallBox', 'inline'],
  nestingLevelStrict: false,
  colorSchemaMap: {
    default: {
      color: 'default'
    },
    primary: {
      color: 'blue-rich',
      src: uu5BaseUrl + 'assets/color-schema/blue-rich.min.css'
    },
    success: {
      color: 'green',
      src: uu5BaseUrl + 'assets/color-schema/green.min.css'
    },
    info: {
      color: 'blue',
      src: uu5BaseUrl + 'assets/color-schema/blue.min.css'
    },
    warning: {
      color: 'orange',
      src: uu5BaseUrl + 'assets/color-schema/orange.min.css'
    },
    danger: {
      color: 'red',
      src: uu5BaseUrl + 'assets/color-schema/red.min.css'
    },

    yellow: {
      color: 'yellow',
      src: uu5BaseUrl + 'assets/color-schema/yellow.min.css'
    },
    'yellow-rich': {
      color: 'yellow-rich',
      src: uu5BaseUrl + 'assets/color-schema/yellow-rich.min.css'
    },
    orange: {
      color: 'orange',
      src: uu5BaseUrl + 'assets/color-schema/orange.min.css'
    },
    'orange-rich': {
      color: 'orange-rich',
      src: uu5BaseUrl + 'assets/color-schema/orange-rich.min.css'
    },
    pink: {
      color: 'pink',
      src: uu5BaseUrl + 'assets/color-schema/pink.min.css'
    },
    'pink-rich': {
      color: 'pink-rich',
      src: uu5BaseUrl + 'assets/color-schema/pink-rich.min.css'
    },
    red: {
      color: 'red',
      src: uu5BaseUrl + 'assets/color-schema/red.min.css'
    },
    'red-rich': {
      color: 'red-rich',
      src: uu5BaseUrl + 'assets/color-schema/red-rich.min.css'
    },
    purple: {
      color: 'purple',
      src: uu5BaseUrl + 'assets/color-schema/purple.min.css'
    },
    'purple-rich': {
      color: 'purple-rich',
      src: uu5BaseUrl + 'assets/color-schema/purple-rich.min.css'
    },
    cyan: {
      color: 'cyan',
      src: uu5BaseUrl + 'assets/color-schema/cyan.min.css'
    },
    'cyan-rich': {
      color: 'cyan-rich',
      src: uu5BaseUrl + 'assets/color-schema/cyan-rich.min.css'
    },
    blue: {
      color: 'blue',
      src: uu5BaseUrl + 'assets/color-schema/blue.min.css'
    },
    'blue-rich': {
      color: 'blue-rich',
      src: uu5BaseUrl + 'assets/color-schema/blue-rich.min.css'
    },
    green: {
      color: 'green',
      src: uu5BaseUrl + 'assets/color-schema/green.min.css'
    },
    'green-rich': {
      color: 'green-rich',
      src: uu5BaseUrl + 'assets/color-schema/green-rich.min.css'
    },
    brown: {
      color: 'brown',
      src: uu5BaseUrl + 'assets/color-schema/brown.min.css'
    },
    'brown-rich': {
      color: 'brown-rich',
      src: uu5BaseUrl + 'assets/color-schema/brown-rich.min.css'
    },
    grey: {
      color: 'grey',
      src: uu5BaseUrl + 'assets/color-schema/grey.min.css'
    },
    'grey-rich': {
      color: 'grey-rich',
      src: uu5BaseUrl + 'assets/color-schema/grey-rich.min.css'
    },
    custom: {
      color: 'custom'
    }
  },
  // External component calls
  calls: {},
  // External component limits
  limits: {},
  // Central component register (ccr)
  ccr: {
    byKey: {}
  },
  ccrStrict: false,
  CCRKEY_PAGE: 'UU5.Bricks.Page',
  CCRKEY_ROUTER: 'UU5.Common.Router',
  COMPONENT_REGISTRY_URL: 'https://uuos9.plus4u.net/uu-uu5componentregistryg01-main/85849867896916817-fe96c133c895434bbd4d5b24831483f3/getLibrary', //PROD
  // COMPONENT_REGISTRY_URL: 'https://uuos9.plus4u.net/uu-uu5componentregistryg01-main/84723967990075193-eb48e82fb0ab409b9dd2fe4f956226dc/getLibrary', //DEV
  CDN_URL: 'https://cdn.plus4u.net',
  resizeInterval: 150,
  holdTimeout: 500,
  uu5DataMap: {},
  languages: [{ language: 'cs', q: 1.0 }, { language: 'sk', q: 0.7 }, { language: 'en', q: 0.4 }],
  languageList: {
    cs: {
      flag: uu5BaseUrl + 'assets/flags/cs.png',
      language: 'Česky'
    },
    nl: {
      flag: uu5BaseUrl + 'assets/flags/nl.png',
      language: 'Nederlands'
    },
    en: {
      flag: uu5BaseUrl + 'assets/flags/en-gb.png',
      language: 'English'
    },
    'en-gb': {
      flag: uu5BaseUrl + 'assets/flags/en-gb.png',
      language: 'English GB'
    },
    'en-us': {
      flag: uu5BaseUrl + 'assets/flags/en-us.png',
      language: 'English US'
    },
    fr: {
      flag: uu5BaseUrl + 'assets/flags/fr.png',
      language: 'Français'
    },
    de: {
      flag: uu5BaseUrl + 'assets/flags/de.png',
      language: 'Deutsch'
    },
    pl: {
      flag: uu5BaseUrl + 'assets/flags/pl.png',
      language: 'Polski'
    },
    ru: {
      flag: uu5BaseUrl + 'assets/flags/ru.png',
      language: 'Pусский'
    },
    sk: {
      flag: uu5BaseUrl + 'assets/flags/sk.png',
      language: 'Slovensky'
    },
    es: {
      flag: uu5BaseUrl + 'assets/flags/es.png',
      language: 'Español'
    },
    uk: {
      flag: uu5BaseUrl + 'assets/flags/uk.png',
      language: 'Yкраїнський'
    }
  },
  defaultLanguage: 'en-gb',
  // URI for log errors
  //logErrorUrl: null, //TODO: deprecated
  // function for log errors
  logErrorFunction: null,
  hardSpace: {
    regExp: '\&nbsp;',
    nbSpace: "\xA0",
    nbHyphen: "\u2011",
    lsiReplacer: {}
  },

  textCorrector: false,

  textEntityMap: _textEntityMap.TextEntityMap,
  textEntityReplace: true,

  // {'cs-CZ': {decimalSeparator: ',', thousandSeparator: '.'}}
  numberFormat: {},

  // {'cs-CZ': 'dd.MM.yyyy HH:mm:ss.SSS'}
  dateTimeFormat: {},
  dateTimeZone: -new Date().getTimezoneOffset() / 60,
  //uu5String tags regExp
  uu5StringTagsRegExp: null,

  session: null,
  urlBuilder: null,

  library: {},
  useComponentRegistry: true,
  runtimeLibraries: {}
};

Environment.DocumentManager = _documentManager2.default;
Environment.TimeManager = new _timeManager2.default();

/********** ICONS start **********/
Environment.iconLibraries = {
  mdi: "https://cdn.plus4u.net/libs/materialdesignicons/2.0.46/css/materialdesignicons.min.css",
  glyphicon: "https://cdn.plus4u.net/libs/bootstrap/3.3.7/css/bootstrap.min.css",
  fa: "https://cdn.plus4u.net/libs/font-awsome/4.7.0/css/font-awesome.min.css",
  uu5: "https://cdn.plus4u.net/uu-uu5g04-icons/1.0.0/uu5g04_icons.min.css"
  // plus4u5: "https://cdn.plus4u.net/uu-plus4u5g01-icons/1.0.0/uu_plus4u5g01_icons.min.css",
  // uubml: "https://cdn.plus4u.net/uu-uubmldrawg01-icons/1.0.0/uubmldrawg01_icons.min.css"
};

Environment.IconManager = new _iconManager2.default(Environment.iconLibraries);

Environment.addIconLibrary = function (iconsKey, src) {
  Environment.iconLibraries[iconsKey] = src;
};

Environment.removeIconLibrary = function (iconsKey) {
  delete Environment.iconLibraries[iconsKey];
};

Environment.clearIconLibraries = function () {
  for (var iconsKey in Environment.iconLibraries) {
    delete Environment.iconLibraries[iconsKey];
  }
};
/********** ICONS end **********/

Environment.addLibrary = function (libraryName, params) {
  //TODO check if exist and merge
  Environment.library[libraryName] = params;
  return _this;
};

Environment.getLibrary = function (libraryName) {
  var library = Environment.library;
  if (libraryName) {
    library = library[libraryName];
  }
  return library;
};

// library = {name, version}
Environment.addRuntimeLibrary = function (library) {
  library.name && (Environment.runtimeLibraries[library.name] = library);
  return _this;
};
Environment.addRuntimeLibrary({ name: "uu5g04", version: Environment.version });

Environment.getRuntimeLibraries = function () {
  return Environment.runtimeLibraries;
};

Environment.colorSchema = Object.keys(Environment.colorSchemaMap);

Environment.isDevelopment = function () {
  return Environment.mode === 'development';
};

Environment.isProduction = function () {
  return Environment.mode === 'production';
};

// Version
console.log(Environment.licence);

Environment.changeColorSchema = function (key, colorSchema, src) {
  Environment.colorSchemaMap[key] = Environment.colorSchemaMap[key] || {};
  Environment.colorSchemaMap[key].color = colorSchema;
  src && (Environment.colorSchemaMap[key].src = src);
  Environment.colorSchema = Object.keys(Environment.colorSchemaMap);
  return this;
};

Environment.getColorSchema = function (key) {
  var colorSchema = Environment.colorSchemaMap[key];
  var color = null;

  if (colorSchema) {
    color = colorSchema.color;

    Environment.loadedColors = Environment.loadedColors || {};
    if (colorSchema.src && !Environment.loadedColors[color]) {
      Environment.loadedColors[color] = true;
      Environment.DocumentManager.addUniqueCss(colorSchema.src);
    }
  }

  return color;
};

Environment.search = function (searchedTexts) {
  var el = Environment.EventListener || window.UU5.Environment.EventListener;
  el.triggerHighlight(searchedTexts);
  return _this;
};

Environment.setDateTimeFormat = function (format) {
  var el = Environment.EventListener || window.UU5.Environment.EventListener;
  el.triggerDateTime({ format: format });
  return _this;
};

Environment.setDateTimeCountry = function (country) {
  var el = Environment.EventListener || window.UU5.Environment.EventListener;
  el.triggerDateTime({ country: country });
  return _this;
};

Environment.setDateTimeZone = function (timeZone) {
  var el = Environment.EventListener || window.UU5.Environment.EventListener;
  el.triggerDateTime({ timeZone: timeZone });
  return _this;
};

Environment.setDateTimeOptions = function (opt) {
  var el = Environment.EventListener || window.UU5.Environment.EventListener;
  el.triggerDateTime(opt);
  return _this;
};

Environment.setNumberCountry = function (country) {
  var el = Environment.EventListener || window.UU5.Environment.EventListener;
  el.triggerNumber({ country: country });
  return _this;
};

Environment.setNumberOptions = function (opt) {
  var el = Environment.EventListener || window.UU5.Environment.EventListener;
  el.triggerNumber(opt);
  return _this;
};

Environment.getRouter = function () {
  return Environment.router;
};

Environment.setRoute = function (route, setStateCallback) {
  return Environment.getRouter().setRoute(route, setStateCallback);
};

Environment.hardSpace.lsiReplacer['cs-cz'] = function (text) {

  var newText = text.replace(new RegExp(Environment.hardSpace.regExp, 'g'), Environment.hardSpace.nbSpace);

  var nbSpace = Environment.hardSpace.nbSpace;

  var wordsWithSpace = {
    after: ["s", "k", "v", "z", "a", "i", "o", "u"],
    degreesBefore: ["bc.", "bca.", "ing.", "ing.arch.", "mudr.", "mvdr.", "mga.", "mgr.", "judr.", "phdr.", "rndr.", "pharmdr.", "thlic.", "thdr.", "prof.", "doc.", "paeddr.", "dr.", "phmr."],
    degreesAfter: ["ph.d.", "th.d.", "csc.", "drsc.", "dis."],
    units: ["%", "Kč", "€", "m", "g", "l", "q", "t", "w", "J", "ks", "mm", "cm", "km", "mg", "dkg", "kg", "ml", "cl", "dl", "hl", "m3", "km3", "mm2", "cm2", "dm2", "m2", "km2", "ha", "Pa", "hPa", "kPa", "MPa", "bar", "mbar", "nbar", "atm", "psi", "kW", "MW", "HP", "m/s", "km/h", "m/min", "MPH", "cal", "Wh", "kWh", "kp·m", "°C", "°F", "kB", "dB", "MB", "GB", "kHz", "MHz"]
  };

  var spaceSplitter = newText.split(' ');
  var resultText = '';
  for (var i = 0; i < spaceSplitter.length; i++) {
    var prevPart = spaceSplitter[i];
    var prevPartLowerCase = prevPart.toLowerCase();
    var lastChar = prevPart[prevPart.length - 1];
    var nextPart = spaceSplitter[i + 1];
    var firstChar = nextPart && nextPart[0];

    resultText += prevPart === '' ? ' ' : prevPart;

    if (nextPart) {
      if (
      // it is word with space after
      wordsWithSpace.after.indexOf(prevPartLowerCase) > -1 ||

      // dot and next char is not upper - not end of sentence
      '.' === lastChar && firstChar && firstChar !== firstChar.toUpperCase() && !isFinite(firstChar) && wordsWithSpace.degreesAfter.indexOf(prevPart.toLowerCase()) === -1 && spaceSplitter[i - 3] !== "dr." && spaceSplitter[i - 2] !== "h." && prevPart !== "c."

      // numbers split by space
      || isFinite(prevPart) && isFinite(nextPart)

      // degrees before name
      || wordsWithSpace.degreesBefore.indexOf(prevPartLowerCase) > -1

      // degrees after name
      || wordsWithSpace.degreesAfter.indexOf(nextPart.toLowerCase()) > -1

      // between number and unit
      || prevPart.match(/^\d+$/g) && wordsWithSpace.units.indexOf(nextPart) > -1) {
        resultText += nbSpace;

        // degree dr. h. c.
      } else if (nextPart === "dr." && spaceSplitter[i + 2] === "h." && spaceSplitter[i + 3] === "c." || prevPart === "dr." && nextPart === "h." && spaceSplitter[i + 2] === "c." || spaceSplitter[i - 1] === "dr." && prevPart === "h." && nextPart === "c.") {
        resultText += nbSpace;
      } else {
        resultText += " ";
      }
    }
  }

  // space after dot or comma
  //return resultText.replace(/([,.])([a-zA-Z0-9])/, "$1 $2");
  return resultText;
};

Environment.hardSpace.lsiReplacer['code'] = function (text) {
  var resultText = text;

  resultText = resultText.replace(/ /g, Environment.hardSpace.nbSpace);
  resultText = resultText.replace(/-/g, Environment.hardSpace.nbHyphen);

  return resultText;
};

Environment.setSession = function (session) {
  Environment.session = session.currentSession || session;
};

Environment.getSession = function () {

  var session = void 0;

  if (Environment.session) {
    session = Environment.session;
  } else {
    var Oidc = window.UuOidc;
    if (typeof window.System != "undefined") {
      if (window.System.has(window.System.normalizeSync("uu_oidc"))) {
        Oidc = window.System.get(window.System.normalizeSync("uu_oidc"));
      } else if (window.System.has(window.System.normalizeSync("uu_oidcg01"))) {
        Oidc = window.System.get(window.System.normalizeSync("uu_oidcg01"));
      }
    }

    if (Oidc) {
      session = Environment.session = Oidc.Session.currentSession || Oidc.Session;
    }
  }

  return session || null;
};

Environment.App = {
  vucConfig: {
    errorRoute: null
  },
  callConfig: {
    authorizeVuc: function authorizeVuc() {
      console.error("Please add to UU5.Environment.App.callConfig.authorizeVuc your own function as:\n        (dtoIn) => {\n          $.ajax({\n          url: dtoIn.data.name ? '/' + dtoIn.data.name : window.location.href,\n          type: 'get',\n          cache: false,\n          contentType: 'application/json',\n          data: { data: dtoIn.data }\n          }).done(doneDtoOut => {\n            if (typeof dtoIn.done === 'function') {\n              dtoIn.done(typeof doneDtoOut == 'string' && doneDtoOut.length ? JSON.parse(doneDtoOut) : doneDtoOut);\n            }\n          }).fail(failDtoOut => {\n            UU5.Common.Tools.error('authorizeVuc error', {dtoIn: dtoIn});\n            if (typeof dtoIn.fail === 'function') {\n              dtoIn.fail(typeof failDtoOut == 'string' && failDtoOut.length ? JSON.parse(failDtoOut) : failDtoOut);\n            }\n          });\n        }\n      ");
    }
  }
};

Environment.Lsi = {};
Environment.Lsi.Forms = {};
Environment.Lsi.Common = {};

Environment.getNestingLevelList = function (levelFrom, levelTo) {
  var begin = Environment.nestingLevelList.indexOf(levelFrom);
  begin < 0 && (begin = 0);
  var end = Environment.nestingLevelList.indexOf(levelTo) + 1;
  end <= begin && (end = Environment.nestingLevelList.length);
  return Environment.nestingLevelList.slice(begin, end);
};

Environment.getUrlBuilder = function () {
  return Environment.urlBuilder;
};

Environment.setUrlBuilder = function (urlBuilder) {
  Environment.urlBuilder = urlBuilder;
};

Environment.tagCalls = {};

exports.default = Environment;