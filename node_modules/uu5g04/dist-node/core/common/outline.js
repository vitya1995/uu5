'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Outline = undefined;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _createReactClass = require('create-react-class');

var _createReactClass2 = _interopRequireDefault(_createReactClass);

var _commonNs = require('./common-ns.js');

var _commonNs2 = _interopRequireDefault(_commonNs);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _baseMixin = require('./base-mixin.js');

var _baseMixin2 = _interopRequireDefault(_baseMixin);

var _elementaryMixin = require('./elementary-mixin.js');

var _elementaryMixin2 = _interopRequireDefault(_elementaryMixin);

var _tools = require('./tools.js');

var _tools2 = _interopRequireDefault(_tools);

var _pureRenderMixin = require('./pure-render-mixin');

var _pureRenderMixin2 = _interopRequireDefault(_pureRenderMixin);

var _outlineModal = require('./outline-modal.js');

var _outlineModal2 = _interopRequireDefault(_outlineModal);

require('./outline.less');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Outline = exports.Outline = (0, _createReactClass2.default)({
  displayName: 'Outline',


  //@@viewOn:mixins
  mixins: [_baseMixin2.default, _elementaryMixin2.default, _pureRenderMixin2.default],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: _commonNs2.default.name("Outline"),
    classNames: {
      main: _commonNs2.default.css("outline")
    },
    defaults: {
      propsIcon: 'mdi-information-outline'
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    element: _propTypes2.default.object
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      element: null
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  isOutline: function isOutline() {
    return true;
  },

  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _openModal: function _openModal(tag, props) {
    var propsString = JSON.stringify(props, null, 2);
    this.modal.open(tag, propsString);
    return this;
  },

  _buildOutlineItem: function _buildOutlineItem(tag, props, isContent) {
    var newProps = {};
    var items = null;

    if (props) {
      for (var prop in props) {
        var value = props[prop];
        if (prop === 'parent' && value) {
          value = value.getTagName();
        } else if (typeof value === 'function') {
          value = 'function()';
        }
        newProps[prop] = value;
      }

      if (isContent && typeof props.children !== 'string') {
        items = this._buildOutlineItems(props.children);
        delete newProps.children;
      }
    }

    var link = null;
    if (Object.keys(newProps).length) {
      link = _tools2.default.findComponent('UU5.Bricks.Link', {
        onClick: this._openModal.bind(this, tag, newProps),
        content: _tools2.default.findComponent('UU5.Bricks.Icon', { icon: this.getDefault().propsIcon })
      });
    }

    var newItemProps = {
      label: _tools2.default.findComponent('UU5.Bricks.Span', {
        parent: this,
        content: [tag, link]
      })
    };

    items && (newItemProps.items = items);

    return newItemProps;
  },

  _buildOutlineItems: function _buildOutlineItems(children) {
    var content = this;
    var items = null;

    if (children) {
      !Array.isArray(children) && (children = [children]);

      children.forEach(function (child) {
        items = items || [];
        items.push(content._buildOutlineItem(UU5.Common.Tools.getChildTagName(child), child.props, !!child.type["UU5.Common.ContentMixin"]));
      });
    }

    return items;
  },

  _refModal: function _refModal(modal) {
    this.modal = modal;
    return this;
  },
  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render: function render() {
    var children = this.props.element.getStandardChildren();
    var item = this._buildOutlineItem(this.props.element.getTagName(), UU5.Common.Tools.merge({}, this.props.element.props, { children: children }), true);

    return _react2.default.createElement(
      'div',
      this.getMainAttrs(),
      _tools2.default.findComponent('UU5.Bricks.Tree', { items: [item] }),
      _react2.default.createElement(_outlineModal2.default, { ref: this._refModal, parent: this }),
      this.getDisabledCover()
    );
  }
  //@@viewOff:render
});

exports.default = Outline;