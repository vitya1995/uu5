"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CcrReaderMixin = undefined;

var _environment = require("../environment/environment.js");

var _environment2 = _interopRequireDefault(_environment);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var CcrReaderMixin = exports.CcrReaderMixin = {

  //@@viewOn:statics
  statics: {
    "UU5.Common.CcrReaderMixin": {
      requiredMixins: ["UU5.Common.BaseMixin"],
      errors: {
        keyNotRegistered: 'Component with key %s is not registered.'
      }
    }
  },
  //@@viewOff:statics

  //@@viewOn:standardComponentLifeCycle
  getInitialState: function getInitialState() {
    // initialize
    this.registerMixin("UU5.Common.CcrReaderMixin");
    // state
    return null;
  },
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  hasUU5CommonCcrReaderMixin: function hasUU5CommonCcrReaderMixin() {
    return this.hasMixin("UU5.Common.CcrReaderMixin");
  },

  getUU5CommonCcrReaderMixinProps: function getUU5CommonCcrReaderMixinProps() {
    return {};
  },

  getUU5CommonCcrReaderMixinPropsToPass: function getUU5CommonCcrReaderMixinPropsToPass() {
    return this.getUU5CommonCcrReaderMixinProps();
  },

  getCcrComponentByKey: function getCcrComponentByKey(key) {
    return this.getCcrByKeyRegister()[key] || null;
  },

  isCcrRegisteredByKey: function isCcrRegisteredByKey(key) {
    return !!this.getCcrByKeyRegister()[key];
  },

  getCcrByKeyRegister: function getCcrByKeyRegister() {
    return _environment2.default.ccr.byKey;
  }
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  //@@viewOff:componentSpecificHelpers
};

exports.default = CcrReaderMixin;