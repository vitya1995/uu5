'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _createReactClass = require('create-react-class');

var _createReactClass2 = _interopRequireDefault(_createReactClass);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _uu5g = require('uu5g04');

var UU5 = _interopRequireWildcard(_uu5g);

var _formsNs = require('../forms-ns.js');

var _formsNs2 = _interopRequireDefault(_formsNs);

require('./item-list.less');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = (0, _createReactClass2.default)({
  displayName: 'item-list',


  //@@viewOn:mixins
  mixins: [UU5.Common.BaseMixin, UU5.Common.ElementaryMixin, UU5.Common.SectionMixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: _formsNs2.default.name("ItemList"),
    classNames: {
      main: _formsNs2.default.css("item-list"),
      header: _formsNs2.default.css("item-list-header"),
      body: _formsNs2.default.css("item-list-body"),
      footer: _formsNs2.default.css("item-list-footer"),
      selectedItem: _formsNs2.default.css("item-list-selected uu5-common-bg")
    },
    defaults: {
      childTagName: 'UU5.Forms.Select.option'
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    allowTags: _propTypes2.default.arrayOf(_propTypes2.default.string)
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      allowTags: []
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  changeValue: function changeValue(index, e, setStateCallback) {
    if (typeof this.props.onChange === 'function') {
      this.props.onChange({ value: index, event: e, component: this, setStateCallback: setStateCallback });
    } else if (typeof setStateCallback === 'function') {
      setStateCallback();
    }
  },

  //@@viewOff:interface

  //@@viewOn:overridingMethods
  shouldChildRender_: function shouldChildRender_(child) {
    var childTagName = UU5.Common.Tools.getChildTagName(child);
    var childTagNames = this.props.allowTags.concat(this.getDefault().childTagName);
    return childTagNames.indexOf(childTagName) > -1;
  },

  expandChildProps_: function expandChildProps_(child, i) {
    var _this = this;

    var props = UU5.Common.Tools.mergeDeep({}, child.props);

    if (this.props.value && this.props.value.indexOf(i) > -1) {
      props.selected = true;
      props.className = props.className ? props.className + ' ' + this.getClassName().selectedItem : this.getClassName().selectedItem;
      props.colorSchema = 'info';
    }

    props.mainAttrs = props.mainAttrs || {};
    props.mainAttrs.id = this.getId() + '-item-' + i;

    var childOnClick = props.onClick;
    props.onClick = function (opt) {
      _this.changeValue(opt.value, opt.event, childOnClick);
    };

    return props;
  },
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _getHeader: function _getHeader() {
    var result = void 0;
    if (this.props.header) {
      result = _react2.default.createElement(
        'div',
        { className: this.getClassName().header },
        this.getHeader()
      );
    }
    return result;
  },
  _getFooter: function _getFooter() {
    var result = void 0;
    if (this.props.footer) {
      result = _react2.default.createElement(
        'div',
        { className: this.getClassName().footer },
        this.getFooter()
      );
    }
    return result;
  },

  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render: function render() {
    return _react2.default.createElement(
      'div',
      this.getMainAttrs(),
      this._getHeader(),
      _react2.default.createElement(
        'div',
        { className: this.getClassName().body },
        this.getChildren()
      ),
      this._getFooter()
    );
  }
  //@@viewOn:render
});