'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _createReactClass = require('create-react-class');

var _createReactClass2 = _interopRequireDefault(_createReactClass);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _uu5g = require('uu5g04');

var UU5 = _interopRequireWildcard(_uu5g);

require('uu5g04-bricks');

var _formsNs = require('../forms-ns.js');

var _formsNs2 = _interopRequireDefault(_formsNs);

require('./items-input.less');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = (0, _createReactClass2.default)({
  displayName: 'items-input',


  //@@viewOn:mixins
  mixins: [UU5.Common.BaseMixin, UU5.Common.ElementaryMixin, UU5.Common.LsiMixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: _formsNs2.default.name("ItemsInput"),
    classNames: {
      main: _formsNs2.default.css("items-input"),
      loading: _formsNs2.default.css("items-loading-icon"),
      value: _formsNs2.default.css("input-form-item-value"),
      item: _formsNs2.default.css("items-input-item uu5-common-bg color-schema-blue"),
      link: _formsNs2.default.css("items-input-item-link"),
      icon: _formsNs2.default.css("items-input-item-icon")
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    value: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object, _propTypes2.default.arrayOf(_propTypes2.default.string), _propTypes2.default.arrayOf(_propTypes2.default.object)]),
    multiple: _propTypes2.default.bool,
    placeholder: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.string]),
    loading: _propTypes2.default.bool,
    onClick: _propTypes2.default.func,
    onItemClick: _propTypes2.default.func,
    feedback: _propTypes2.default.string
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      value: '',
      multiple: false,
      placeholder: null,
      loading: false,
      onClick: null,
      onItemClick: null,
      feedback: null
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  changeValue: function changeValue(index, e, setStateCallback) {
    if (typeof this.props.onChange === 'function') {
      this.props.onChange({ value: index, event: e, component: this, setStateCallback: setStateCallback });
    }
  },

  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _getPlaceholder: function _getPlaceholder() {
    var placeholder = void 0;
    if (this.props.placeholder) {
      if (typeof this.props.placeholder === 'string') {
        placeholder = this.props.placeholder;
      } else if (_typeof(this.props.placeholder) === 'object') {
        placeholder = this.getLsiItem(this.props.placeholder);
      }
    }

    return placeholder;
  },
  _getFeedbackIcon: function _getFeedbackIcon() {
    return this.props.loading ? _react2.default.createElement('span', { className: this.getClassName().loading }) : _react2.default.createElement(UU5.Bricks.Icon, { icon: this.props.icon });
  },
  _getItems: function _getItems() {
    var _this = this;

    var value = this.props.value;
    if (this.props.multiple && this.props.value && this.props.value instanceof Array) {
      value = this.props.value.map(function (item, key) {
        return _react2.default.createElement(
          UU5.Bricks.Span,
          { className: _this.getClassName("item"), key: key },
          _react2.default.Children.toArray(item),
          !_this.props.disabled && !_this.props.readonly && _react2.default.createElement(
            UU5.Bricks.Link,
            { className: _this.getClassName("link"), onClick: function onClick(link, e) {
                e.stopPropagation();
                _this.props.onItemClick({ component: _this, event: e, value: item, index: key });
              } },
            _react2.default.createElement(UU5.Bricks.Icon, { icon: 'mdi-close', className: _this.getClassName("icon") })
          )
        );
      });
    } else {
      value = _react2.default.Children.toArray(this.props.value);
    }

    this.props.value.length < 1 && (value = this._getPlaceholder());
    return value;
  },
  _getMainAttrs: function _getMainAttrs() {
    var mainAttrs = this.getMainAttrs();

    switch (this.props.feedback) {
      case "success":
        mainAttrs.className += " color-schema-" + UU5.Environment.getColorSchema("success");
        break;
      case "warning":
        mainAttrs.className += " color-schema-" + UU5.Environment.getColorSchema("warning");
        break;
      case "error":
        mainAttrs.className += " color-schema-" + UU5.Environment.getColorSchema("danger");
        break;
    }

    return mainAttrs;
  },

  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render: function render() {
    return _react2.default.createElement(
      'div',
      _extends({}, this._getMainAttrs(), { onClick: this.props.onClick }),
      _react2.default.createElement(
        'span',
        { className: this.getClassName().value },
        this._getItems()
      ),
      this._getFeedbackIcon()
    );
  }
  //@@viewOn:render
});