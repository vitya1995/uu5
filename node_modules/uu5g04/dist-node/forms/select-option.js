'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _createReactClass = require('create-react-class');

var _createReactClass2 = _interopRequireDefault(_createReactClass);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _uu5g = require('uu5g04');

var UU5 = _interopRequireWildcard(_uu5g);

require('uu5g04-bricks');

var _formsNs = require('./forms-ns.js');

var _formsNs2 = _interopRequireDefault(_formsNs);

require('./select-option.less');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = (0, _createReactClass2.default)({
  displayName: 'select-option',


  //@@viewOn:mixins
  mixins: [UU5.Common.BaseMixin, UU5.Common.PureRenderMixin, UU5.Common.ElementaryMixin, UU5.Common.ContentMixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: _formsNs2.default.name("Select.option"),
    classNames: {
      main: _formsNs2.default.css("select-option", "group-item")
    },
    errors: {
      invalidParent: 'Parent of this component is not Select.'
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    value: _propTypes2.default.string.isRequired,
    selectedContent: _propTypes2.default.any,
    onClick: _propTypes2.default.func
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      value: null,
      selectedContent: null,
      onClick: null
    };
  },

  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  componentWillMount: function componentWillMount() {
    // because of auto-completed items
    if (!this.getParentByType('isSelect') && !this.getParentByType('isTextInput')) {
      this.showError("invalidParent");
    }
  },


  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  getValue: function getValue() {
    return this.props.value;
  },

  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _getMainProps: function _getMainProps() {
    var _this = this;

    var props = this.getMainPropsToPass();

    props.onClick = function (link, e) {
      _this.props.onClick({ component: _this, event: e, value: _this.getIndex() });
    };

    if (!props.content && !this.props.children) {
      props.content = this.props.value;
    }

    props.content = props.content || this.props.children && _react2.default.Children.toArray(this.props.children);

    return props;
  },

  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render: function render() {
    return _react2.default.createElement(UU5.Bricks.Link, this._getMainProps());
  }
  //@@viewOff:render

});