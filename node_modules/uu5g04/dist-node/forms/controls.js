'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Controls = undefined;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _createReactClass = require('create-react-class');

var _createReactClass2 = _interopRequireDefault(_createReactClass);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _uu5g = require('uu5g04');

var UU5 = _interopRequireWildcard(_uu5g);

var _formsNs = require('./forms-ns.js');

var _formsNs2 = _interopRequireDefault(_formsNs);

require('uu5g04-bricks');

var _controlsMixin = require('./mixins/controls-mixin.js');

var _controlsMixin2 = _interopRequireDefault(_controlsMixin);

require('./controls.less');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Controls = exports.Controls = (0, _createReactClass2.default)({
  displayName: 'Controls',


  //@@viewOn:mixins
  mixins: [_controlsMixin2.default],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: _formsNs2.default.name("Controls"),
    classNames: {
      main: _formsNs2.default.css("controls")
    },
    lsi: function lsi() {
      return UU5.Environment.Lsi.Forms.form;
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    buttonReset: _propTypes2.default.bool,
    buttonValidate: _propTypes2.default.bool
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      buttonReset: false,
      buttonValidate: false
    };
  },

  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _save: function _save(e) {
    if (this.getForm().isValid()) {
      this.getForm().save();
    }

    return this;
  },
  _getMainPropsToPass: function _getMainPropsToPass() {
    var props = this.getMainPropsToPass();
    props.disabled = false;

    return props;
  },

  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render: function render() {
    var _this = this;

    return _react2.default.createElement(
      UU5.Common.Div,
      this._getMainPropsToPass(),
      this.props.buttonReset && _react2.default.createElement(UU5.Bricks.Button, { bgStyle: 'transparent', onClick: function onClick() {
          return _this.getForm().reset();
        }, content: this.getLsiComponent('reset'), disabled: this.isDisabled() }),
      this.props.buttonValidate && _react2.default.createElement(UU5.Bricks.Button, { bgStyle: 'transparent', onClick: function onClick() {
          return _this.getForm().validate();
        }, content: this.getLsiComponent('validate'), disabled: this.isDisabled() }),
      _react2.default.createElement(UU5.Bricks.Button, { onClick: function onClick() {
          return _this.getForm().cancel();
        }, content: this.getLsiComponent('cancel'), disabled: this.isDisabled() }),
      _react2.default.createElement(UU5.Bricks.Button, { colorSchema: 'primary', onClick: this._save, content: this.getLsiComponent('ok'), disabled: this.isDisabled() })
    );
  }
  //@@viewOff:render

});

exports.default = Controls;